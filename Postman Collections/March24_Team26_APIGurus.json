{
	"info": {
		"_postman_id": "06327f62-f2e2-42b0-8dff-fe1e0d81a5c5",
		"name": "LMS",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "DataDrivenInvaliddata",
			"item": [
				{
					"name": "User Login Controller",
					"item": [
						{
							"name": "User Sign in",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7fe63aff-3ce4-481a-b03c-3ad2d8da805b",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set(\"token\", jsonData.token);\r",
											"console.log(jsonData.token);\r",
											"// Check the status code and perform actions accordingly\r",
											"var statusCode = pm.response.code;\r",
											"if (statusCode === 401) {\r",
											"    pm.test(\"Status code is 401(Unauthorised)\", function () {\r",
											"        pm.response.to.have.status(401);\r",
											"    });\r",
											"} else if (statusCode === 404) {\r",
											"    pm.test(\"Status code is 404 (Not Found)\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"} else if (statusCode === 400) {\r",
											"    pm.test(\"Status code is 400 (Bad Request)\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"    });\r",
											"   }else if (statusCode === 200) {\r",
											"    pm.test(\"Status code is 200 (OK)\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    }); \r",
											"} else {\r",
											"    pm.test(\"Unexpected status code\", function () {\r",
											"        pm.expect.fail(\"Unexpected status code: \" + statusCode);\r",
											"    });\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4824f739-6cc0-4b8a-8dbc-3909b417f511",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"password\": \"{{password}}\",\r\n  \"userLoginEmailId\": \"{{loginEmailId}}\"\r\n}\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{BaseUrl}}/login"
							},
							"response": []
						}
					],
					"id": "2c2102a1-994f-4905-a4e4-1d0d0659b068"
				},
				{
					"name": "Program module",
					"item": [
						{
							"name": "Create New Program",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7fb7f1da-1c66-403b-b0dd-5da4991db51c",
										"exec": [
											"// Check the status code and perform actions accordingly\r",
											"var statusCode = pm.response.code;\r",
											"if (statusCode === 201) {\r",
											"    pm.test(\"Status code is 201 (Created)\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"} else if (statusCode === 404) {\r",
											"    pm.test(\"Status code is 404 (Not Found)\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"    } else if (statusCode === 401) {\r",
											"    pm.test(\"Status code is 401 (Unauthorized)\", function () {\r",
											"        pm.response.to.have.status(401);\r",
											"    });\r",
											"} else if (statusCode === 400) {\r",
											"    pm.test(\"Status code is 400 (Bad Request)\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"    });\r",
											"   } else if (statusCode === 200) {\r",
											"    pm.test(\"Status code is 200 (OK)\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else {\r",
											"    pm.test(\"Unexpected status code\", function () {\r",
											"        pm.expect.fail(\"Unexpected status code: \" + statusCode);\r",
											"    });\r",
											"}\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "642b06dd-40c4-4aa4-b724-f075f7258a0d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"programDescription\": \"{{programDescription}}\",\r\n  \"programName\": \"{{InvalidprogramName}}\",\r\n  \"programStatus\": \"{{programStatus}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{BaseUrl}}/saveprogram"
							},
							"response": []
						},
						{
							"name": "Update program by programName",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "042bd8f5-45d3-4022-b535-4c398ea1b5f1",
										"exec": [
											"\r",
											"// Check the status code and perform actions accordingly\r",
											"var statusCode = pm.response.code;\r",
											"if (statusCode === 201) {\r",
											"    pm.test(\"Status code is 201 (Created)\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"} else if (statusCode === 404) {\r",
											"    pm.test(\"Status code is 404 (Not Found)\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"    } else if (statusCode === 401) {\r",
											"    pm.test(\"Status code is 401 (Unauthorized)\", function () {\r",
											"        pm.response.to.have.status(401);\r",
											"    });\r",
											"} else if (statusCode === 400) {\r",
											"    pm.test(\"Status code is 400 (Bad Request)\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"    });\r",
											"   } else if (statusCode === 200) {\r",
											"    pm.test(\"Status code is 200 (OK)\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else {\r",
											"    pm.test(\"Unexpected status code\", function () {\r",
											"        pm.expect.fail(\"Unexpected status code: \" + statusCode);\r",
											"    });\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "5a4ce479-343e-45e9-8205-6a8e276707e7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"programDescription\": \"{{programDescription}}\",\r\n  \"programName\": \"{{UpdateInvalidprogramName}}\",\r\n  \"programStatus\": \"{{programStatus}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{BaseUrl}}/program/{{UpdateInvalidprogramName}}"
							},
							"response": []
						},
						{
							"name": "Update program by programID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4a9a489a-ca1f-4ecf-bd1d-c13a3bd0214a",
										"exec": [
											"// Check the status code and perform actions accordingly\r",
											"var statusCode = pm.response.code;\r",
											"if (statusCode === 201) {\r",
											"    pm.test(\"Status code is 201 (Created)\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"} else if (statusCode === 404) {\r",
											"    pm.test(\"Status code is 404 (Not Found)\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"    } else if (statusCode === 401) {\r",
											"    pm.test(\"Status code is 401 (Unauthorized)\", function () {\r",
											"        pm.response.to.have.status(401);\r",
											"    });\r",
											"} else if (statusCode === 400) {\r",
											"    pm.test(\"Status code is 400 (Bad Request)\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"    });\r",
											"   } else if (statusCode === 200) {\r",
											"    pm.test(\"Status code is 200 (OK)\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else {\r",
											"    pm.test(\"Unexpected status code\", function () {\r",
											"        pm.expect.fail(\"Unexpected status code: \" + statusCode);\r",
											"    });\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "9c18cf87-adb2-42a8-ab1f-d1d1eb5935eb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"programDescription\": \"{{programDescription}}\",\r\n  \"programName\": \"{{programName1}}\",\r\n  \"programStatus\": \"{{programStatus}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/putprogram/:{invalidprogramID}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"putprogram",
										":{invalidprogramID}"
									],
									"variable": [
										{
											"key": "{invalidprogramID}",
											"value": "1234907653"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "6bf2f9c4-7760-4b8e-bd4f-1b1ebc60414a"
				},
				{
					"name": "Program batch module",
					"item": [
						{
							"name": "create new batch",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7fb7f1da-1c66-403b-b0dd-5da4991db51c",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"batchID\", jsonData.batchId);\r",
											"\r",
											"pm.collectionVariables.set(\"batchName\", jsonData.batchName);\r",
											"\r",
											"\r",
											"var statusCode = pm.response.code;\r",
											"if (statusCode === 201) {\r",
											"    pm.test(\"Status code is 201 (Created)\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"} else if (statusCode === 404) {\r",
											"    pm.test(\"Status code is 404 (Not Found)\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"    } else if (statusCode === 401) {\r",
											"    pm.test(\"Status code is 401 (Unauthorized)\", function () {\r",
											"        pm.response.to.have.status(401);\r",
											"    });\r",
											"} else if (statusCode === 400) {\r",
											"    pm.test(\"Status code is 400 (Bad Request)\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"    });\r",
											"   } else if (statusCode === 200) {\r",
											"    pm.test(\"Status code is 200 (OK)\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else {\r",
											"    pm.test(\"Unexpected status code\", function () {\r",
											"        pm.expect.fail(\"Unexpected status code: \" + statusCode);\r",
											"    });\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b82d3fec-9eeb-4e6b-bc76-70c75e059ea0",
										"exec": [
											"// if( pm.info.iteration === pm.info.iterationCount - 1) {\r",
											"//    pm.variables.set(\"programID1\", pm.collectionVariables.get(\"programID1\"));\r",
											"// }"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0a4ba46d-384e-49c2-a77d-936beef21888",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"batchDescription\": \"{{batchDescription}}\",\r\n  \"batchName\": \"{{batchName}}\",\r\n  \"batchNoOfClasses\": {{batchNoOfClasses}},\r\n  \"batchStatus\": \"{{batchStatus}}\",\r\n  \"programId\": {{programID1}}\r\n }\r\n\r\n\r\n\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{BaseUrl}}/batches"
							},
							"response": []
						},
						{
							"name": "Update batch by batch ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "902198f3-3dbd-40cc-b7f5-ae15e63e71b1",
										"exec": [
											"// Check the status code and perform actions accordingly\r",
											"var statusCode = pm.response.code;\r",
											"if (statusCode === 201) {\r",
											"    pm.test(\"Status code is 201 (Created)\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"} else if (statusCode === 404) {\r",
											"    pm.test(\"Status code is 404 (Not Found)\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"    } else if (statusCode === 401) {\r",
											"    pm.test(\"Status code is 401 (Unauthorized)\", function () {\r",
											"        pm.response.to.have.status(401);\r",
											"    });\r",
											"} else if (statusCode === 400) {\r",
											"    pm.test(\"Status code is 400 (Bad Request)\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"    });\r",
											"   } else if (statusCode === 200) {\r",
											"    pm.test(\"Status code is 200 (OK)\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else {\r",
											"    pm.test(\"Unexpected status code\", function () {\r",
											"        pm.expect.fail(\"Unexpected status code: \" + statusCode);\r",
											"    });\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "7ac6428f-0437-4613-a0ae-744a88cb2dfe",
										"exec": [
											"// if( pm.info.iteration === pm.info.iterationCount - 1) {\r",
											"//    pm.variables.set(\"programID1\", pm.collectionVariables.get(\"programID1\"));\r",
											"// }"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "581ff636-e63d-4fd5-a2d6-586eaa8c39f7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"batchDescription\": \"{{updateBatchDescription}}\",\r\n  \"batchName\": \"{{updateBatchName}}\",\r\n  \"batchNoOfClasses\": {{updateBatchNoOfClasses}},\r\n  \"batchStatus\": \"{{updateBatchStatus}}\",\r\n  \"programId\": {{programID1}}\r\n }\r\n\r\n\r\n\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/batches/:batchID",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"batches",
										":batchID"
									],
									"variable": [
										{
											"key": "batchID",
											"value": "{{batchID}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "bd445475-4adc-4a96-b734-76d75799e559"
				},
				{
					"name": "User Module",
					"item": [
						{
							"name": "create user login with role",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a563a972-5178-436d-a8c7-fd5e55ee7c6c",
										"exec": [
											"// Check the status code and perform actions accordingly\r",
											"var statusCode = pm.response.code;\r",
											"if (statusCode === 201) {\r",
											"    pm.test(\"Status code is 201 (Created)\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"} else if (statusCode === 404) {\r",
											"    pm.test(\"Status code is 404 (Not Found)\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"    } else if (statusCode === 401) {\r",
											"    pm.test(\"Status code is 401 (Unauthorized)\", function () {\r",
											"        pm.response.to.have.status(401);\r",
											"    });\r",
											"} else if (statusCode === 400) {\r",
											"    pm.test(\"Status code is 400 (Bad Request)\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"    });\r",
											"   } else if (statusCode === 200) {\r",
											"    pm.test(\"Status code is 200 (OK)\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else {\r",
											"    pm.test(\"Unexpected status code\", function () {\r",
											"        pm.expect.fail(\"Unexpected status code: \" + statusCode);\r",
											"    });\r",
											"}\r",
											"//create user id collection variable\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"userId\",jsonData.userId);\r",
											"// create roleid as collection variable\r",
											"var requestBody = pm.request.body;\r",
											"var jsonData1=JSON.parse(requestBody);\r",
											"var roleId= jsonData1.userRoleMaps[0].roleId;\r",
											"pm.collectionVariables.set(\"roleId\",roleId);\r",
											"if (pm.response.code==201){\r",
											"//schema validation \r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-06/schema#\",\r",
											"    \"$ref\": \"#/definitions/Welcome6\",\r",
											"    \"definitions\": {\r",
											"        \"Welcome6\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"userId\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userFirstName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLastName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userMiddleName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userPhoneNumber\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"userLocation\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userTimeZone\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLinkedinUrl\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                },\r",
											"                \"userEduUg\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userEduPg\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userComments\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userVisaStatus\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLoginEmail\": {\r",
											"                    \"type\": \"string\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"userComments\",\r",
											"                \"userEduPg\",\r",
											"                \"userEduUg\",\r",
											"                \"userFirstName\",\r",
											"                \"userId\",\r",
											"                \"userLastName\",\r",
											"                \"userLinkedinUrl\",\r",
											"                \"userLocation\",\r",
											"                \"userLoginEmail\",\r",
											"                \"userMiddleName\",\r",
											"                \"userPhoneNumber\",\r",
											"                \"userTimeZone\",\r",
											"                \"userVisaStatus\"\r",
											"            ],\r",
											"            \"title\": \"Welcome6\"\r",
											"        }\r",
											"    }\r",
											"}\r",
											"pm.test(\"Response body matches schema\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
											"});\r",
											"//validate mandatory fields are not empty\r",
											"pm.test(\"First name is not empty\", function () {\r",
											"    pm.expect(jsonData.userFirstName).to.not.be.empty;\r",
											"});\r",
											"pm.test(\"Last name is not empty\", function () {\r",
											"    pm.expect(jsonData.userLastName).to.not.be.empty;\r",
											"});\r",
											"pm.test(\"email is not empty\",function(){\r",
											"    pm.expect(jsonData.userLoginEmail).to.be.not.empty;\r",
											"});\r",
											"pm.test(\"LinkedIn url is not empty\",function(){\r",
											"    pm.expect(jsonData.userLinkedinUrl).to.be.not.empty;\r",
											"});\r",
											"pm.test(\"user comments is not empty\",function(){\r",
											"    pm.expect(jsonData.userComments).to.be.not.empty;\r",
											"});\r",
											"pm.test(\"user education PG is not empty\",function(){\r",
											"    pm.expect(jsonData.userEduPg).to.be.not.empty;\r",
											"});\r",
											"pm.test(\"user education UG is not empty\",function(){\r",
											"    pm.expect(jsonData.userEduUg).to.be.not.empty;\r",
											"});\r",
											"pm.test(\"Middle name is not empty\",function(){\r",
											"    pm.expect(jsonData.userMiddleName).to.be.not.empty;\r",
											"});\r",
											"pm.test(\"timezone is not empty\",function(){\r",
											"    pm.expect(jsonData.userTimeZone).to.be.not.empty;\r",
											"});\r",
											"pm.test(\"visa status is not empty\",function(){\r",
											"    pm.expect(jsonData.userVisaStatus).to.be.not.empty;\r",
											"});\r",
											"}  \r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0f46398f-7e54-41fd-b43a-ec98aeb40970",
										"exec": [
											"// if(pm.info.iteration<pm.info.iterationCount-1){\r",
											"//     pm.execution.skipRequest();\r",
											"// }"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "9e9b2a94-c5ba-4344-a234-3dbd643c32b5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"userComments\": \"{{userComments}}\",\r\n  \"userEduPg\": \"{{userEduPg}}\",\r\n  \"userEduUg\": \"{{userEduUg}}\",\r\n  \"userFirstName\": \"{{userFirstName}}\",\r\n  \"userLastName\": \"{{userLastName}}\",\r\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\r\n  \"userLocation\": \"{{userLocation}}\",\r\n  \"userLogin\": {\r\n    \"loginStatus\": \"active\",\r\n    \"userLoginEmail\": \"{{userLoginEmail}}\"\r\n  },\r\n  \"userMiddleName\": \"{{userMiddleName}}\",\r\n  \"userPhoneNumber\": {{userPhoneNumber}},\r\n  \"userRoleMaps\": [\r\n    {\r\n      \"roleId\": \"{{roleId}}\",\r\n      \"userRoleStatus\": \"{{userRoleStatus}}\"\r\n    }\r\n  ],\r\n  \"userTimeZone\": \"{{userTimeZone}}\",\r\n  \"userVisaStatus\": \"{{userVisaStatus}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{BaseUrl}}/users/roleStatus"
							},
							"response": []
						},
						{
							"name": "update user",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f3afc033-e3db-42b9-8302-a058c07d9d55",
										"exec": [
											"//schema validation \r",
											"var schema= {\r",
											"   \r",
											"            \"type\": \"object\",\r",
											"             'items': [{\r",
											"                 \"type\": \"object\",\r",
											"            \"properties\": {\r",
											"                \"userId\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userFirstName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLastName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userMiddleName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userPhoneNumber\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"userLocation\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userTimeZone\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLinkedinUrl\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                },\r",
											"                \"userEduUg\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userEduPg\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userComments\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userVisaStatus\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLoginEmail\": {\r",
											"                    \"type\": \"string\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \r",
											"                \"userFirstName\",\r",
											"                \"userId\",\r",
											"                \"userLastName\",\r",
											"                \"userPhoneNumber\",\r",
											"                \"userTimeZone\",\r",
											"                \"userVisaStatus\"\r",
											"            ]\r",
											"             }]\r",
											"          \r",
											"        }\r",
											"    \r",
											"\r",
											"pm.test(\"Response body matches schema\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
											"});\r",
											"var statusCode = pm.response.code;\r",
											"if (statusCode === 201) {\r",
											"    pm.test(\"Status code is 201 (Created)\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"} else if (statusCode === 404) {\r",
											"    pm.test(\"Status code is 404 (Not Found)\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"    } else if (statusCode === 200) {\r",
											"    pm.test(\"Status code is 200 (Ok)\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"     } else if (statusCode === 401) {\r",
											"    pm.test(\"Status code is 401 (Unauthorized)\", function () {\r",
											"        pm.response.to.have.status(401);\r",
											"    });\r",
											"} else if (statusCode === 400) {\r",
											"    pm.test(\"Status code is 400 (Bad Request)\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"    });\r",
											"} else {\r",
											"    pm.test(\"Unexpected status code\", function () {\r",
											"        pm.expect.fail(\"Unexpected status code: \" + statusCode);\r",
											"    });\r",
											"}\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "30a024eb-744d-4333-994b-793cddb6f157",
										"exec": [
											"// if(pm.info.iteration<pm.info.iterationCount-1){\r",
											"//     pm.execution.skipRequest();\r",
											"// }"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a3524fbf-ff74-4239-897e-c4f1ed7f3e3d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"userFirstName\": \"{{updateduserFirstName}}\",\r\n  \"userLastName\": \"{{updateduserLastName}}\",\r\n  \"userPhoneNumber\": {{updateduserPhoneNumber}},\r\n  \"userTimeZone\": \"{{updateduserTimeZone}}\",\r\n  \"userVisaStatus\": \"{{updateduserVisaStatus}}\",\r\n  \"userLoginEmail\" : \"{{updateduserLoginEmail}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/users/:{userId}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"users",
										":{userId}"
									],
									"variable": [
										{
											"id": "d7360250-3d89-40cb-877a-5c45af9fcb8d",
											"key": "{userId}",
											"value": "{{userId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "update user RoleID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "06da3016-2867-41ff-ad06-a89a3b998f44",
										"exec": [
											"var statusCode = pm.response.code;\r",
											"if (statusCode === 201) {\r",
											"    pm.test(\"Status code is 201 (Created)\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"} else if (statusCode === 404) {\r",
											"    pm.test(\"Status code is 404 (Not Found)\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"    } else if (statusCode === 200) {\r",
											"    pm.test(\"Status code is 200 (Ok)\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"     } else if (statusCode === 401) {\r",
											"    pm.test(\"Status code is 401 (Unauthorized)\", function () {\r",
											"        pm.response.to.have.status(401);\r",
											"    });\r",
											"} else if (statusCode === 400) {\r",
											"    pm.test(\"Status code is 400 (Bad Request)\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"    });\r",
											"} else {\r",
											"    pm.test(\"Unexpected status code\", function () {\r",
											"        pm.expect.fail(\"Unexpected status code: \" + statusCode);\r",
											"    });\r",
											"}\r",
											"\r",
											"pm.test('Content-Type header is present', () => {\r",
											"    pm.response.to.have.header('Content-Type');\r",
											"})\r",
											"var contType = pm.response.headers.get(\"Content-Type\");\r",
											"\r",
											"if (contType === \"text/html;charset=utf-8\" || contType === \"application/json\") {\r",
											"    pm.test(\"Content-Type header is present\", () => {\r",
											"        pm.response.to.have.header(\"Content-Type\");\r",
											"    });\r",
											"} else {\r",
											"    console.error(\"Unexpected Content-Type:\", contType);\r",
											"}\r",
											"  try {\r",
											"    // Parse the request body as JSON\r",
											"    var jsonreq = JSON.parse(pm.request.body);\r",
											"    // Check if \"userRoleList\" is an array and not empty\r",
											"    if (Array.isArray(jsonreq.userRoleList) && jsonreq.userRoleList.length > 0) {\r",
											"        // Set collection variable \"roleId2\" with the value of the first element in \"userRoleList\"\r",
											"        pm.collectionVariables.set(\"roleId2\", jsonreq.userRoleList[0]);\r",
											"        console.log(\"roleId2 set successfully:\", pm.collectionVariables.get(\"roleId2\"));\r",
											"    } else {\r",
											"        console.error(\"Error: 'userRoleList' is not a valid array or is empty.\");\r",
											"    }\r",
											"} catch (error) {\r",
											"    console.error(\"Error parsing request body as JSON:\", error.message);\r",
											"}\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "abd69976-5f7a-4bf2-a751-1d8bd2cc7b6e",
										"exec": [
											"  console.log(pm.collectionVariables.get(\"roleId\"));\r",
											"//  if(pm.info.iteration<pm.info.iterationCount-1){\r",
											"//     pm.execution.skipRequest();\r",
											"// }"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "34c7926b-e3b9-4448-b645-880f91f13ae1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"userRoleList\": [\r\n    \"R02\"\r\n    ]\r\n}\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/users/roleId/:{userId}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"users",
										"roleId",
										":{userId}"
									],
									"variable": [
										{
											"id": "9e5df789-d348-4b59-af67-5b85f6e94bd3",
											"key": "{userId}",
											"value": "U218"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "update user Role program batch status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9b2f863b-cc09-40af-b4ec-693212880af3",
										"exec": [
											"var statusCode = pm.response.code;\r",
											"if (statusCode === 201) {\r",
											"    pm.test(\"Status code is 201 (Created)\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"} else if (statusCode === 404) {\r",
											"    pm.test(\"Status code is 404 (Not Found)\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"    } else if (statusCode === 200) {\r",
											"    pm.test(\"Status code is 200 (Ok)\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"     } else if (statusCode === 401) {\r",
											"    pm.test(\"Status code is 401 (Unauthorized)\", function () {\r",
											"        pm.response.to.have.status(401);\r",
											"    });\r",
											"} else if (statusCode === 400) {\r",
											"    pm.test(\"Status code is 400 (Bad Request)\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"    });\r",
											"} else {\r",
											"    pm.test(\"Unexpected status code\", function () {\r",
											"        pm.expect.fail(\"Unexpected status code: \" + statusCode);\r",
											"    });\r",
											"}\r",
											"\r",
											"pm.test(\"Content-Type header is present\", ()=> {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "9aeac4e3-4225-4f2a-8fd7-46180c83b67f",
										"exec": [
											"// if(pm.info.iteration<pm.info.iterationCount-1){\r",
											"//     pm.execution.skipRequest();\r",
											"// }"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "698fa89e-6e3d-4b92-98ae-90476d2a6e6f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"programId\": \"{{programID1}}\",\r\n  \"roleId\": \"{{roleId1}}\",\r\n  \"userId\": \"{{userId}}\",\r\n  \"userRoleProgramBatches\": [\r\n    {\r\n      \"batchId\": \"{{batchID}}\",\r\n      \"userRoleProgramBatchStatus\": \"active\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/users/roleProgramBatchStatus/:{userId}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"users",
										"roleProgramBatchStatus",
										":{userId}"
									],
									"variable": [
										{
											"id": "f91af453-45cd-470a-a520-b873ca1ff1ab",
											"key": "{userId}",
											"value": "{{userId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "update user role status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8357288e-3276-41e8-a620-340e63f8e563",
										"exec": [
											"var statusCode = pm.response.code;\r",
											"if (statusCode === 201) {\r",
											"    pm.test(\"Status code is 201 (Created)\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"} else if (statusCode === 404) {\r",
											"    pm.test(\"Status code is 404 (Not Found)\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"    } else if (statusCode === 200) {\r",
											"    pm.test(\"Status code is 200 (Ok)\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"     } else if (statusCode === 401) {\r",
											"    pm.test(\"Status code is 401 (Unauthorized)\", function () {\r",
											"        pm.response.to.have.status(401);\r",
											"    });\r",
											"} else if (statusCode === 400) {\r",
											"    pm.test(\"Status code is 400 (Bad Request)\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"    });\r",
											"} else {\r",
											"    pm.test(\"Unexpected status code\", function () {\r",
											"        pm.expect.fail(\"Unexpected status code: \" + statusCode);\r",
											"    });\r",
											"}\r",
											"\r",
											"\r",
											"pm.test(\"Content-Type header is present\", () => {\r",
											" pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"var contType = pm.response.headers.get(\"Content-Type\");\r",
											"\r",
											"if (contType === \"text/html;charset=utf-8\" || contType === \"application/json\") {\r",
											"    pm.test(\"Content-Type header is present\", () => {\r",
											"        pm.response.to.have.header(\"Content-Type\");\r",
											"    });\r",
											"} else {\r",
											"    console.error(\"Unexpected Content-Type:\", contType);\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "75bb02f3-8817-46ab-9e19-2c679b6c7a49",
										"exec": [
											"// if(pm.info.iteration<pm.info.iterationCount-1){\r",
											"//     pm.execution.skipRequest();\r",
											"// }"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c03340f2-c39b-497f-993f-81e129cbb84c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{token}}"
									}
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"roleId\": \"{{roleId1}}\",\r\n  \"userRoleStatus\": \"inactive\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{BaseUrl}}/users/roleStatus/{{userId}}"
							},
							"response": []
						},
						{
							"name": "update User Login Status",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7f1257ec-89aa-49d9-b8d2-d6ae67cdee6e",
										"exec": [
											"// if(pm.info.iteration<pm.info.iterationCount-1){\r",
											"//     pm.execution.skipRequest();\r",
											"// }"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "cce7b898-e6d8-4977-aa32-5045e3bb5266",
										"exec": [
											"var statusCode = pm.response.code;\r",
											"if (statusCode === 201) {\r",
											"    pm.test(\"Status code is 201 (Created)\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"} else if (statusCode === 404) {\r",
											"    pm.test(\"Status code is 404 (Not Found)\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"    } else if (statusCode === 200) {\r",
											"    pm.test(\"Status code is 200 (Ok)\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"     } else if (statusCode === 401) {\r",
											"    pm.test(\"Status code is 401 (Unauthorized)\", function () {\r",
											"        pm.response.to.have.status(401);\r",
											"    });\r",
											"} else if (statusCode === 400) {\r",
											"    pm.test(\"Status code is 400 (Bad Request)\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"    });\r",
											"} else {\r",
											"    pm.test(\"Unexpected status code\", function () {\r",
											"        pm.expect.fail(\"Unexpected status code: \" + statusCode);\r",
											"    });\r",
											"}\r",
											"\r",
											"var contType = pm.response.headers.get(\"Content-Type\");\r",
											"\r",
											"if (contType === \"text/html;charset=utf-8\" || contType === \"application/json\") {\r",
											"    pm.test(\"Content-Type header is present\", () => {\r",
											"        pm.response.to.have.header(\"Content-Type\");\r",
											"    });\r",
											"} else {\r",
											"    console.error(\"Unexpected Content-Type:\", contType);\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "abca07c2-3561-41f5-b353-f93ec3108dbd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"loginStatus\": \"\",\r\n  \"password\": \"\",\r\n  \"roleIds\": [\r\n    \"\"\r\n  ],\r\n  \"status\": \"active\",\r\n  \"userLoginEmail\": \"{{updateuserLoginEmail}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/users/userLogin/:{userId}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"users",
										"userLogin",
										":{userId}"
									],
									"variable": [
										{
											"id": "ab3b5ce3-3f21-4a71-ac55-f8356af70b53",
											"key": "{userId}",
											"value": "{{userId}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "2404aa49-64db-4c82-a09e-0fbda1037038"
				}
			],
			"id": "58af1c99-e212-419e-afb3-de90d2ae6742",
			"auth": {
				"type": "bearer",
				"bearer": {
					"token": "{{token}}"
				}
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "cdf43de0-f6f5-4b04-aaf4-6c6a0c7269e7",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "6af2c734-b625-4d1c-9da6-62244fc8708b",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "DataDrivenEndtoEnd",
			"item": [
				{
					"name": "User Login Controller",
					"item": [
						{
							"name": "User Sign in",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7fe63aff-3ce4-481a-b03c-3ad2d8da805b",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.collectionVariables.set(\"token\", jsonData.token);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "1548d15d-4ea2-4da5-b3ed-021bcbb1e8b1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"password\": \"{{password}}\",\r\n  \"userLoginEmailId\": \"{{loginEmailId}}\"\r\n}\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{BaseUrl}}/login"
							},
							"response": []
						}
					],
					"id": "474b6eb4-a451-421d-a631-9bad13447288"
				},
				{
					"name": "Program module",
					"item": [
						{
							"name": "Create New Program",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7fb7f1da-1c66-403b-b0dd-5da4991db51c",
										"exec": [
											"var response = pm.response.json();\r",
											"\r",
											"\r",
											"\r",
											"pm.collectionVariables.set(\"programID1\", response.programId);  \r",
											" pm.collectionVariables.set(\"programName1\", response.programName);\r",
											"\r",
											"pm.test(\"Content-Type header is present\", () => {\r",
											" pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type header is application/json\", ()=> {\r",
											"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
											"});\r",
											"\r",
											"pm.test(\"status code is 201\", ()=>{\r",
											"   pm.response.to.have.status(201);\r",
											"} );\r",
											"\r",
											"pm.test(\"status code has string\", () =>{\r",
											"    pm.response.to.have.status(\"Created\");\r",
											"});\r",
											"\r",
											"const jsonData = pm.response.json();\r",
											"\r",
											"//Json schema validation\r",
											"var schema = {\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"programId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"programName\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"programDescription\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"programStatus\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"creationTime\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"lastModTime\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"programId\",\r",
											"    \"programName\",\r",
											"    \"programDescription\",\r",
											"    \"programStatus\",\r",
											"    \"creationTime\",\r",
											"    \"lastModTime\"\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"JSON Schema is valid\" ,() => {\r",
											"   pm.expect(tv4.validate(jsonData,schema)).to.be.true;\r",
											"}\r",
											"\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "5a181575-5276-4fbb-aa65-bd831b8b3b1e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"programDescription\": \"{{programDescription}}\",\r\n  \"programName\": \"{{programName}}\",\r\n  \"programStatus\": \"{{programStatus}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{BaseUrl}}/saveprogram"
							},
							"response": []
						},
						{
							"name": "Get all Programs",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e74224ae-9955-4738-b515-a234f1993a77",
										"exec": [
											"var response = pm.response.json();\r",
											"const jsonData = pm.response.json();\r",
											"pm.test(\"Content-Type header is present\", () => {\r",
											" pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type header is application/json\", ()=> {\r",
											"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
											"});\r",
											"\r",
											"pm.test(\"status code is 200\", ()=>{\r",
											"   pm.response.to.have.status(200);\r",
											"} );\r",
											"\r",
											"pm.test(\"status code has string\", () =>{\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"var schema={\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"array\",\r",
											"  \"items\": [\r",
											"    {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"programId\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"programName\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"programDescription\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"programStatus\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"creationTime\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"lastModTime\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"programId\",\r",
											"        \"programName\",\r",
											"        \"programDescription\",\r",
											"        \"programStatus\",\r",
											"        \"creationTime\",\r",
											"        \"lastModTime\"\r",
											"      ]\r",
											"    }\r",
											"  ]\r",
											"}\r",
											"pm.test(\"JSON Schema is valid\" ,() => {\r",
											"   pm.expect(tv4.validate(jsonData,schema)).to.be.true;\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "aa850edb-e1b4-437f-84e1-7cf423e9bd5a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{BaseUrl}}/allPrograms"
							},
							"response": []
						},
						{
							"name": "Get program by ProgramID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ae819ef9-ca28-4b09-92bb-4d8b45df8fbc",
										"exec": [
											"var response = pm.response.json();\r",
											"const jsonData = pm.response.json();\r",
											"pm.test(\"Content-Type header is present\", () => {\r",
											" pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type header is application/json\", ()=> {\r",
											"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
											"});\r",
											"\r",
											"pm.test(\"status code is 200\", ()=>{\r",
											"   pm.response.to.have.status(200);\r",
											"} );\r",
											"\r",
											"pm.test(\"status code has string\", () =>{\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"var schema={\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"programId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"programName\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"programDescription\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"programStatus\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"creationTime\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"lastModTime\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"programId\",\r",
											"    \"programName\",\r",
											"    \"programDescription\",\r",
											"    \"programStatus\",\r",
											"    \"creationTime\",\r",
											"    \"lastModTime\"\r",
											"  ]\r",
											"}\r",
											"pm.test(\"JSON Schema is valid\" ,() => {\r",
											"   pm.expect(tv4.validate(jsonData,schema)).to.be.true;\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "53f2a793-2643-41b2-98d7-b17974ef8f97",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/programs/:programID1",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"programs",
										":programID1"
									],
									"variable": [
										{
											"key": "programID1",
											"value": "{{programID1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update program by programName",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "042bd8f5-45d3-4022-b535-4c398ea1b5f1",
										"exec": [
											"var response = pm.response.json();\r",
											"const jsonData = pm.response.json();\r",
											"pm.test(\"Content-Type header is present\", () => {\r",
											" pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type header is application/json\", ()=> {\r",
											"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
											"});\r",
											"\r",
											"pm.test(\"status code is 200\", ()=>{\r",
											"   pm.response.to.have.status(200);\r",
											"} );\r",
											"\r",
											"pm.test(\"status code has string\", () =>{\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"var schema={\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"programId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"programName\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"programDescription\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"programStatus\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"creationTime\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"lastModTime\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"programId\",\r",
											"    \"programName\",\r",
											"    \"programDescription\",\r",
											"    \"programStatus\",\r",
											"    \"creationTime\",\r",
											"    \"lastModTime\"\r",
											"  ]\r",
											"}\r",
											"pm.test(\"JSON Schema is valid\" ,() => {\r",
											"   pm.expect(tv4.validate(jsonData,schema)).to.be.true;\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c6ecfd97-1f16-4d04-9f93-eacc0876ee35",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"programDescription\": \"{{updateprogramdesc}}\",\r\n  \"programName\": \"{{programName1}}\",\r\n  \"programStatus\": \"{{programStatus}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{BaseUrl}}/program/{{programName1}}"
							},
							"response": []
						},
						{
							"name": "Update program by programID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4a9a489a-ca1f-4ecf-bd1d-c13a3bd0214a",
										"exec": [
											"var response = pm.response.json();\r",
											"const jsonData = pm.response.json();\r",
											"pm.test(\"Content-Type header is present\", () => {\r",
											" pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type header is application/json\", ()=> {\r",
											"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
											"});\r",
											"\r",
											"pm.test(\"status code is 200\", ()=>{\r",
											"   pm.response.to.have.status(200);\r",
											"} );\r",
											"\r",
											"pm.test(\"status code has string\", () =>{\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"var schema={\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"programId\": {\r",
											"      \"type\": \"integer\"\r",
											"    },\r",
											"    \"programName\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"programDescription\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"programStatus\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"creationTime\": {\r",
											"      \"type\": \"string\"\r",
											"    },\r",
											"    \"lastModTime\": {\r",
											"      \"type\": \"string\"\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"programId\",\r",
											"    \"programName\",\r",
											"    \"programDescription\",\r",
											"    \"programStatus\",\r",
											"    \"creationTime\",\r",
											"    \"lastModTime\"\r",
											"  ]\r",
											"}\r",
											"pm.test(\"JSON Schema is valid\" ,() => {\r",
											"   pm.expect(tv4.validate(jsonData,schema)).to.be.true;\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e6b303b0-bc25-4e10-aa79-79df2b62373c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"programDescription\": \"{{updateprogramdesc}}\",\r\n  \"programName\": \"{{programName1}}\",\r\n  \"programStatus\": \"{{programStatus}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/putprogram/:programID1",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"putprogram",
										":programID1"
									],
									"variable": [
										{
											"key": "programID1",
											"value": "{{programID1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all programs with users",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "65f71e59-f561-4591-a66a-c5e7eb692d1d",
										"exec": [
											"var response = pm.response.json();\r",
											"const jsonData = pm.response.json();\r",
											"pm.test(\"Content-Type header is present\", () => {\r",
											" pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type header is application/json\", ()=> {\r",
											"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
											"});\r",
											"\r",
											"pm.test(\"status code is 200\", ()=>{\r",
											"   pm.response.to.have.status(200);\r",
											"} );\r",
											"\r",
											"pm.test(\"status code has string\", () =>{\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"var schema={\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"array\",\r",
											"  \"items\": [\r",
											"    {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"programId\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"programName\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"programDescription\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"programStatus\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"programUsers\": {\r",
											"          \"type\": \"array\",\r",
											"          \"items\": [\r",
											"            {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"userId\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"userFirstName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"userLastName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"userMiddleName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"userPhoneNumber\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"userLocation\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"userTimeZone\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"userLinkedinUrl\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"userEduUg\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"userEduPg\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"userComments\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"userVisaStatus\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"userLoginEmail\": {\r",
											"                  \"type\": \"null\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"userId\",\r",
											"                \"userFirstName\",\r",
											"                \"userLastName\",\r",
											"                \"userMiddleName\",\r",
											"                \"userPhoneNumber\",\r",
											"                \"userLocation\",\r",
											"                \"userTimeZone\",\r",
											"                \"userLinkedinUrl\",\r",
											"                \"userEduUg\",\r",
											"                \"userEduPg\",\r",
											"                \"userComments\",\r",
											"                \"userVisaStatus\",\r",
											"                \"userLoginEmail\"\r",
											"              ]\r",
											"            }\r",
											"          ]\r",
											"        },\r",
											"        \"creationTime\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"lastModTime\": {\r",
											"          \"type\": \"string\"\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"programId\",\r",
											"        \"programName\",\r",
											"        \"programDescription\",\r",
											"        \"programStatus\",\r",
											"        \"programUsers\",\r",
											"        \"creationTime\",\r",
											"        \"lastModTime\"\r",
											"      ]\r",
											"    }\r",
											"  ]\r",
											"}\r",
											"\r",
											"pm.test(\"JSON Schema is valid\" ,() => {\r",
											"   pm.expect(tv4.validate(jsonData,schema)).to.be.true;\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "40302a41-c811-4d52-bfe0-6d9b554e7563",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{BaseUrl}}/allProgramsWithUsers"
							},
							"response": []
						}
					],
					"id": "4d319d6b-fa31-413c-8c1c-87c62e1238f4"
				},
				{
					"name": "Program batch module",
					"item": [
						{
							"name": "create new batch",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7fb7f1da-1c66-403b-b0dd-5da4991db51c",
										"exec": [
											"\r",
											"const response=pm.response.json();\r",
											"//var expectedBatch=pm.iterationData.get(\"program\");\r",
											"\r",
											"pm.collectionVariables.set(\"batchID\", response.batchId);\r",
											"pm.collectionVariables.set(\"batchName\", response.batchName);\r",
											"\r",
											"var schema=\r",
											"{\r",
											"    \"$schema\": \"http://json-schema.org/draft-06/schema#\",\r",
											"    \"$ref\": \"#/definitions/Welcome10\",\r",
											"    \"definitions\": {\r",
											"        \"Welcome10\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"batchId\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"batchName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"batchDescription\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"batchStatus\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"batchNoOfClasses\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"programId\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"programName\": {\r",
											"                    \"type\": \"string\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"batchDescription\",\r",
											"                \"batchId\",\r",
											"                \"batchName\",\r",
											"                \"batchNoOfClasses\",\r",
											"                \"batchStatus\",\r",
											"                \"programId\",\r",
											"                \"programName\"\r",
											"            ],\r",
											"            \"title\": \"Welcome10\"\r",
											"        }\r",
											"    }\r",
											"}\r",
											"\r",
											"const jsondata=pm.response.json();\r",
											"pm.test(\"Schema is valid\", ()=>{\r",
											"     pm.expect(tv4.validate(jsondata, schema)).to.be.true;\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"pm.test(\"Status line is Created\", function () {\r",
											"    pm.response.to.have.status(\"Created\");\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b82d3fec-9eeb-4e6b-bc76-70c75e059ea0",
										"exec": [
											"// if( pm.info.iteration === pm.info.iterationCount - 1) {\r",
											"//    pm.variables.set(\"programID1\", pm.collectionVariables.get(\"programID1\"));\r",
											"// }"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "64755e7f-ec3e-4a59-8c65-ad4fa269f9b1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"batchDescription\": \"{{batchDescription}}\",\r\n  \"batchName\": \"{{batchName}}\",\r\n  \"batchNoOfClasses\": {{batchNoOfClasses}},\r\n  \"batchStatus\": \"{{batchStatus}}\",\r\n  \"programId\": {{programID1}}\r\n }\r\n\r\n\r\n\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{BaseUrl}}/batches"
							},
							"response": []
						},
						{
							"name": "Get all batches",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1974abd2-50de-451e-9f2e-2059634c6d7c",
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status line is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"var schema=\r",
											"{\r",
											"    \"$schema\": \"http://json-schema.org/draft-06/schema#\",\r",
											"    \"type\": \"array\",\r",
											"    \"items\": [\r",
											"     {   \r",
											"            \"type\": \"object\",\r",
											"                \"properties\": {\r",
											"                \"batchDescription\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"batchId\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"batchName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"batchNoOfClasses\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"batchStatus\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"programId\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"programName\": {\r",
											"                    \"type\": \"string\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"batchDescription\",\r",
											"                \"batchId\",\r",
											"                \"batchName\",\r",
											"                \"batchNoOfClasses\",\r",
											"                \"batchStatus\",\r",
											"                \"programId\",\r",
											"                \"programName\"\r",
											"            ],\r",
											"           \r",
											"        }\r",
											"    \r",
											"    \r",
											"   ]\r",
											"}\r",
											"\r",
											"const jsondata=pm.response.json();\r",
											"pm.test(\"Schema is valid\", ()=>{\r",
											"     pm.expect(tv4.validate(jsondata, schema)).to.be.true;\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "95e0f291-4b00-401c-815f-30f1532311d8",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0077a527-62cd-4ce6-8135-b2dd2604afea",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{BaseUrl}}/batches"
							},
							"response": []
						},
						{
							"name": "Get batch by batch ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "579db4ec-f1cf-44fe-bfa0-224ceb56d346",
										"exec": [
											"//postman.setNextRequest(\"Get batch by program ID\");\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status line is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"var schema=\r",
											"{\r",
											"    \"$schema\": \"http://json-schema.org/draft-06/schema#\",\r",
											"    \"$ref\": \"#/definitions/Welcome10\",\r",
											"    \"definitions\": {\r",
											"        \"Welcome10\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"batchDescription\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"batchId\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"batchName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"batchNoOfClasses\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"batchStatus\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"programId\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"programName\": {\r",
											"                    \"type\": \"string\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"batchDescription\",\r",
											"                \"batchId\",\r",
											"                \"batchName\",\r",
											"                \"batchNoOfClasses\",\r",
											"                \"batchStatus\",\r",
											"                \"programId\",\r",
											"                \"programName\"\r",
											"            ],\r",
											"            \"title\": \"Welcome10\"\r",
											"        }\r",
											"    }\r",
											"}\r",
											"const jsondata=pm.response.json();\r",
											"pm.test(\"Schema is valid\", ()=>{\r",
											"     pm.expect(tv4.validate(jsondata, schema)).to.be.true;\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "22706133-7ae9-4d54-9fef-793284908c1d",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0246b68a-238d-4d24-adf2-31e699ce0ba5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/batches/batchId/:batchID",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"batches",
										"batchId",
										":batchID"
									],
									"variable": [
										{
											"key": "batchID",
											"value": "{{batchID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get batch by program ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5da746f6-a885-4fa0-a740-fa5cc2da5b20",
										"exec": [
											"//postman.setNextRequest(\"Get batch by batch name\");\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status line is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"var schema=\r",
											"{\r",
											"          \"definitions\": {\r",
											"                \"type\": \"object\",\r",
											"                \"properties\": {\r",
											"                 \"batchId\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"\r",
											"                 \"batchName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"batchDescription\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"               \"batchStatus\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"               \r",
											"                \"batchNoOfClasses\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \r",
											"                \"programId\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"programName\": {\r",
											"                    \"type\": \"string\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"batchId\",\r",
											"                 \"batchName\",\r",
											"                \"batchDescription\",\r",
											"                 \"batchStatus\",\r",
											"                 \"batchNoOfClasses\",\r",
											"                 \"programId\",\r",
											"                \"programName\"\r",
											"            ],\r",
											"        }\r",
											"    }\r",
											"\r",
											"\r",
											"const jsondata=pm.response.json();\r",
											"pm.test(\"Schema is valid\", ()=>{\r",
											"     pm.expect(tv4.validate(jsondata, schema)).to.be.true;\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "13b517df-73a7-4494-9b74-6c2a5aab24be",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "419c03cf-e478-45bd-b439-145fcec09630",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/batches/program/:programId",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"batches",
										"program",
										":programId"
									],
									"variable": [
										{
											"key": "programId",
											"value": "{{programID1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get batch by batch name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fda5f913-948e-48c4-9c96-30fd7324a7cb",
										"exec": [
											"//postman.setNextRequest(\"Update batch by batch ID\");\r",
											"\r",
											"var schema=\r",
											"{\r",
											"    \"$schema\": \"http://json-schema.org/draft-06/schema#\",\r",
											"    \"type\": \"array\",\r",
											"    \"items\": [\r",
											"     {   \r",
											"            \"type\": \"object\",\r",
											"                \"properties\": {\r",
											"               \r",
											"                \"batchId\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                 \"batchDescription\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"batchName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"batchNoOfClasses\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"batchStatus\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"programId\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"programName\": {\r",
											"                    \"type\": \"string\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"batchId\",\r",
											"                \"batchDescription\",                \r",
											"                \"batchName\",\r",
											"                \"batchNoOfClasses\",\r",
											"                \"batchStatus\",\r",
											"                \"programId\",\r",
											"                \"programName\"\r",
											"            ],\r",
											"           \r",
											"        }\r",
											"    \r",
											"    \r",
											"    ]\r",
											"}\r",
											"\r",
											"const jsondata=pm.response.json();\r",
											"pm.test(\"Schema is valid\", ()=>{\r",
											"     pm.expect(tv4.validate(jsondata, schema)).to.be.true;\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status line is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "9f835fdb-6d57-4670-9e85-12da13946b04",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "61de4774-0176-461b-8e79-04f69f9c139b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/batches/batchName/:batchname",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"batches",
										"batchName",
										":batchname"
									],
									"variable": [
										{
											"key": "batchname",
											"value": "{{batchName}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update batch by batch ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "902198f3-3dbd-40cc-b7f5-ae15e63e71b1",
										"exec": [
											"\r",
											"\r",
											"var schema=\r",
											"{\r",
											"    \"$schema\": \"http://json-schema.org/draft-06/schema#\",\r",
											"    \"$ref\": \"#/definitions/Welcome10\",\r",
											"    \"definitions\": {\r",
											"        \"Welcome10\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"batchId\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"batchName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"batchDescription\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"batchStatus\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"batchNoOfClasses\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"programId\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"programName\": {\r",
											"                    \"type\": \"string\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"batchDescription\",\r",
											"                \"batchId\",\r",
											"                \"batchName\",\r",
											"                \"batchNoOfClasses\",\r",
											"                \"batchStatus\",\r",
											"                \"programId\",\r",
											"                \"programName\"\r",
											"            ],\r",
											"            \"title\": \"Welcome10\"\r",
											"        }\r",
											"    }\r",
											"}\r",
											"\r",
											"const jsondata=pm.response.json();\r",
											"pm.test(\"Schema is valid\", ()=>{\r",
											"     pm.expect(tv4.validate(jsondata, schema)).to.be.true;\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"     pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"pm.test(\"Status line is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "7ac6428f-0437-4613-a0ae-744a88cb2dfe",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "474dce24-f961-4b52-b41f-c4ac251c972f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"batchDescription\": \"{{updateBatchDescription}}\",\r\n  \"batchName\": \"{{updateBatchName}}\",\r\n  \"batchNoOfClasses\": {{updateBatchNoOfClasses}},\r\n  \"batchStatus\": \"{{updateBatchStatus}}\",\r\n  \"programId\": {{programID1}}\r\n }\r\n\r\n\r\n\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/batches/:batchID",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"batches",
										":batchID"
									],
									"variable": [
										{
											"key": "batchID",
											"value": "{{batchID}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "fbabe71a-33ed-4260-bd63-ba0fc94beed6"
				},
				{
					"name": "User Module",
					"item": [
						{
							"name": "create user login with role-data driven",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a563a972-5178-436d-a8c7-fd5e55ee7c6c",
										"exec": [
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"userId\",jsonData.userId);\r",
											"// create roleid as collection variable\r",
											"var requestBody = pm.request.body;\r",
											"var jsonData1=JSON.parse(requestBody);\r",
											"var roleId= jsonData1.userRoleMaps[0].roleId;\r",
											"pm.collectionVariables.set(\"roleId\",roleId);\r",
											"if (pm.response.code==201){\r",
											"//schema validation \r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-06/schema#\",\r",
											"    \"$ref\": \"#/definitions/Welcome6\",\r",
											"    \"definitions\": {\r",
											"        \"Welcome6\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"userId\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userFirstName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLastName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userMiddleName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userPhoneNumber\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"userLocation\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userTimeZone\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLinkedinUrl\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                },\r",
											"                \"userEduUg\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userEduPg\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userComments\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userVisaStatus\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLoginEmail\": {\r",
											"                    \"type\": \"string\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"userComments\",\r",
											"                \"userEduPg\",\r",
											"                \"userEduUg\",\r",
											"                \"userFirstName\",\r",
											"                \"userId\",\r",
											"                \"userLastName\",\r",
											"                \"userLinkedinUrl\",\r",
											"                \"userLocation\",\r",
											"                \"userLoginEmail\",\r",
											"                \"userMiddleName\",\r",
											"                \"userPhoneNumber\",\r",
											"                \"userTimeZone\",\r",
											"                \"userVisaStatus\"\r",
											"            ],\r",
											"            \"title\": \"Welcome6\"\r",
											"        }\r",
											"    }\r",
											"}\r",
											"pm.test(\"Response body matches schema\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
											"});\r",
											"//validate mandatory fields are not empty\r",
											"pm.test(\"First name is not empty\", function () {\r",
											"    pm.expect(jsonData.userFirstName).to.not.be.empty;\r",
											"});\r",
											"pm.test(\"Last name is not empty\", function () {\r",
											"    pm.expect(jsonData.userLastName).to.not.be.empty;\r",
											"});\r",
											"pm.test(\"email is not empty\",function(){\r",
											"    pm.expect(jsonData.userLoginEmail).to.be.not.empty;\r",
											"});\r",
											"pm.test(\"LinkedIn url is not empty\",function(){\r",
											"    pm.expect(jsonData.userLinkedinUrl).to.be.not.empty;\r",
											"});\r",
											"pm.test(\"user comments is not empty\",function(){\r",
											"    pm.expect(jsonData.userComments).to.be.not.empty;\r",
											"});\r",
											"pm.test(\"user education PG is not empty\",function(){\r",
											"    pm.expect(jsonData.userEduPg).to.be.not.empty;\r",
											"});\r",
											"pm.test(\"user education UG is not empty\",function(){\r",
											"    pm.expect(jsonData.userEduUg).to.be.not.empty;\r",
											"});\r",
											"pm.test(\"Middle name is not empty\",function(){\r",
											"    pm.expect(jsonData.userMiddleName).to.be.not.empty;\r",
											"});\r",
											"pm.test(\"timezone is not empty\",function(){\r",
											"    pm.expect(jsonData.userTimeZone).to.be.not.empty;\r",
											"});\r",
											"pm.test(\"visa status is not empty\",function(){\r",
											"    pm.expect(jsonData.userVisaStatus).to.be.not.empty;\r",
											"});\r",
											"}  \r",
											"postman.setNextRequest(\"get all roles\");\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0f46398f-7e54-41fd-b43a-ec98aeb40970",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "cd716a6e-bbc2-4d61-91a0-66ef25fb70a7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"userComments\": \"{{userComments}}\",\r\n  \"userEduPg\": \"{{userEduPg}}\",\r\n  \"userEduUg\": \"{{userEduUg}}\",\r\n  \"userFirstName\": \"{{userFirstName}}\",\r\n  \"userLastName\": \"{{userLastName}}\",\r\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\r\n  \"userLocation\": \"{{userLocation}}\",\r\n  \"userLogin\": {\r\n    \"loginStatus\": \"active\",\r\n    \"userLoginEmail\": \"{{userLoginEmail}}\"\r\n  },\r\n  \"userMiddleName\": \"{{userMiddleName}}\",\r\n  \"userPhoneNumber\": {{userPhoneNumber}},\r\n  \"userRoleMaps\": [\r\n    {\r\n      \"roleId\": \"{{roleId}}\",\r\n      \"userRoleStatus\": \"{{userRoleStatus}}\"\r\n    }\r\n  ],\r\n  \"userTimeZone\": \"{{userTimeZone}}\",\r\n  \"userVisaStatus\": \"{{userVisaStatus}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{BaseUrl}}/users/roleStatus"
							},
							"response": [
								{
									"id": "354d2c22-42f1-404c-9ed7-1d19d239df94",
									"name": "create user login with role",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"userComments\": \"abcd+432%$#@\",\r\n  \"userEduPg\": \"BE\",\r\n  \"userEduUg\": \"BE\",\r\n  \"userFirstName\": \"abcd\",\r\n  \"userLastName\": \"a\",\r\n  \"userLinkedinUrl\": \"https://www.linkedin.com/a\",\r\n  \"userLogin\": {\r\n    \"userLoginEmail\": \"team894@gmail.com\"\r\n  },\r\n  \"userMiddleName\": \"P\",\r\n  \"userPhoneNumber\": 9806543234,\r\n  \"userRoleMaps\": [\r\n    {\r\n      \"roleId\": \"R03\",\r\n      \"userRoleStatus\": \"Active\"\r\n    }\r\n  ],\r\n  \"userTimeZone\": \"EST\",\r\n  \"userVisaStatus\": \"H4-EAD\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{BaseUrl}}/users/roleStatus"
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"responseTime": null,
									"body": null
								},
								{
									"id": "1452f54c-8a6f-44fb-be3a-2e62629e608f",
									"name": "create user login with role",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"userComments\": \"ok\",\r\n  \"userEduPg\": \"MS\",\r\n  \"userEduUg\": \"BE\",\r\n  \"userFirstName\": \"samplefirst\",\r\n  \"userId\": \"U198\",\r\n  \"userLastName\": \"samplelast\",\r\n  \"userLinkedinUrl\": \"https://www.linkedin.com/in/sample/\",\r\n  \"userLocation\": \"PA\",\r\n  \"userLogin\": {\r\n    \"loginStatus\": \"NA\",\r\n    \"password\": \"NA\",\r\n    \"roleIds\": [\r\n      \"string\"\r\n    ],\r\n    \"status\": \"yes\",\r\n    \"userLoginEmail\": \"sample@gmail.com\"\r\n  },\r\n  \"userMiddleName\": \"h\",\r\n  \"userPhoneNumber\": 2324556757,\r\n  \"userRoleMaps\": [\r\n    {\r\n      \"roleId\": \"R03\",\r\n      \"userRoleStatus\": \"Active\"\r\n    }\r\n  ],\r\n  \"userTimeZone\": \"EST\",\r\n  \"userVisaStatus\": \"H4\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{BaseUrl}}/users/roleStatus"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Report-To",
											"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1709859638&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=qvRow0qbIDhmlt6vLsOmMWw7uDLl%2FB0HOpR9yWMibDM%3D\"}]}"
										},
										{
											"key": "Reporting-Endpoints",
											"value": "heroku-nel=https://nel.heroku.com/reports?ts=1709859638&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=qvRow0qbIDhmlt6vLsOmMWw7uDLl%2FB0HOpR9yWMibDM%3D"
										},
										{
											"key": "Nel",
											"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 08 Mar 2024 01:00:38 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"userId\": \"U198\",\n    \"userFirstName\": \"samplefirst\",\n    \"userLastName\": \"samplelast\",\n    \"userMiddleName\": \"h\",\n    \"userPhoneNumber\": 2324556757,\n    \"userLocation\": \"PA\",\n    \"userTimeZone\": \"EST\",\n    \"userLinkedinUrl\": \"https://www.linkedin.com/in/sample/\",\n    \"userEduUg\": \"BE\",\n    \"userEduPg\": \"MS\",\n    \"userComments\": \"ok\",\n    \"userVisaStatus\": \"H4\",\n    \"userLoginEmail\": \"sample@gmail.com\"\n}"
								}
							]
						},
						{
							"name": "get all roles",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "fcffdf99-5ca0-4a9f-a703-4d4850e6b954",
										"exec": [
											"// if(pm.info.iteration<pm.info.iterationCount-1){\r",
											"//     pm.execution.skipRequest();\r",
											"// }"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ed46dcb2-5bbe-4482-8574-9b394c3c9d9a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Content-Type header is present\", ()=> {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"pm.test(\"Content-Type header is application/json\", ()=> {\r",
											" pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains('application/json');\r",
											"});\r",
											"var schema = {\r",
											"    \"$schema\": \"http://json-schema.org/draft-06/schema#\",\r",
											"    \"type\": \"array\",\r",
											"    \"items\": {\r",
											"        \"$ref\": \"#/definitions/Welcome4Element\"\r",
											"    },\r",
											"    \"definitions\": {\r",
											"        \"Welcome4Element\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"roleId\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"roleName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"roleDesc\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"creationTime\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"date-time\"\r",
											"                },\r",
											"                \"lastModTime\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"date-time\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"creationTime\",\r",
											"                \"lastModTime\",\r",
											"                \"roleDesc\",\r",
											"                \"roleId\",\r",
											"                \"roleName\"\r",
											"            ],\r",
											"            \"title\": \"Welcome4Element\"\r",
											"        }\r",
											"    }\r",
											"}\r",
											"\r",
											"pm.test(\"Response body matches schema\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0c4e56e3-31ee-454d-bf46-c7f79c341d2d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{BaseUrl}}/roles"
							},
							"response": []
						},
						{
							"name": "get all users",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "dbcc08de-b6f2-4cdf-a536-6d011a3ba492",
										"exec": [
											"// if(pm.info.iteration<pm.info.iterationCount-1){\r",
											"//     pm.execution.skipRequest();\r",
											"// }"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a74586ac-3f02-4b94-bf77-91148f315f6e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Content-Type header is present\", ()=> {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"pm.test(\"Content-Type header is application/json\", ()=> {\r",
											" pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains('application/json');\r",
											"});\r",
											"var schema = {\r",
											"    \"$schema\": \"http://json-schema.org/draft-06/schema#\",\r",
											"    \"type\": \"array\",\r",
											"    \"items\": {\r",
											"        \"$ref\": \"#/definitions/Welcome3Element\"\r",
											"    },\r",
											"    \"definitions\":[ {\r",
											"        \"Welcome3Element\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"userComments\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userEduPg\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userEduUg\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userFirstName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userId\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLastName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLinkedinUrl\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLocation\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userMiddleName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userPhoneNumber\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"userTimeZone\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userVisaStatus\": {\r",
											"                    \"type\": \"string\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"userComments\",\r",
											"                \"userEduPg\",\r",
											"                \"userEduUg\",\r",
											"                \"userFirstName\",\r",
											"                \"userId\",\r",
											"                \"userLastName\",\r",
											"                \"userLinkedinUrl\",\r",
											"                \"userLocation\",\r",
											"                \"userMiddleName\",\r",
											"                \"userPhoneNumber\",\r",
											"                \"userTimeZone\",\r",
											"                \"userVisaStatus\"\r",
											"            ],\r",
											"            \"title\": \"Welcome3Element\"\r",
											"        } \r",
											"    } ]\r",
											"}\r",
											"\r",
											"pm.test(\"Response body matches schema\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e277e6d3-70ae-4c72-b40a-37c65078939a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{BaseUrl}}/users"
							},
							"response": []
						},
						{
							"name": "update user",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f3afc033-e3db-42b9-8302-a058c07d9d55",
										"exec": [
											"//schema validation \r",
											"var schema= {\r",
											"   \r",
											"            \"type\": \"object\",\r",
											"             'items': [{\r",
											"                 \"type\": \"object\",\r",
											"            \"properties\": {\r",
											"                \"userId\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userFirstName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLastName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userMiddleName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userPhoneNumber\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"userLocation\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userTimeZone\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLinkedinUrl\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                },\r",
											"                \"userEduUg\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userEduPg\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userComments\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userVisaStatus\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLoginEmail\": {\r",
											"                    \"type\": \"string\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \r",
											"                \"userFirstName\",\r",
											"                \"userId\",\r",
											"                \"userLastName\",\r",
											"                \"userPhoneNumber\",\r",
											"                \"userTimeZone\",\r",
											"                \"userVisaStatus\"\r",
											"            ]\r",
											"             }]\r",
											"          \r",
											"        }\r",
											"    \r",
											"\r",
											"pm.test(\"Response body matches schema\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
											"});\r",
											"// postman.setNextRequest(\"update user RoleID\");\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "30a024eb-744d-4333-994b-793cddb6f157",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c00bedfe-0486-4dad-960d-2627c32abcb5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"userFirstName\": \"{{updateduserFirstName}}\",\r\n  \"userLastName\": \"{{updateduserLastName}}\",\r\n  \"userPhoneNumber\": {{updateduserPhoneNumber}},\r\n  \"userTimeZone\": \"{{updateduserTimeZone}}\",\r\n  \"userVisaStatus\": \"{{updateduserVisaStatus}}\",\r\n  \"userLoginEmail\" : \"{{updateduserLoginEmail}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/users/:{userId}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"users",
										":{userId}"
									],
									"variable": [
										{
											"key": "{userId}",
											"value": "{{userId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "update user RoleID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "06da3016-2867-41ff-ad06-a89a3b998f44",
										"exec": [
											"pm.test('Status code is 200', () => {\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"\r",
											"pm.test('Content-Type header is present', () => {\r",
											"    pm.response.to.have.header('Content-Type');\r",
											"})\r",
											"var contType = pm.response.headers.get(\"Content-Type\");\r",
											"\r",
											"if (contType === \"text/html;charset=utf-8\" || contType === \"application/json\") {\r",
											"    pm.test(\"Content-Type header is present\", () => {\r",
											"        pm.response.to.have.header(\"Content-Type\");\r",
											"    });\r",
											"} else {\r",
											"    console.error(\"Unexpected Content-Type:\", contType);\r",
											"}\r",
											"\r",
											"  try {\r",
											"    // Parse the request body as JSON\r",
											"    var jsonreq = JSON.parse(pm.request.body);\r",
											"\r",
											"    // Check if \"userRoleList\" is an array and not empty\r",
											"    if (Array.isArray(jsonreq.userRoleList) && jsonreq.userRoleList.length > 0) {\r",
											"        // Set collection variable \"roleId2\" with the value of the first element in \"userRoleList\"\r",
											"        pm.collectionVariables.set(\"roleId2\", jsonreq.userRoleList[0]);\r",
											"        console.log(\"roleId2 set successfully:\", pm.collectionVariables.get(\"roleId2\"));\r",
											"    } else {\r",
											"        console.error(\"Error: 'userRoleList' is not a valid array or is empty.\");\r",
											"    }\r",
											"} catch (error) {\r",
											"    console.error(\"Error parsing request body as JSON:\", error.message);\r",
											"}\r",
											"   \r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "abd69976-5f7a-4bf2-a751-1d8bd2cc7b6e",
										"exec": [
											"  console.log(pm.collectionVariables.get(\"roleId\"));\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "25b24c64-2366-4000-923f-1e64def67a1f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"userRoleList\": [\r\n    \"{{roleId1}}\"\r\n    ]\r\n}\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/users/roleId/:{userId}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"users",
										"roleId",
										":{userId}"
									],
									"variable": [
										{
											"key": "{userId}",
											"value": "{{userId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User by RoleID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8a2313fc-c836-4045-bf33-cfc862cabcb4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Content-Type header is present\", ()=> {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"pm.test(\"Content-Type header is application/json\", ()=> {\r",
											" pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains('application/json');\r",
											" });\r",
											"\r",
											" var schema = {\r",
											"    \"$schema\": \"http://json-schema.org/draft-06/schema#\",\r",
											"    \"type\": \"array\",\r",
											"    \"items\": {\r",
											"        \"$ref\": \"#/definitions/Welcome6Element\"\r",
											"    },\r",
											"    \"definitions\":[ {\r",
											"        \"Welcome6Element\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"userComments\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userEduPg\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userEduUg\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userFirstName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userId\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLastName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLinkedinUrl\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLocation\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLoginEmail\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userMiddleName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userPhoneNumber\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"userTimeZone\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userVisaStatus\": {\r",
											"                    \"type\": \"string\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"userComments\",\r",
											"                \"userEduPg\",\r",
											"                \"userEduUg\",\r",
											"                \"userFirstName\",\r",
											"                \"userId\",\r",
											"                \"userLastName\",\r",
											"                \"userLinkedinUrl\",\r",
											"                \"userLocation\",\r",
											"                \"userLoginEmail\",\r",
											"                \"userMiddleName\",\r",
											"                \"userPhoneNumber\",\r",
											"                \"userTimeZone\",\r",
											"                \"userVisaStatus\"\r",
											"            ],\r",
											"            \"title\": \"Welcome6Element\"\r",
											"        }\r",
											"    } ]\r",
											"}\r",
											"\r",
											"\r",
											"pm.test(\"Response body matches schema\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "2bf8dc06-9324-459d-ba28-f5bf0f8e66ee",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b187e2f5-b9c2-4a31-b132-b557e27b21b8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/users/roles/:{roleId}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"users",
										"roles",
										":{roleId}"
									],
									"variable": [
										{
											"key": "{roleId}",
											"value": "{{roleId2}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "update user Role program batch status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9b2f863b-cc09-40af-b4ec-693212880af3",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Content-Type header is present\", ()=> {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "9aeac4e3-4225-4f2a-8fd7-46180c83b67f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "7ddcc420-af34-4b2e-bc56-97acbc8efd3d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"programId\": \"{{programID1}}\",\r\n  \"roleId\": \"{{roleId1}}\",\r\n  \"userId\": \"{{userId}}\",\r\n  \"userRoleProgramBatches\": [\r\n    {\r\n      \"batchId\": \"{{batchID}}\",\r\n      \"userRoleProgramBatchStatus\": \"active\"\r\n    }\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/users/roleProgramBatchStatus/:{userId}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"users",
										"roleProgramBatchStatus",
										":{userId}"
									],
									"variable": [
										{
											"key": "{userId}",
											"value": "{{userId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "update user role status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8357288e-3276-41e8-a620-340e63f8e563",
										"exec": [
											"var statusCode = pm.response.code;\r",
											"if (statusCode === 200) {\r",
											"    pm.test(\"Status code is 200 (Updated)\", function () {\r",
											"        pm.response.to.have.status(200);\r",
											"    });\r",
											"} else if (statusCode === 404) {\r",
											"    pm.test(\"Status code is 404 (Not Found)\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"} else if (statusCode === 400) {\r",
											"    pm.test(\"Status code is 400 (Bad Request)\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"    });\r",
											"} else {\r",
											"    pm.test(\"Unexpected status code\", function () {\r",
											"        pm.expect.fail(\"Unexpected status code: \" + statusCode);\r",
											"    });\r",
											"}\r",
											"\r",
											"pm.test(\"Content-Type header is present\", () => {\r",
											" pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"var contType = pm.response.headers.get(\"Content-Type\");\r",
											"\r",
											"if (contType === \"text/html;charset=utf-8\" || contType === \"application/json\") {\r",
											"    pm.test(\"Content-Type header is present\", () => {\r",
											"        pm.response.to.have.header(\"Content-Type\");\r",
											"    });\r",
											"} else {\r",
											"    console.error(\"Unexpected Content-Type:\", contType);\r",
											"}\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "75bb02f3-8817-46ab-9e19-2c679b6c7a49",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b2f9c50a-82a4-4827-b43c-d5ff3e1a66fa",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{token}}"
									}
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"roleId\": \"{{roleId1}}\",\r\n  \"userRoleStatus\": \"inactive\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{BaseUrl}}/users/roleStatus/{{userId}}"
							},
							"response": []
						},
						{
							"name": "Get User for Program by-ProgramId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ff4371e2-b356-406e-b82c-f2774d354be2",
										"exec": [
											"\r",
											"\r",
											"\r",
											"      pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Content-Type header is present\", ()=> {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"pm.test(\"Content-Type header is application/json\", ()=> {\r",
											" pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains('application/json');\r",
											" });\r",
											"\r",
											" var schema ={\r",
											"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r",
											"  \"title\": \"Generated schema for Root\",\r",
											"  \"type\": \"array\",\r",
											"  \"items\": [\r",
											"  {\r",
											"    \"type\": \"object\",\r",
											"    \"properties\": {\r",
											"      \"userId\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userFirstName\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userLastName\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userMiddleName\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userPhoneNumber\": {\r",
											"        \"type\": \"number\"\r",
											"      },\r",
											"      \"userLocation\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userTimeZone\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userLinkedinUrl\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userEduUg\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userEduPg\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userComments\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userVisaStatus\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userLoginEmail\": {}\r",
											"    },\r",
											"    \"required\": [\r",
											"      \"userId\",\r",
											"      \"userFirstName\",\r",
											"      \"userLastName\",\r",
											"      \"userPhoneNumber\",\r",
											"      \"userLocation\",\r",
											"      \"userTimeZone\",\r",
											"      \"userLinkedinUrl\",\r",
											"      \"userEduUg\",\r",
											"      \"userEduPg\",\r",
											"      \"userVisaStatus\",\r",
											"      \"userLoginEmail\"\r",
											"    ]\r",
											"  }\r",
											"  ]\r",
											"}\r",
											"pm.test(\"Response body matches schema\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "7d3d2606-e05a-42b8-a579-2e7506764728",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "dc0dba1d-b18d-489c-9373-012df81d675d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/users/programs/:{programId}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"users",
										"programs",
										":{programId}"
									],
									"variable": [
										{
											"key": "{programId}",
											"value": "{{programID1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User by Program Batches- batchId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fecaec9e-6c6f-4914-bf90-bdad2f394d72",
										"exec": [
											"\r",
											"\r",
											"\r",
											"      pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Content-Type header is present\", ()=> {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"pm.test(\"Content-Type header is application/json\", ()=> {\r",
											" pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains('application/json');\r",
											" });\r",
											"\r",
											" var schema ={\r",
											"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r",
											"  \"title\": \"Generated schema for Root\",\r",
											"  \"type\": \"array\",\r",
											"  \"items\": {\r",
											"    \"type\": \"object\",\r",
											"    \"properties\": {\r",
											"      \"userId\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userFirstName\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userLastName\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userMiddleName\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userPhoneNumber\": {\r",
											"        \"type\": \"number\"\r",
											"      },\r",
											"      \"userLocation\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userTimeZone\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userLinkedinUrl\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userEduUg\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userEduPg\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userComments\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userVisaStatus\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userLoginEmail\": {}\r",
											"    },\r",
											"    \"required\": [\r",
											"      \"userId\",\r",
											"      \"userFirstName\",\r",
											"      \"userLastName\",\r",
											"      \"userPhoneNumber\",\r",
											"      \"userLocation\",\r",
											"      \"userTimeZone\",\r",
											"      \"userLinkedinUrl\",\r",
											"      \"userEduUg\",\r",
											"      \"userEduPg\",\r",
											"      \"userVisaStatus\",\r",
											"      \"userLoginEmail\"\r",
											"    ]\r",
											"  }\r",
											"}\r",
											"pm.test(\"Response body matches schema\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "10ecaf2c-1b67-42e2-9bee-5b23f211b3ea",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "648b0b33-b056-43d6-b56c-e558d6ed1cef",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/users/programBatch/:{batchId}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"users",
										"programBatch",
										":{batchId}"
									],
									"variable": [
										{
											"key": "{batchId}",
											"value": "{{batchID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "update User Login Status",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7f1257ec-89aa-49d9-b8d2-d6ae67cdee6e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "cce7b898-e6d8-4977-aa32-5045e3bb5266",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var contType = pm.response.headers.get(\"Content-Type\");\r",
											"\r",
											"if (contType === \"text/html;charset=utf-8\" || contType === \"application/json\") {\r",
											"    pm.test(\"Content-Type header is present\", () => {\r",
											"        pm.response.to.have.header(\"Content-Type\");\r",
											"    });\r",
											"} else {\r",
											"    console.error(\"Unexpected Content-Type:\", contType);\r",
											"}\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "6237f476-91c1-4c77-98f0-7faabd94746f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"loginStatus\": \"\",\r\n  \"password\": \"\",\r\n  \"roleIds\": [\r\n    \"\"\r\n  ],\r\n  \"status\": \"active\",\r\n  \"userLoginEmail\": \"{{updateuserLoginEmail}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/users/userLogin/:{userId}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"users",
										"userLogin",
										":{userId}"
									],
									"variable": [
										{
											"key": "{userId}",
											"value": "{{userId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "count of active/inactive users",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "ace286a0-405b-403d-8acf-b4a2edb2c632",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b4e33226-ad19-41b4-bb8a-548e9da0f55f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Content-Type header is present\", ()=> {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"pm.test(\"Content-Type header is application/json\", ()=> {\r",
											" pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains('application/json');\r",
											"});\r",
											"//schema validation\r",
											"var schema = {\r",
											"    \"$schema\": \"http://json-schema.org/draft-06/schema#\",\r",
											"    \"type\": \"array\",\r",
											"    \"items\": {\r",
											"        \"$ref\": \"#/definitions/Welcome5Element\"\r",
											"    },\r",
											"    \"definitions\": {\r",
											"        \"Welcome5Element\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"status\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"count\": {\r",
											"                    \"type\": \"integer\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"count\",\r",
											"                \"status\"\r",
											"            ],\r",
											"            \"title\": \"Welcome5Element\"\r",
											"        }\r",
											"    }\r",
											"}\r",
											"pm.test(\"Response body matches schema\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f2c2d3fc-b250-4a4c-afc1-bb9f6b0c419f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/users/byStatus?id={{roleId2}}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"users",
										"byStatus"
									],
									"query": [
										{
											"key": "id",
											"value": "{{roleId2}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get all active users",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "8fd10625-4fb7-468f-8b63-f5611b7785ba",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "aecd58ef-6bba-4d71-b6c2-cb4caa9614b3",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Content-Type header is present\", ()=> {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"pm.test(\"Content-Type header is application/json\", ()=> {\r",
											" pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains('application/json');\r",
											"});\r",
											"//schema validation\r",
											"var schema = [ {\r",
											"    \"$schema\": \"http://json-schema.org/draft-06/schema#\",\r",
											"    \"type\": \"array\",\r",
											"    \"items\": {\r",
											"        \"$ref\": \"#/definitions/Welcome5Element\"\r",
											"    },\r",
											"    \"definitions\": {\r",
											"        \"Welcome5Element\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"userId\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userFirstName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLastName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userMiddleName\": {\r",
											"                    \"anyOf\": [\r",
											"                        {\r",
											"                            \"type\": \"null\"\r",
											"                        },\r",
											"                        {\r",
											"                            \"type\": \"string\"\r",
											"                        }\r",
											"                    ]\r",
											"                },\r",
											"                \"userPhoneNumber\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"userLocation\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userTimeZone\": {\r",
											"                    \"$ref\": \"#/definitions/UserTimeZone\"\r",
											"                },\r",
											"                \"userLinkedinUrl\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"http\",\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                },\r",
											"                \"userEduUg\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userEduPg\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userComments\": {\r",
											"                    \"anyOf\": [\r",
											"                        {\r",
											"                            \"type\": \"null\"\r",
											"                        },\r",
											"                        {\r",
											"                            \"type\": \"string\"\r",
											"                        }\r",
											"                    ]\r",
											"                },\r",
											"                \"userVisaStatus\": {\r",
											"                    \"$ref\": \"#/definitions/UserVisaStatus\"\r",
											"                },\r",
											"                \"hibernateLazyInitializer\": {\r",
											"                    \"$ref\": \"#/definitions/HibernateLazyInitializer\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"hibernateLazyInitializer\",\r",
											"                \"userComments\",\r",
											"                \"userEduPg\",\r",
											"                \"userEduUg\",\r",
											"                \"userFirstName\",\r",
											"                \"userId\",\r",
											"                \"userLastName\",\r",
											"                \"userLinkedinUrl\",\r",
											"                \"userLocation\",\r",
											"                \"userMiddleName\",\r",
											"                \"userPhoneNumber\",\r",
											"                \"userTimeZone\",\r",
											"                \"userVisaStatus\"\r",
											"            ],\r",
											"            \"title\": \"Welcome5Element\"\r",
											"        },\r",
											"        \"HibernateLazyInitializer\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"title\": \"HibernateLazyInitializer\"\r",
											"        },\r",
											"        \"UserTimeZone\": {\r",
											"            \"type\": \"string\",\r",
											"            \"enum\": [\r",
											"                \"EST\",\r",
											"                \"CST\",\r",
											"                \"IST\",\r",
											"                \"PST\",\r",
											"                \"MST\"\r",
											"            ],\r",
											"            \"title\": \"UserTimeZone\"\r",
											"        },\r",
											"        \"UserVisaStatus\": {\r",
											"            \"type\": \"string\",\r",
											"            \"enum\": [\r",
											"                \"Not-Specified\",\r",
											"                \"GC-EAD\",\r",
											"                \"US-Citizen\",\r",
											"                \"H4\",\r",
											"                \"H1B\",\r",
											"                \"H4-EAD\",\r",
											"                \"Canada-EAD\",\r",
											"                \"Indian-Citizen\",\r",
											"                \"Canada-Citizen\",\r",
											"                \"NA\"\r",
											"            ],\r",
											"            \"title\": \"UserVisaStatus\"\r",
											"        } \r",
											"    } \r",
											"} ]\r",
											"pm.test(\"Response body matches schema\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "56192841-26e2-4c1e-b6d0-f42df4942f0e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{BaseUrl}}/users/activeUsers"
							},
							"response": []
						},
						{
							"name": "user information by id",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "d2ab43a2-cfd9-41d5-8cb2-cf67c7667cd6",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b07ea58c-ce3e-4936-9c9c-24834141f796",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Content-Type header is present\", ()=> {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"pm.test(\"Content-Type header is application/json\", ()=> {\r",
											" pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains('application/json');\r",
											"});\r",
											"var schema = {\r",
											"    \"$schema\": \"http://json-schema.org/draft-06/schema#\",\r",
											"    \"$ref\": \"#/definitions/Welcome3\",\r",
											"    \"definitions\": {\r",
											"        \"Welcome3\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"user\": {\r",
											"                    \"$ref\": \"#/definitions/User\"\r",
											"                },\r",
											"                \"roles\": {\r",
											"                    \"type\": \"array\",\r",
											"                    \"items\": {\r",
											"                        \"$ref\": \"#/definitions/Role\"\r",
											"                    }\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"roles\",\r",
											"                \"user\"\r",
											"            ],\r",
											"            \"title\": \"Welcome3\"\r",
											"        },\r",
											"        \"Role\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"roleId\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userRoleStatus\": {\r",
											"                    \"type\": \"string\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"roleId\",\r",
											"                \"userRoleStatus\"\r",
											"            ],\r",
											"            \"title\": \"Role\"\r",
											"        },\r",
											"        \"User\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"userId\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userFirstName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLastName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userMiddleName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userPhoneNumber\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"userLocation\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userTimeZone\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLinkedinUrl\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userEduUg\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userEduPg\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userComments\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userVisaStatus\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLoginEmail\": {\r",
											"                    \"type\": \"string\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"userComments\",\r",
											"                \"userEduPg\",\r",
											"                \"userEduUg\",\r",
											"                \"userFirstName\",\r",
											"                \"userId\",\r",
											"                \"userLastName\",\r",
											"                \"userLinkedinUrl\",\r",
											"                \"userLocation\",\r",
											"                \"userLoginEmail\",\r",
											"                \"userMiddleName\",\r",
											"                \"userPhoneNumber\",\r",
											"                \"userTimeZone\",\r",
											"                \"userVisaStatus\"\r",
											"            ],\r",
											"            \"title\": \"User\"\r",
											"        }\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"pm.test(\"Response body matches schema\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "1ef14e11-593e-4a7d-92e3-8f5011fe1f0f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/users/:{id}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"users",
										":{id}"
									],
									"variable": [
										{
											"key": "{id}",
											"value": "U51"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get All Users With Roles",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7ed29e72-fe2e-4b66-8bd2-0f486aefcd80",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Content-Type header is present\", ()=> {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"pm.test(\"Content-Type header is application/json\", ()=> {\r",
											" pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains('application/json');\r",
											" });\r",
											"\r",
											" var schema = {\r",
											"    \"$schema\": \"http://json-schema.org/draft-06/schema#\",\r",
											"    \"type\": \"array\",\r",
											"    \"items\": {\r",
											"        \"$ref\": \"#/definitions/Welcome9Element\"\r",
											"    },\r",
											"    \"definitions\": [{\r",
											"        \"Welcome9Element\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"userRoleId\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"user\": {\r",
											"                    \"$ref\": \"#/definitions/User\"\r",
											"                },\r",
											"                \"role\": {\r",
											"                    \"$ref\": \"#/definitions/Role\"\r",
											"                },\r",
											"                \"userRoleStatus\": {\r",
											"                    \"$ref\": \"#/definitions/UserRoleStatus\"\r",
											"                },\r",
											"                \"userId\": {\r",
											"                    \"type\": \"string\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"role\",\r",
											"                \"user\",\r",
											"                \"userId\",\r",
											"                \"userRoleId\",\r",
											"                \"userRoleStatus\"\r",
											"            ],\r",
											"            \"title\": \"Welcome9Element\"\r",
											"        },\r",
											"        \"Role\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"roleId\": {\r",
											"                    \"$ref\": \"#/definitions/RoleID\"\r",
											"                },\r",
											"                \"roleName\": {\r",
											"                    \"$ref\": \"#/definitions/RoleName\"\r",
											"                },\r",
											"                \"roleDesc\": {\r",
											"                    \"$ref\": \"#/definitions/RoleDesc\"\r",
											"                },\r",
											"                \"creationTime\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"date-time\"\r",
											"                },\r",
											"                \"lastModTime\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"date-time\"\r",
											"                },\r",
											"                \"hibernateLazyInitializer\": {\r",
											"                    \"$ref\": \"#/definitions/HibernateLazyInitializer\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"creationTime\",\r",
											"                \"hibernateLazyInitializer\",\r",
											"                \"lastModTime\",\r",
											"                \"roleDesc\",\r",
											"                \"roleId\",\r",
											"                \"roleName\"\r",
											"            ],\r",
											"            \"title\": \"Role\"\r",
											"        },\r",
											"        \"HibernateLazyInitializer\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"title\": \"HibernateLazyInitializer\"\r",
											"        },\r",
											"        \"User\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"userId\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userFirstName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLastName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userMiddleName\": {\r",
											"                    \"anyOf\": [\r",
											"                        {\r",
											"                            \"type\": \"null\"\r",
											"                        },\r",
											"                        {\r",
											"                            \"type\": \"string\"\r",
											"                        }\r",
											"                    ]\r",
											"                },\r",
											"                \"userPhoneNumber\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"userLocation\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userTimeZone\": {\r",
											"                    \"$ref\": \"#/definitions/UserTimeZone\"\r",
											"                },\r",
											"                \"userLinkedinUrl\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"http\",\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                },\r",
											"                \"userEduUg\": {\r",
											"                    \"anyOf\": [\r",
											"                        {\r",
											"                            \"type\": \"null\"\r",
											"                        },\r",
											"                        {\r",
											"                            \"type\": \"string\"\r",
											"                        }\r",
											"                    ]\r",
											"                },\r",
											"                \"userEduPg\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userComments\": {\r",
											"                    \"anyOf\": [\r",
											"                        {\r",
											"                            \"type\": \"null\"\r",
											"                        },\r",
											"                        {\r",
											"                            \"type\": \"string\"\r",
											"                        }\r",
											"                    ]\r",
											"                },\r",
											"                \"userVisaStatus\": {\r",
											"                    \"$ref\": \"#/definitions/UserVisaStatus\"\r",
											"                },\r",
											"                \"hibernateLazyInitializer\": {\r",
											"                    \"$ref\": \"#/definitions/HibernateLazyInitializer\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"hibernateLazyInitializer\",\r",
											"                \"userComments\",\r",
											"                \"userEduPg\",\r",
											"                \"userEduUg\",\r",
											"                \"userFirstName\",\r",
											"                \"userId\",\r",
											"                \"userLastName\",\r",
											"                \"userLinkedinUrl\",\r",
											"                \"userLocation\",\r",
											"                \"userMiddleName\",\r",
											"                \"userPhoneNumber\",\r",
											"                \"userTimeZone\",\r",
											"                \"userVisaStatus\"\r",
											"            ],\r",
											"            \"title\": \"User\"\r",
											"        },\r",
											"        \"RoleDesc\": {\r",
											"            \"type\": \"string\",\r",
											"            \"enum\": [\r",
											"                \"LMS_Staff\",\r",
											"                \"LMS_Admin\",\r",
											"                \"LMS_User\"\r",
											"            ],\r",
											"            \"title\": \"RoleDesc\"\r",
											"        },\r",
											"        \"RoleID\": {\r",
											"            \"type\": \"string\",\r",
											"            \"enum\": [\r",
											"                \"R02\",\r",
											"                \"R01\",\r",
											"                \"R03\"\r",
											"            ],\r",
											"            \"title\": \"RoleID\"\r",
											"        },\r",
											"        \"RoleName\": {\r",
											"            \"type\": \"string\",\r",
											"            \"enum\": [\r",
											"                \"ROLE_STAFF\",\r",
											"                \"ROLE_ADMIN\",\r",
											"                \"ROLE_STUDENT\"\r",
											"            ],\r",
											"            \"title\": \"RoleName\"\r",
											"        },\r",
											"        \"UserTimeZone\": {\r",
											"            \"type\": \"string\",\r",
											"            \"enum\": [\r",
											"                \"PST\",\r",
											"                \"IST\",\r",
											"                \"CST\",\r",
											"                \"EST\",\r",
											"                \"MST\"\r",
											"            ],\r",
											"            \"title\": \"UserTimeZone\"\r",
											"        },\r",
											"        \"UserVisaStatus\": {\r",
											"            \"type\": \"string\",\r",
											"            \"enum\": [\r",
											"                \"H4\",\r",
											"                \"H1B\",\r",
											"                \"H4-EAD\",\r",
											"                \"Not-Specified\",\r",
											"                \"GC-EAD\",\r",
											"                \"US-Citizen\",\r",
											"                \"Canada-EAD\",\r",
											"                \"Indian-Citizen\",\r",
											"                \"Canada-Citizen\",\r",
											"                \"NA\"\r",
											"            ],\r",
											"            \"title\": \"UserVisaStatus\"\r",
											"        },\r",
											"        \"UserRoleStatus\": {\r",
											"            \"type\": \"string\",\r",
											"            \"enum\": [\r",
											"                \"Active\",\r",
											"                \"Inactive\",\r",
											"                \"active\",\r",
											"                \"inactive\",\r",
											"                \"InActive\",\r",
											"                \"ACTIVE\"\r",
											"            ],\r",
											"            \"title\": \"UserRoleStatus\"\r",
											"        }\r",
											"    } ]\r",
											"}\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.test(\"JSON Schema is valid\" ,() => {\r",
											"   pm.expect(tv4.validate(jsonData,schema)).to.be.true;\r",
											"}\r",
											");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "889b43ee-a786-4ca7-956c-87c34a13eacd",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "35dab2bb-5bf0-4076-aa39-f22eaf41b9e9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{BaseUrl}}/users/roles"
							},
							"response": []
						},
						{
							"name": "get all users with facets/filer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "799c52e7-3fcd-4a30-a86b-c22d5ac06f4e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Content-Type header is present\", ()=> {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"pm.test(\"Content-Type header is application/json\", ()=> {\r",
											" pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains('application/json');\r",
											"});\r",
											"var schema = {\r",
											"    \"$schema\": \"http://json-schema.org/draft-06/schema#\",\r",
											"    \"$ref\": \"#/definitions/Welcome5\",\r",
											"    \"definitions\": {\r",
											"        \"Welcome5\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"users\": {\r",
											"                    \"type\": \"array\",\r",
											"                    \"items\": {\r",
											"                        \"$ref\": \"#/definitions/User\"\r",
											"                    }\r",
											"                },\r",
											"                \"facets\": {\r",
											"                    \"$ref\": \"#/definitions/Facets\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"facets\",\r",
											"                \"users\"\r",
											"            ],\r",
											"            \"title\": \"Welcome5\"\r",
											"        },\r",
											"        \"Facets\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"facetedFields\": {\r",
											"                    \"type\": \"array\",\r",
											"                    \"items\": {\r",
											"                        \"$ref\": \"#/definitions/FacetedField\"\r",
											"                    }\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"facetedFields\"\r",
											"            ],\r",
											"            \"title\": \"Facets\"\r",
											"        },\r",
											"        \"FacetedField\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"displayName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"filterValues\": {\r",
											"                    \"type\": \"array\",\r",
											"                    \"items\": {\r",
											"                        \"$ref\": \"#/definitions/FilterValue\"\r",
											"                    }\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"displayName\",\r",
											"                \"filterValues\"\r",
											"            ],\r",
											"            \"title\": \"FacetedField\"\r",
											"        },\r",
											"        \"FilterValue\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"name\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"count\": {\r",
											"                    \"type\": \"integer\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"count\",\r",
											"                \"name\"\r",
											"            ],\r",
											"            \"title\": \"FilterValue\"\r",
											"        },\r",
											"        \"User\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"userId\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userFirstName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLastName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userPhoneNumber\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"userLocation\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userTimeZone\": {\r",
											"                    \"$ref\": \"#/definitions/UserTimeZone\"\r",
											"                },\r",
											"                \"userLinkedinUrl\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"http\",\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                },\r",
											"                \"userEduUg\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userEduPg\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userVisaStatus\": {\r",
											"                    \"$ref\": \"#/definitions/UserVisaStatus\"\r",
											"                },\r",
											"                \"userLoginEmail\": {\r",
											"                    \"anyOf\": [\r",
											"                        {\r",
											"                            \"type\": \"null\"\r",
											"                        },\r",
											"                        {\r",
											"                            \"type\": \"string\"\r",
											"                        }\r",
											"                    ]\r",
											"                },\r",
											"                \"userMiddleName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userComments\": {\r",
											"                    \"type\": \"string\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"userEduPg\",\r",
											"                \"userEduUg\",\r",
											"                \"userFirstName\",\r",
											"                \"userId\",\r",
											"                \"userLastName\",\r",
											"                \"userLinkedinUrl\",\r",
											"                \"userLocation\",\r",
											"                \"userLoginEmail\",\r",
											"                \"userPhoneNumber\",\r",
											"                \"userTimeZone\",\r",
											"                \"userVisaStatus\"\r",
											"            ],\r",
											"            \"title\": \"User\"\r",
											"        },\r",
											"        \"UserTimeZone\": {\r",
											"            \"type\": \"string\",\r",
											"            \"enum\": [\r",
											"                \"EST\",\r",
											"                \"CST\",\r",
											"                \"PST\",\r",
											"                \"MST\",\r",
											"                \"IST\"\r",
											"            ],\r",
											"            \"title\": \"UserTimeZone\"\r",
											"        },\r",
											"        \"UserVisaStatus\": {\r",
											"            \"type\": \"string\",\r",
											"            \"enum\": [\r",
											"                \"Not-Specified\",\r",
											"                \"H4-EAD\",\r",
											"                \"H4\",\r",
											"                \"GC-EAD\",\r",
											"                \"H1B\",\r",
											"                \"NA\",\r",
											"                \"US-Citizen\",\r",
											"                \"Indian-Citizen\",\r",
											"                \"Canada-EAD\",\r",
											"                \"Canada-Citizen\"\r",
											"            ],\r",
											"            \"title\": \"UserVisaStatus\"\r",
											"        }\r",
											"    }\r",
											"}\r",
											"\r",
											"pm.test(\"Response body matches schema\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b3d24a3b-adbe-41db-9150-ce958569c2b9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{BaseUrl}}/v2/users"
							},
							"response": []
						}
					],
					"id": "85059456-457b-4c7b-aa7c-8ee71224b98b"
				},
				{
					"name": "User Role program batch map controller",
					"item": [
						{
							"name": "Get Assigned Program/Batch(es) of All Users",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "28dc8df5-8a40-4490-8b49-d9ba2c580f0f",
										"exec": [
											"pm.test(\"status code is 200\", ()=> {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"status code name has string\", ()=> {\r",
											"     pm.response.to.have.status(\"OK\");\r",
											"    })\r",
											"\r",
											"    pm.test(\"Content-Type  header is appliaction/json\", ()=> {\r",
											"     pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
											"    });\r",
											"\r",
											"\r",
											"var response = pm.response.json();\r",
											"pm.test(\"Content-Type header is present\", () => {\r",
											" pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"    \r",
											"\r",
											"    \r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a2f8ea79-5c95-4735-8f99-40bf20de66de",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{BaseUrl}}/userRoleProgramBatchMap"
							},
							"response": []
						},
						{
							"name": "Get Assigned Program/Batch of a User By User Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aa1d86ce-2459-4169-8678-334e74ac1b73",
										"exec": [
											"pm.test(\"status code is 200\", ()=> {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"status code name has string\", ()=> {\r",
											"     pm.response.to.have.status(\"OK\");\r",
											"    })\r",
											"\r",
											"\r",
											"pm.test(\"Content-Type  header is appliaction/json\", ()=> {\r",
											"     pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
											"    });\r",
											"\r",
											"var response = pm.response.json();\r",
											"pm.test(\"Content-Type header is present\", () => {\r",
											" pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d5cc69a7-8fda-497a-ac15-9823e865c854",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/userRoleProgramBatchMap/:{userId}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"userRoleProgramBatchMap",
										":{userId}"
									],
									"variable": [
										{
											"key": "{userId}",
											"value": "{{userId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete All Programs/Batches assigned to the User By UserId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "11049c6d-1683-41f8-bb3e-ca61393cc467",
										"exec": [
											"pm.test(\"successfull request\", ()=> {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,404]);\r",
											"});\r",
											"\r",
											"\r",
											"    pm.test(\"Content-Type  header is appliaction/json\", ()=> {\r",
											"     pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
											"    });\r",
											"\r",
											"\r",
											"var response = pm.response.json();\r",
											"pm.test(\"Content-Type header is present\", () => {\r",
											" pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"    \r",
											"\r",
											"    \r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "65945853-a901-4241-94b7-901e8b135698",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"password\": \"Numpyninja@1\",\r\n  \"userLoginEmailId\": \"sdetorganizers@gmail.com\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/userRoleProgramBatchMap/deleteAll/:{{userId}}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"userRoleProgramBatchMap",
										"deleteAll",
										":{{userId}}"
									],
									"variable": [
										{
											"key": "{{userId}}",
											"value": "U976"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete by UserId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7ed29e72-fe2e-4b66-8bd2-0f486aefcd80",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Content-Type header is present\", ()=> {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "889b43ee-a786-4ca7-956c-87c34a13eacd",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "47966001-8fe1-41b4-be19-13f405e9783b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/users/:userId",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"users",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "{{userId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "delete batch by batch ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4a21027f-e640-4d3e-b95d-834db0e9eb52",
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status line is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0754b12c-6e4b-4cea-a5a3-7329754057b2",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e6a9bb51-7b88-47c1-bd85-e445eaf31ad9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/batches/:batchID",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"batches",
										":batchID"
									],
									"variable": [
										{
											"key": "batchID",
											"value": "{{batchID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get batch by batch ID-status Inactive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "579db4ec-f1cf-44fe-bfa0-224ceb56d346",
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status line is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"var schema=\r",
											"{\r",
											"    \"$schema\": \"http://json-schema.org/draft-06/schema#\",\r",
											"    \"$ref\": \"#/definitions/Welcome10\",\r",
											"    \"definitions\": {\r",
											"        \"Welcome10\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"batchDescription\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"batchId\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"batchName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"batchNoOfClasses\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"batchStatus\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"programId\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"programName\": {\r",
											"                    \"type\": \"string\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"batchDescription\",\r",
											"                \"batchId\",\r",
											"                \"batchName\",\r",
											"                \"batchNoOfClasses\",\r",
											"                \"batchStatus\",\r",
											"                \"programId\",\r",
											"                \"programName\"\r",
											"            ],\r",
											"            \"title\": \"Welcome10\"\r",
											"        }\r",
											"    }\r",
											"}\r",
											"const jsondata=pm.response.json();\r",
											"pm.test(\"Schema is valid\", ()=>{\r",
											"     pm.expect(tv4.validate(jsondata, schema)).to.be.true;\r",
											"});\r",
											"\r",
											"let response=pm.response.json();\r",
											"pm.test(\"batch status is inactive after deleting it\",()=>{\r",
											"    pm.expect(response.batchStatus).to.equal(\"Inactive\");\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "22706133-7ae9-4d54-9fef-793284908c1d",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "8ea57883-333b-4ee1-a6d5-a20ab14905eb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/batches/batchId/:batchID",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"batches",
										"batchId",
										":batchID"
									],
									"variable": [
										{
											"key": "batchID",
											"value": "{{batchID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete program by ProgramID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "383e52d7-51bb-4e64-b748-cada7fd2f147",
										"exec": [
											"pm.test(\"Content-Type header is present\", () => {\r",
											" pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"status code is 200\", ()=>{\r",
											"   pm.response.to.have.status(200);\r",
											"} );\r",
											"\r",
											"pm.test(\"status code has string\", () =>{\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f3fc99e1-5154-47ad-afce-fbd1a5b25b53",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/deletebyprogid/:programID1",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"deletebyprogid",
										":programID1"
									],
									"variable": [
										{
											"key": "programID1",
											"value": "{{programID1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete program by programName",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f256d623-2618-4bcf-ad8f-fb046662854c",
										"exec": [
											"pm.test(\"Content-Type header is present\", () => {\r",
											" pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"var contType = pm.response.headers.get(\"Content-Type\");\r",
											"\r",
											"if (contType === \"text/html;charset=utf-8\" || contType === \"application/json\") {\r",
											"    pm.test(\"Content-Type header is present\", () => {\r",
											"        pm.response.to.have.header(\"Content-Type\");\r",
											"    });\r",
											"} else {\r",
											"    console.error(\"Unexpected Content-Type:\", contType);\r",
											"}\r",
											"\r",
											"\r",
											"pm.test(\"status code is 200\", ()=>{\r",
											"   pm.response.to.have.status(200);\r",
											"} );\r",
											"\r",
											"pm.test(\"status code has string\", () =>{\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0eb7aa5e-ed36-456a-be5f-3732f2bd387e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/deletebyprogname/:programName1",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"deletebyprogname",
										":programName1"
									],
									"variable": [
										{
											"key": "programName1",
											"value": "{{programName1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "User logout",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8ca4cf0f-8f72-4cd8-a873-a365373dbdbe",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "99ed9f2b-22a1-4bd2-9729-c89caa84a803",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{BaseUrl}}/logoutlms"
							},
							"response": []
						}
					],
					"id": "9e9c0be7-ca09-4af6-9343-0e30bea8d7ad"
				}
			],
			"id": "4326c2f5-7135-4feb-bd1f-10ca7111a4aa"
		},
		{
			"name": "NegativeScenarios",
			"item": [
				{
					"name": "User Login Controller",
					"item": [
						{
							"name": "User Sign in",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7fe63aff-3ce4-481a-b03c-3ad2d8da805b",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"//pm.globals.set(\"BearerToken\", jsonData.authResponse.token)\r",
											"pm.collectionVariables.set(\"token\", jsonData.token);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "becbd435-5c9d-4acb-9356-029d70d7af78",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"password\": \"{{password}}\",\r\n  \"userLoginEmailId\": \"{{loginEmailId}}\"\r\n}\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{BaseUrl}}/login"
							},
							"response": []
						}
					],
					"id": "a75a7080-4269-400f-a747-8145392a0e81"
				},
				{
					"name": "program module",
					"item": [
						{
							"name": "invalid get program by program ID",
							"item": [
								{
									"name": "Get program by program ID- string",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "21fc491f-3d4c-4547-81f9-4622646dc057",
												"exec": [
													"if(pm.response.code===400){\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    pm.test(\"status code has string\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"\r",
													"});\r",
													"}\r",
													"\r",
													"if(pm.response.code===404){\r",
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													"pm.test(\"Status line is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "4cbb9a93-eff7-4a53-be01-5823477ca983",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseUrl}}/programs/:programID1",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"programs",
												":programID1"
											],
											"variable": [
												{
													"key": "programID1",
													"value": "ab"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get program by program ID : non existent",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b37b5f6a-a26d-41e4-b6a9-69ba2eed5bcf",
												"exec": [
													"if(pm.response.code===400){\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    pm.test(\"status code has string\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"\r",
													"});\r",
													"}\r",
													"\r",
													"if(pm.response.code===404){\r",
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													"pm.test(\"Status line is Not Found\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});\r",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "e5cf6790-e068-4809-a944-1e06ed03b8f9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseUrl}}/programs/:programID1",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"programs",
												":programID1"
											],
											"variable": [
												{
													"key": "programID1",
													"value": "128956233"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get program by program ID : alphanumeric",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4aeb00f0-b857-4c9b-8741-fd307904c37a",
												"exec": [
													"if(pm.response.code===400){\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    pm.test(\"status code has string\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"\r",
													"});\r",
													"}\r",
													"\r",
													"if(pm.response.code===404){\r",
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"}\r",
													"\r",
													"\r",
													"pm.test(\"Status line is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "693e220e-1093-4ad1-95ab-edd5b9f86b4f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseUrl}}/programs/:programID1",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"programs",
												":programID1"
											],
											"variable": [
												{
													"key": "programID1",
													"value": "12ab"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get program by program ID : special characters",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "14a00c53-224d-4dd8-bd5f-c8cac6726867",
												"exec": [
													"if(pm.response.code===400){\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    pm.test(\"status code has string\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"\r",
													"});\r",
													"}\r",
													"\r",
													"if(pm.response.code===404){\r",
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"}\r",
													"\r",
													"\r",
													"\r",
													"pm.test(\"Status line is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "7f547c74-427f-41e2-8ed5-5758aefa7077",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseUrl}}/programs/:programID1",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"programs",
												":programID1"
											],
											"variable": [
												{
													"key": "programID1",
													"value": "$#@"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get program by program ID : empty",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bb586e7a-2d54-409b-b431-10c71a3eb17c",
												"exec": [
													"\r",
													"\r",
													"if(pm.response.code===400){\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"}\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "f46ddc9f-476d-47a2-bb69-bd73e49359c7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseUrl}}/programs/:programID1",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"programs",
												":programID1"
											],
											"variable": [
												{
													"key": "programID1",
													"value": ""
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "2ce87338-ca4d-44b9-a14a-826c4308dedf"
						},
						{
							"name": "Invalid delete program By Program ID",
							"item": [
								{
									"name": "Delete program by program ID : null",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7438f581-0c2f-494c-9932-013eb9990d78",
												"exec": [
													"if(pm.response.code===400){\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "334c6883-5797-4863-b148-0d942d5bac81",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{BaseUrl}}/deletebyprogid/:programID1",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"deletebyprogid",
												":programID1"
											],
											"variable": [
												{
													"key": "programID1",
													"value": "null"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete program by program ID : string",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d4040750-a740-477a-a42d-9fc9b8128cbb",
												"exec": [
													"if(pm.response.code===400){\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "c92fb390-f2c0-4163-87a7-d7fb32bd2b65",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{BaseUrl}}/deletebyprogid/:programID1",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"deletebyprogid",
												":programID1"
											],
											"variable": [
												{
													"key": "programID1",
													"value": "abcd"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete program by program ID : alphanumeric",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a0f72ef6-11fd-4f07-b6d4-1e53aba60157",
												"exec": [
													"if(pm.response.code===400){\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "12a969ba-668b-462d-b8b0-6aaf138a807e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{BaseUrl}}/deletebyprogid/:programID1",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"deletebyprogid",
												":programID1"
											],
											"variable": [
												{
													"key": "programID1",
													"value": "ab$%hh"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete program by program ID : special character",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4342525f-4d65-400d-9a2f-913a8337dc4f",
												"exec": [
													"if(pm.response.code===400){\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "edd7e926-1271-44ee-aabe-e13f4b79008c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{BaseUrl}}/deletebyprogid/:programID1",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"deletebyprogid",
												":programID1"
											],
											"variable": [
												{
													"key": "programID1",
													"value": "%$#^&*"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete program by program ID : empty",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8fde2fdc-1b02-40fe-8d4b-e20b125d80e1",
												"exec": [
													"if(pm.response.code===400){\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "a48805c4-b90e-46c8-a09d-68b6e89142c4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{BaseUrl}}/deletebyprogid/:programID1",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"deletebyprogid",
												":programID1"
											],
											"variable": [
												{
													"key": "programID1",
													"value": ""
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "869d33bf-c261-45eb-b110-5da2ac2e08ee"
						},
						{
							"name": "invalid delete program by program name",
							"item": [
								{
									"name": "Delete program by programName-numeric",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f256d623-2618-4bcf-ad8f-fb046662854c",
												"exec": [
													"\r",
													"if(pm.response.code===400){\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    pm.test(\"status code has string\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"\r",
													"});\r",
													"}\r",
													"\r",
													"if(pm.response.code===404){\r",
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "f924c30f-b20f-4def-9df2-9865580af2dd",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{BaseUrl}}/deletebyprogname/:programName1",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"deletebyprogname",
												":programName1"
											],
											"variable": [
												{
													"key": "programName1",
													"value": "123"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete program by programName-non-existing",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f256d623-2618-4bcf-ad8f-fb046662854c",
												"exec": [
													"if(pm.response.code===400){\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    pm.test(\"status code has string\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"\r",
													"});\r",
													"}\r",
													"\r",
													"if(pm.response.code===404){\r",
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "768f604b-9705-4843-9c2c-6f526f28b970",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{BaseUrl}}/deletebyprogname/:programName1",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"deletebyprogname",
												":programName1"
											],
											"variable": [
												{
													"key": "programName1",
													"value": "March24-APIGurus-DA05-101"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete program by programName-special characters",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f256d623-2618-4bcf-ad8f-fb046662854c",
												"exec": [
													"\r",
													"if(pm.response.code===404){\r",
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "122613a8-ef21-44bd-8352-b39d88048f86",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{BaseUrl}}/deletebyprogname/:programName1",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"deletebyprogname",
												":programName1"
											],
											"variable": [
												{
													"key": "programName1",
													"value": "#$%"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete program by programName-empty",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f256d623-2618-4bcf-ad8f-fb046662854c",
												"exec": [
													"\r",
													"if(pm.response.code===404){\r",
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "70d6fa46-b56b-4d21-8fcf-d2ea6851555e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{BaseUrl}}/deletebyprogname/:programName1",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"deletebyprogname",
												":programName1"
											],
											"variable": [
												{
													"key": "programName1",
													"value": ""
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "cc0e54ce-5696-4f93-bbdd-1adaa06372fe"
						}
					],
					"id": "7c767daf-3c0e-458f-9529-658bb4c6df53",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e2be4380-372e-4d40-976c-e141682d0480",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "00cc0b73-3e92-436a-848e-06cd8a9806c6",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "program batch module",
					"item": [
						{
							"name": "invalid get batch by batch ID",
							"item": [
								{
									"name": "Get batch by batch ID- string",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "579db4ec-f1cf-44fe-bfa0-224ceb56d346",
												"exec": [
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													"pm.test(\"Status line is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "9f0423f8-0191-4f16-8abd-0db6c92b0587",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseUrl}}/batches/batchId/:batchID",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"batches",
												"batchId",
												":batchID"
											],
											"variable": [
												{
													"key": "batchID",
													"value": "abc"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get batch by batch ID- non-existing",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "579db4ec-f1cf-44fe-bfa0-224ceb56d346",
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													"pm.test(\"Status line is Not Found\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "1b0fc8d3-0728-42dd-87ab-f91b31b35184",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseUrl}}/batches/batchId/:batchID",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"batches",
												"batchId",
												":batchID"
											],
											"variable": [
												{
													"key": "batchID",
													"value": "12"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get batch by batch ID- alpha-numeric",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "579db4ec-f1cf-44fe-bfa0-224ceb56d346",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status line is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "bf7ffafe-6f93-40cf-bdbe-1f96c723d024",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseUrl}}/batches/batchId/:batchID",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"batches",
												"batchId",
												":batchID"
											],
											"variable": [
												{
													"key": "batchID",
													"value": "12ab"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get batch by batch ID-special characters",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "579db4ec-f1cf-44fe-bfa0-224ceb56d346",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													"pm.test(\"Status line is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "d6bf1785-e6c6-4488-880f-d745e132d6bf",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseUrl}}/batches/batchId/:batchID",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"batches",
												"batchId",
												":batchID"
											],
											"variable": [
												{
													"key": "batchID",
													"value": "@#$%"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get batch by batch ID-empty",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "579db4ec-f1cf-44fe-bfa0-224ceb56d346",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													"pm.test(\"Status line is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "94a68d63-ee1e-4578-8132-f21c2a43efb8",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseUrl}}/batches/batchId/:batchID",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"batches",
												"batchId",
												":batchID"
											],
											"variable": [
												{
													"key": "batchID",
													"value": ""
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "fae7564c-3b86-4108-aa6b-cd2be92a4046"
						},
						{
							"name": "Invalid get batch by batch name",
							"item": [
								{
									"name": "Get batch by batch name-numerics",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fda5f913-948e-48c4-9c96-30fd7324a7cb",
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													"pm.test(\"Status line is Not Found\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "ed95a5f2-b429-43af-9e5e-a8c044e0fe8f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseUrl}}/batches/batchName/:batchname",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"batches",
												"batchName",
												":batchname"
											],
											"variable": [
												{
													"key": "batchname",
													"value": "1235"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get batch by batch name-non-existing",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fda5f913-948e-48c4-9c96-30fd7324a7cb",
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													"pm.test(\"Status line is Not Found\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "005d9d15-adeb-4751-a56b-7050da98b813",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseUrl}}/batches/batchName/:batchname",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"batches",
												"batchName",
												":batchname"
											],
											"variable": [
												{
													"key": "batchname",
													"value": "March25-API-SDET-SDET20-500"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get batch by batch name-special characters",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fda5f913-948e-48c4-9c96-30fd7324a7cb",
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													"pm.test(\"Status line is Not Found\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "68487e9c-9616-4dd6-ad52-111d0512017b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseUrl}}/batches/batchName/:batchname",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"batches",
												"batchName",
												":batchname"
											],
											"variable": [
												{
													"key": "batchname",
													"value": "$#@"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get batch by batch name-empty",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fda5f913-948e-48c4-9c96-30fd7324a7cb",
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													"pm.test(\"Status line is Not Found\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "dd40862e-ed44-4707-a3c6-a0b8dd66f679",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseUrl}}/batches/batchName/:batchname",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"batches",
												"batchName",
												":batchname"
											],
											"variable": [
												{
													"key": "batchname",
													"value": ""
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "6e46322a-134d-4b7f-a716-c03ee80dfdaf"
						},
						{
							"name": "Invalid get batch by program ID",
							"item": [
								{
									"name": "Get batch by program ID-empty",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5da746f6-a885-4fa0-a740-fa5cc2da5b20",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													"pm.test(\"Status line is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "de9cf6b6-b2cb-464e-89ec-649daf5aab00",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseUrl}}/batches/program/:programId",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"batches",
												"program",
												":programId"
											],
											"variable": [
												{
													"key": "programId",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get batch by program ID-string",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5da746f6-a885-4fa0-a740-fa5cc2da5b20",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													"pm.test(\"Status line is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "d094b701-4741-49c0-907c-445fccb9d069",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseUrl}}/batches/program/:programId",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"batches",
												"program",
												":programId"
											],
											"variable": [
												{
													"key": "programId",
													"value": "abc"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get batch by program ID-non-existing",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5da746f6-a885-4fa0-a740-fa5cc2da5b20",
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													"pm.test(\"Status line is Not Found\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "65eabfa9-8377-465f-b9ad-000ad75be90e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseUrl}}/batches/program/:programId",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"batches",
												"program",
												":programId"
											],
											"variable": [
												{
													"key": "programId",
													"value": "12"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get batch by program ID-alpha-numeric",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5da746f6-a885-4fa0-a740-fa5cc2da5b20",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													"pm.test(\"Status line is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "ad1afda0-afa2-4269-9417-424411c3b5a4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseUrl}}/batches/program/:programId",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"batches",
												"program",
												":programId"
											],
											"variable": [
												{
													"key": "programId",
													"value": "12ab"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get batch by program ID-special characters",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5da746f6-a885-4fa0-a740-fa5cc2da5b20",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													"pm.test(\"Status line is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "f0e20d0b-969d-4bb7-8dd6-de24e5e00a16",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BaseUrl}}/batches/program/:programId",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"batches",
												"program",
												":programId"
											],
											"variable": [
												{
													"key": "programId",
													"value": "@#$"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "a73996b0-5f13-4dcd-b991-cef3d3c0eb05"
						},
						{
							"name": "Invalid delete batch by batch ID",
							"item": [
								{
									"name": "delete batch by batch ID-string",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4a21027f-e640-4d3e-b95d-834db0e9eb52",
												"exec": [
													"//postman.setNextRequest(\"Get batch by batch ID-status Inactive\");\r",
													"\r",
													"if(pm.response.code===400){\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    pm.test(\"Status line is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"\r",
													"});\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "0754b12c-6e4b-4cea-a5a3-7329754057b2",
												"exec": [
													"// if(pm.info.iteration<pm.info.iterationCount-1){\r",
													"//     pm.execution.skipRequest();\r",
													"// }"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "10fa8117-0ca3-46c6-b3b3-3dc079144f05",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{BaseUrl}}/batches/:batchID",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"batches",
												":batchID"
											],
											"variable": [
												{
													"key": "batchID",
													"value": "abc"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "delete batch by batch ID-alpha-numeric",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4a21027f-e640-4d3e-b95d-834db0e9eb52",
												"exec": [
													"//postman.setNextRequest(\"Get batch by batch ID-status Inactive\");\r",
													"\r",
													"if(pm.response.code===400){\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    pm.test(\"Status line is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"\r",
													"});\r",
													"}\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "0754b12c-6e4b-4cea-a5a3-7329754057b2",
												"exec": [
													"// if(pm.info.iteration<pm.info.iterationCount-1){\r",
													"//     pm.execution.skipRequest();\r",
													"// }"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "ac82c024-6304-4338-8414-a1010d99dae4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{BaseUrl}}/batches/:batchID",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"batches",
												":batchID"
											],
											"variable": [
												{
													"key": "batchID",
													"value": "ab12"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "delete batch by batch ID-special characters",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4a21027f-e640-4d3e-b95d-834db0e9eb52",
												"exec": [
													"if(pm.response.code===400){\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    pm.test(\"Status line is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"\r",
													"});\r",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "0754b12c-6e4b-4cea-a5a3-7329754057b2",
												"exec": [
													"// if(pm.info.iteration<pm.info.iterationCount-1){\r",
													"//     pm.execution.skipRequest();\r",
													"// }"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "0131d1f1-1518-4dcb-b84b-82f8d2d23ff7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{BaseUrl}}/batches/:batchID",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"batches",
												":batchID"
											],
											"variable": [
												{
													"key": "batchID",
													"value": "#$%"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "delete batch by batch ID-empty",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4a21027f-e640-4d3e-b95d-834db0e9eb52",
												"exec": [
													"//postman.setNextRequest(\"Get batch by batch ID-status Inactive\");\r",
													"\r",
													"if(pm.response.code===400){\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"    pm.test(\"Status line is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"\r",
													"});\r",
													"}\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "0754b12c-6e4b-4cea-a5a3-7329754057b2",
												"exec": [
													"// if(pm.info.iteration<pm.info.iterationCount-1){\r",
													"//     pm.execution.skipRequest();\r",
													"// }"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "2ac6381a-d29b-44b0-bc4e-8c24fe5bfadb",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{BaseUrl}}/batches/:batchID",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"batches",
												":batchID"
											],
											"variable": [
												{
													"key": "batchID",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "delete batch by batch ID-non-existing",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4a21027f-e640-4d3e-b95d-834db0e9eb52",
												"exec": [
													"if(pm.response.code===404){\r",
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"    pm.test(\"Status line is Not Found\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"\r",
													"});\r",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "0754b12c-6e4b-4cea-a5a3-7329754057b2",
												"exec": [
													"// if(pm.info.iteration<pm.info.iterationCount-1){\r",
													"//     pm.execution.skipRequest();\r",
													"// }"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "a50697fd-81d3-4b29-abde-7048659d1d7a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{BaseUrl}}/batches/:batchID",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"batches",
												":batchID"
											],
											"variable": [
												{
													"key": "batchID",
													"value": "2"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "a0c4a2e2-4e78-4c69-962d-cefd1750fb68"
						}
					],
					"id": "40b056e2-c804-4737-9779-d8ac3b556a9e",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "41c90a5d-18ce-4f8e-9c28-560b4dbb3ccd",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b741d729-156e-494b-95fe-801d5036cee3",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "User Module",
					"item": [
						{
							"name": "Get User by RoleID-lower case",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8a2313fc-c836-4045-bf33-cfc862cabcb4",
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"pm.test(\"Content-Type header is present\", ()=> {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"pm.test(\"Content-Type header is application/json\", ()=> {\r",
											" pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains('application/json');\r",
											" });\r",
											"if(pm.response.code==200) {\r",
											" var schema = {\r",
											"    \"$schema\": \"http://json-schema.org/draft-06/schema#\",\r",
											"    \"type\": \"array\",\r",
											"    \"items\": {\r",
											"        \"$ref\": \"#/definitions/Welcome6Element\"\r",
											"    },\r",
											"    \"definitions\":[ {\r",
											"        \"Welcome6Element\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"userComments\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userEduPg\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userEduUg\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userFirstName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userId\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLastName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLinkedinUrl\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLocation\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLoginEmail\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userMiddleName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userPhoneNumber\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"userTimeZone\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userVisaStatus\": {\r",
											"                    \"type\": \"string\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"userComments\",\r",
											"                \"userEduPg\",\r",
											"                \"userEduUg\",\r",
											"                \"userFirstName\",\r",
											"                \"userId\",\r",
											"                \"userLastName\",\r",
											"                \"userLinkedinUrl\",\r",
											"                \"userLocation\",\r",
											"                \"userLoginEmail\",\r",
											"                \"userMiddleName\",\r",
											"                \"userPhoneNumber\",\r",
											"                \"userTimeZone\",\r",
											"                \"userVisaStatus\"\r",
											"            ],\r",
											"            \"title\": \"Welcome6Element\"\r",
											"        }\r",
											"    } ]\r",
											"}\r",
											"\r",
											"\r",
											"pm.test(\"Response body matches schema\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
											"});\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "2bf8dc06-9324-459d-ba28-f5bf0f8e66ee",
										"exec": [
											"// if(pm.info.iteration<pm.info.iterationCount-1){\r",
											"//     pm.execution.skipRequest();\r",
											"// }"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "21961a78-1749-434a-8b05-95c44b15fc26",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/users/roles/:{roleId}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"users",
										"roles",
										":{roleId}"
									],
									"variable": [
										{
											"key": "{roleId}",
											"value": "r01"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User by RoleID-special characters",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8a2313fc-c836-4045-bf33-cfc862cabcb4",
										"exec": [
											"// Get the response status code\r",
											"var statusCode = pm.response.code;\r",
											"// Check the status code and perform actions accordingly\r",
											"if (statusCode === 201) {\r",
											"    pm.test(\"Status code is 201 (Created)\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"} else if (statusCode === 409) {\r",
											"    pm.test(\"Status code is 409 (Conflict)\", function () {\r",
											"        pm.response.to.have.status(409);\r",
											"    });\r",
											"} else if (statusCode === 404) {\r",
											"    pm.test(\"Status code is 404 (Not Found)\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"} else if (statusCode === 400) {\r",
											"    pm.test(\"Status code is 400 (Bad Request)\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"    });\r",
											"} else {\r",
											"    pm.test(\"Unexpected status code\", function () {\r",
											"        pm.expect.fail(\"Unexpected status code: \" + statusCode);\r",
											"    });\r",
											"}\r",
											"pm.test(\"Content-Type header is present\", ()=> {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"pm.test(\"Content-Type header is application/json\", ()=> {\r",
											" pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains('application/json');\r",
											" });\r",
											"if (pm.response.code==200) {\r",
											" var schema = {\r",
											"    \"$schema\": \"http://json-schema.org/draft-06/schema#\",\r",
											"    \"type\": \"array\",\r",
											"    \"items\": {\r",
											"        \"$ref\": \"#/definitions/Welcome6Element\"\r",
											"    },\r",
											"    \"definitions\":[ {\r",
											"        \"Welcome6Element\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"userComments\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userEduPg\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userEduUg\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userFirstName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userId\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLastName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLinkedinUrl\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLocation\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLoginEmail\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userMiddleName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userPhoneNumber\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"userTimeZone\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userVisaStatus\": {\r",
											"                    \"type\": \"string\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"userComments\",\r",
											"                \"userEduPg\",\r",
											"                \"userEduUg\",\r",
											"                \"userFirstName\",\r",
											"                \"userId\",\r",
											"                \"userLastName\",\r",
											"                \"userLinkedinUrl\",\r",
											"                \"userLocation\",\r",
											"                \"userLoginEmail\",\r",
											"                \"userMiddleName\",\r",
											"                \"userPhoneNumber\",\r",
											"                \"userTimeZone\",\r",
											"                \"userVisaStatus\"\r",
											"            ],\r",
											"            \"title\": \"Welcome6Element\"\r",
											"        }\r",
											"    } ]\r",
											"}\r",
											"\r",
											"\r",
											"pm.test(\"Response body matches schema\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
											"});\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "2bf8dc06-9324-459d-ba28-f5bf0f8e66ee",
										"exec": [
											"// if(pm.info.iteration<pm.info.iterationCount-1){\r",
											"//     pm.execution.skipRequest();\r",
											"// }"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0352cd1c-a68d-4494-9396-9c741b06c6a8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/users/roles/:{roleId}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"users",
										"roles",
										":{roleId}"
									],
									"variable": [
										{
											"key": "{roleId}",
											"value": "$#@@#"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User by RoleID-invalid input",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8a2313fc-c836-4045-bf33-cfc862cabcb4",
										"exec": [
											"// Get the response status code\r",
											"var statusCode = pm.response.code;\r",
											"// Check the status code and perform actions accordingly\r",
											"if (statusCode === 201) {\r",
											"    pm.test(\"Status code is 201 (Created)\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"} else if (statusCode === 409) {\r",
											"    pm.test(\"Status code is 409 (Conflict)\", function () {\r",
											"        pm.response.to.have.status(409);\r",
											"    });\r",
											"} else if (statusCode === 404) {\r",
											"    pm.test(\"Status code is 404 (Not Found)\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"} else if (statusCode === 400) {\r",
											"    pm.test(\"Status code is 400 (Bad Request)\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"    });\r",
											"} else {\r",
											"    pm.test(\"Unexpected status code\", function () {\r",
											"        pm.expect.fail(\"Unexpected status code: \" + statusCode);\r",
											"    });\r",
											"}\r",
											"pm.test(\"Content-Type header is present\", ()=> {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"pm.test(\"Content-Type header is application/json\", ()=> {\r",
											" pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains('application/json');\r",
											" });\r",
											"if(pm.response.code==200) {\r",
											" var schema = {\r",
											"    \"$schema\": \"http://json-schema.org/draft-06/schema#\",\r",
											"    \"type\": \"array\",\r",
											"    \"items\": {\r",
											"        \"$ref\": \"#/definitions/Welcome6Element\"\r",
											"    },\r",
											"    \"definitions\":[ {\r",
											"        \"Welcome6Element\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"userComments\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userEduPg\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userEduUg\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userFirstName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userId\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLastName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLinkedinUrl\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLocation\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLoginEmail\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userMiddleName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userPhoneNumber\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"userTimeZone\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userVisaStatus\": {\r",
											"                    \"type\": \"string\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"userComments\",\r",
											"                \"userEduPg\",\r",
											"                \"userEduUg\",\r",
											"                \"userFirstName\",\r",
											"                \"userId\",\r",
											"                \"userLastName\",\r",
											"                \"userLinkedinUrl\",\r",
											"                \"userLocation\",\r",
											"                \"userLoginEmail\",\r",
											"                \"userMiddleName\",\r",
											"                \"userPhoneNumber\",\r",
											"                \"userTimeZone\",\r",
											"                \"userVisaStatus\"\r",
											"            ],\r",
											"            \"title\": \"Welcome6Element\"\r",
											"        }\r",
											"    } ]\r",
											"}\r",
											"\r",
											"\r",
											"pm.test(\"Response body matches schema\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
											"});\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "2bf8dc06-9324-459d-ba28-f5bf0f8e66ee",
										"exec": [
											"// if(pm.info.iteration<pm.info.iterationCount-1){\r",
											"//     pm.execution.skipRequest();\r",
											"// }"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "71ab5229-a9ab-4c96-b219-8859d5babd18",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/users/roles/:{roleId}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"users",
										"roles",
										":{roleId}"
									],
									"variable": [
										{
											"key": "{roleId}",
											"value": "R04"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User for Program by-ProgramId-alphabets",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ff4371e2-b356-406e-b82c-f2774d354be2",
										"exec": [
											"// Get the response status code\r",
											"var statusCode = pm.response.code;\r",
											"// Check the status code and perform actions accordingly\r",
											"if (statusCode === 201) {\r",
											"    pm.test(\"Status code is 201 (Created)\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"} else if (statusCode === 409) {\r",
											"    pm.test(\"Status code is 409 (Conflict)\", function () {\r",
											"        pm.response.to.have.status(409);\r",
											"    });\r",
											"} else if (statusCode === 404) {\r",
											"    pm.test(\"Status code is 404 (Not Found)\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"} else if (statusCode === 400) {\r",
											"    pm.test(\"Status code is 400 (Bad Request)\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"    });\r",
											"} else {\r",
											"    pm.test(\"Unexpected status code\", function () {\r",
											"        pm.expect.fail(\"Unexpected status code: \" + statusCode);\r",
											"    });\r",
											"}\r",
											"pm.test(\"Content-Type header is present\", ()=> {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"pm.test(\"Content-Type header is application/json\", ()=> {\r",
											" pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains('application/json');\r",
											" });\r",
											"if(pm.response.code==200){\r",
											" var schema ={\r",
											"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r",
											"  \"title\": \"Generated schema for Root\",\r",
											"  \"type\": \"array\",\r",
											"  \"items\": [\r",
											"  {\r",
											"    \"type\": \"object\",\r",
											"    \"properties\": {\r",
											"      \"userId\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userFirstName\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userLastName\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userMiddleName\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userPhoneNumber\": {\r",
											"        \"type\": \"number\"\r",
											"      },\r",
											"      \"userLocation\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userTimeZone\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userLinkedinUrl\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userEduUg\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userEduPg\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userComments\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userVisaStatus\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userLoginEmail\": {}\r",
											"    },\r",
											"    \"required\": [\r",
											"      \"userId\",\r",
											"      \"userFirstName\",\r",
											"      \"userLastName\",\r",
											"      \"userPhoneNumber\",\r",
											"      \"userLocation\",\r",
											"      \"userTimeZone\",\r",
											"      \"userLinkedinUrl\",\r",
											"      \"userEduUg\",\r",
											"      \"userEduPg\",\r",
											"      \"userVisaStatus\",\r",
											"      \"userLoginEmail\"\r",
											"    ]\r",
											"  }\r",
											"  ]\r",
											"}\r",
											"pm.test(\"Response body matches schema\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
											"}); }\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "7d3d2606-e05a-42b8-a579-2e7506764728",
										"exec": [
											"// if(pm.info.iteration<pm.info.iterationCount-1){\r",
											"//     pm.execution.skipRequest();\r",
											"// }"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "99b16693-c27c-405f-8410-d8772b4e8558",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/users/programs/:{programId}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"users",
										"programs",
										":{programId}"
									],
									"variable": [
										{
											"key": "{programId}",
											"value": "FEWQR"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User for Program by-ProgramId-special characters",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ff4371e2-b356-406e-b82c-f2774d354be2",
										"exec": [
											"// Get the response status code\r",
											"var statusCode = pm.response.code;\r",
											"// Check the status code and perform actions accordingly\r",
											"if (statusCode === 201) {\r",
											"    pm.test(\"Status code is 201 (Created)\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"} else if (statusCode === 409) {\r",
											"    pm.test(\"Status code is 409 (Conflict)\", function () {\r",
											"        pm.response.to.have.status(409);\r",
											"    });\r",
											"} else if (statusCode === 404) {\r",
											"    pm.test(\"Status code is 404 (Not Found)\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"} else if (statusCode === 400) {\r",
											"    pm.test(\"Status code is 400 (Bad Request)\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"    });\r",
											"} else {\r",
											"    pm.test(\"Unexpected status code\", function () {\r",
											"        pm.expect.fail(\"Unexpected status code: \" + statusCode);\r",
											"    });\r",
											"}\r",
											"pm.test(\"Content-Type header is present\", ()=> {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"pm.test(\"Content-Type header is application/json\", ()=> {\r",
											" pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains('application/json');\r",
											" });\r",
											"if(pm.response.code==200){\r",
											" var schema ={\r",
											"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r",
											"  \"title\": \"Generated schema for Root\",\r",
											"  \"type\": \"array\",\r",
											"  \"items\": [\r",
											"  {\r",
											"    \"type\": \"object\",\r",
											"    \"properties\": {\r",
											"      \"userId\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userFirstName\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userLastName\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userMiddleName\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userPhoneNumber\": {\r",
											"        \"type\": \"number\"\r",
											"      },\r",
											"      \"userLocation\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userTimeZone\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userLinkedinUrl\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userEduUg\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userEduPg\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userComments\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userVisaStatus\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userLoginEmail\": {}\r",
											"    },\r",
											"    \"required\": [\r",
											"      \"userId\",\r",
											"      \"userFirstName\",\r",
											"      \"userLastName\",\r",
											"      \"userPhoneNumber\",\r",
											"      \"userLocation\",\r",
											"      \"userTimeZone\",\r",
											"      \"userLinkedinUrl\",\r",
											"      \"userEduUg\",\r",
											"      \"userEduPg\",\r",
											"      \"userVisaStatus\",\r",
											"      \"userLoginEmail\"\r",
											"    ]\r",
											"  }\r",
											"  ]\r",
											"}\r",
											"pm.test(\"Response body matches schema\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
											"}); }\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "7d3d2606-e05a-42b8-a579-2e7506764728",
										"exec": [
											"// if(pm.info.iteration<pm.info.iterationCount-1){\r",
											"//     pm.execution.skipRequest();\r",
											"// }"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "ba8f27ac-b595-4b40-bbe1-8dbb49f48f72",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/users/programs/:{programId}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"users",
										"programs",
										":{programId}"
									],
									"variable": [
										{
											"key": "{programId}",
											"value": "@#$^&*"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User for Program by-ProgramId-unassigned program id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ff4371e2-b356-406e-b82c-f2774d354be2",
										"exec": [
											"// Get the response status code\r",
											"var statusCode = pm.response.code;\r",
											"// Check the status code and perform actions accordingly\r",
											"if (statusCode === 201) {\r",
											"    pm.test(\"Status code is 201 (Created)\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"} else if (statusCode === 409) {\r",
											"    pm.test(\"Status code is 409 (Conflict)\", function () {\r",
											"        pm.response.to.have.status(409);\r",
											"    });\r",
											"} else if (statusCode === 404) {\r",
											"    pm.test(\"Status code is 404 (Not Found)\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"} else if (statusCode === 400) {\r",
											"    pm.test(\"Status code is 400 (Bad Request)\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"    });\r",
											"} else {\r",
											"    pm.test(\"Unexpected status code\", function () {\r",
											"        pm.expect.fail(\"Unexpected status code: \" + statusCode);\r",
											"    });\r",
											"}\r",
											"pm.test(\"Content-Type header is present\", ()=> {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"pm.test(\"Content-Type header is application/json\", ()=> {\r",
											" pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains('application/json');\r",
											" });\r",
											"if(pm.response.code==200){\r",
											" var schema ={\r",
											"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r",
											"  \"title\": \"Generated schema for Root\",\r",
											"  \"type\": \"array\",\r",
											"  \"items\": [\r",
											"  {\r",
											"    \"type\": \"object\",\r",
											"    \"properties\": {\r",
											"      \"userId\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userFirstName\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userLastName\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userMiddleName\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userPhoneNumber\": {\r",
											"        \"type\": \"number\"\r",
											"      },\r",
											"      \"userLocation\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userTimeZone\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userLinkedinUrl\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userEduUg\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userEduPg\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userComments\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userVisaStatus\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userLoginEmail\": {}\r",
											"    },\r",
											"    \"required\": [\r",
											"      \"userId\",\r",
											"      \"userFirstName\",\r",
											"      \"userLastName\",\r",
											"      \"userPhoneNumber\",\r",
											"      \"userLocation\",\r",
											"      \"userTimeZone\",\r",
											"      \"userLinkedinUrl\",\r",
											"      \"userEduUg\",\r",
											"      \"userEduPg\",\r",
											"      \"userVisaStatus\",\r",
											"      \"userLoginEmail\"\r",
											"    ]\r",
											"  }\r",
											"  ]\r",
											"}\r",
											"pm.test(\"Response body matches schema\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
											"}); }\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "7d3d2606-e05a-42b8-a579-2e7506764728",
										"exec": [
											"// if(pm.info.iteration<pm.info.iterationCount-1){\r",
											"//     pm.execution.skipRequest();\r",
											"// }"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "084435d4-8885-4fb4-9005-0315e9c0fd62",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/users/programs/:{programId}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"users",
										"programs",
										":{programId}"
									],
									"variable": [
										{
											"key": "{programId}",
											"value": "17509"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User by Program Batches- long batchId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fecaec9e-6c6f-4914-bf90-bdad2f394d72",
										"exec": [
											"\r",
											"var statusCode = pm.response.code;\r",
											"// Check the status code and perform actions accordingly\r",
											"if (statusCode === 201) {\r",
											"    pm.test(\"Status code is 201 (Created)\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"} else if (statusCode === 409) {\r",
											"    pm.test(\"Status code is 409 (Conflict)\", function () {\r",
											"        pm.response.to.have.status(409);\r",
											"    });\r",
											"} else if (statusCode === 404) {\r",
											"    pm.test(\"Status code is 404 (Not Found)\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"} else if (statusCode === 400) {\r",
											"    pm.test(\"Status code is 400 (Bad Request)\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"    });\r",
											"} else {\r",
											"    pm.test(\"Unexpected status code\", function () {\r",
											"        pm.expect.fail(\"Unexpected status code: \" + statusCode);\r",
											"    });\r",
											"}\r",
											"pm.test(\"Content-Type header is present\", ()=> {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"pm.test(\"Content-Type header is application/json\", ()=> {\r",
											" pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains('application/json');\r",
											" });\r",
											"if(pm.response.code==200){\r",
											" var schema ={\r",
											"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r",
											"  \"title\": \"Generated schema for Root\",\r",
											"  \"type\": \"array\",\r",
											"  \"items\": {\r",
											"    \"type\": \"object\",\r",
											"    \"properties\": {\r",
											"      \"userId\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userFirstName\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userLastName\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userMiddleName\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userPhoneNumber\": {\r",
											"        \"type\": \"number\"\r",
											"      },\r",
											"      \"userLocation\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userTimeZone\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userLinkedinUrl\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userEduUg\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userEduPg\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userComments\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userVisaStatus\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userLoginEmail\": {}\r",
											"    },\r",
											"    \"required\": [\r",
											"      \"userId\",\r",
											"      \"userFirstName\",\r",
											"      \"userLastName\",\r",
											"      \"userPhoneNumber\",\r",
											"      \"userLocation\",\r",
											"      \"userTimeZone\",\r",
											"      \"userLinkedinUrl\",\r",
											"      \"userEduUg\",\r",
											"      \"userEduPg\",\r",
											"      \"userVisaStatus\",\r",
											"      \"userLoginEmail\"\r",
											"    ]\r",
											"  }\r",
											"}\r",
											"pm.test(\"Response body matches schema\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "10ecaf2c-1b67-42e2-9bee-5b23f211b3ea",
										"exec": [
											"// if(pm.info.iteration<pm.info.iterationCount-1){\r",
											"//     pm.execution.skipRequest();\r",
											"// }"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "906e68c1-35e1-4108-85fa-a7980810cd03",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/users/programBatch/:{batchId}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"users",
										"programBatch",
										":{batchId}"
									],
									"variable": [
										{
											"key": "{batchId}",
											"value": "8448908765"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User by Program Batches- alphanumeric",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fecaec9e-6c6f-4914-bf90-bdad2f394d72",
										"exec": [
											"\r",
											"var statusCode = pm.response.code;\r",
											"// Check the status code and perform actions accordingly\r",
											"if (statusCode === 201) {\r",
											"    pm.test(\"Status code is 201 (Created)\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"} else if (statusCode === 409) {\r",
											"    pm.test(\"Status code is 409 (Conflict)\", function () {\r",
											"        pm.response.to.have.status(409);\r",
											"    });\r",
											"} else if (statusCode === 404) {\r",
											"    pm.test(\"Status code is 404 (Not Found)\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"} else if (statusCode === 400) {\r",
											"    pm.test(\"Status code is 400 (Bad Request)\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"    });\r",
											"} else {\r",
											"    pm.test(\"Unexpected status code\", function () {\r",
											"        pm.expect.fail(\"Unexpected status code: \" + statusCode);\r",
											"    });\r",
											"}\r",
											"pm.test(\"Content-Type header is present\", ()=> {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"pm.test(\"Content-Type header is application/json\", ()=> {\r",
											" pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains('application/json');\r",
											" });\r",
											"if(pm.response.code==200){\r",
											" var schema ={\r",
											"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r",
											"  \"title\": \"Generated schema for Root\",\r",
											"  \"type\": \"array\",\r",
											"  \"items\": {\r",
											"    \"type\": \"object\",\r",
											"    \"properties\": {\r",
											"      \"userId\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userFirstName\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userLastName\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userMiddleName\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userPhoneNumber\": {\r",
											"        \"type\": \"number\"\r",
											"      },\r",
											"      \"userLocation\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userTimeZone\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userLinkedinUrl\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userEduUg\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userEduPg\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userComments\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userVisaStatus\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userLoginEmail\": {}\r",
											"    },\r",
											"    \"required\": [\r",
											"      \"userId\",\r",
											"      \"userFirstName\",\r",
											"      \"userLastName\",\r",
											"      \"userPhoneNumber\",\r",
											"      \"userLocation\",\r",
											"      \"userTimeZone\",\r",
											"      \"userLinkedinUrl\",\r",
											"      \"userEduUg\",\r",
											"      \"userEduPg\",\r",
											"      \"userVisaStatus\",\r",
											"      \"userLoginEmail\"\r",
											"    ]\r",
											"  }\r",
											"}\r",
											"pm.test(\"Response body matches schema\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "10ecaf2c-1b67-42e2-9bee-5b23f211b3ea",
										"exec": [
											"// if(pm.info.iteration<pm.info.iterationCount-1){\r",
											"//     pm.execution.skipRequest();\r",
											"// }"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "2b92c4d5-6b36-43d1-87a3-c16017fe6004",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/users/programBatch/:{batchId}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"users",
										"programBatch",
										":{batchId}"
									],
									"variable": [
										{
											"key": "{batchId}",
											"value": "8448A"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User by Program Batches- special chars",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fecaec9e-6c6f-4914-bf90-bdad2f394d72",
										"exec": [
											"\r",
											"var statusCode = pm.response.code;\r",
											"// Check the status code and perform actions accordingly\r",
											"if (statusCode === 201) {\r",
											"    pm.test(\"Status code is 201 (Created)\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"} else if (statusCode === 404) {\r",
											"    pm.test(\"Status code is 400 (Bad Request)\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"} else {\r",
											"    pm.test(\"Unexpected status code\", function () {\r",
											"        pm.expect.fail(\"Unexpected status code: \" + statusCode);\r",
											"    });\r",
											"}\r",
											"pm.test(\"Content-Type header is present\", ()=> {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"pm.test(\"Content-Type header is application/json\", ()=> {\r",
											" pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains('application/json');\r",
											" });\r",
											"if(pm.response.code==200){\r",
											" var schema ={\r",
											"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r",
											"  \"title\": \"Generated schema for Root\",\r",
											"  \"type\": \"array\",\r",
											"  \"items\": {\r",
											"    \"type\": \"object\",\r",
											"    \"properties\": {\r",
											"      \"userId\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userFirstName\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userLastName\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userMiddleName\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userPhoneNumber\": {\r",
											"        \"type\": \"number\"\r",
											"      },\r",
											"      \"userLocation\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userTimeZone\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userLinkedinUrl\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userEduUg\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userEduPg\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userComments\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userVisaStatus\": {\r",
											"        \"type\": \"string\"\r",
											"      },\r",
											"      \"userLoginEmail\": {}\r",
											"    },\r",
											"    \"required\": [\r",
											"      \"userId\",\r",
											"      \"userFirstName\",\r",
											"      \"userLastName\",\r",
											"      \"userPhoneNumber\",\r",
											"      \"userLocation\",\r",
											"      \"userTimeZone\",\r",
											"      \"userLinkedinUrl\",\r",
											"      \"userEduUg\",\r",
											"      \"userEduPg\",\r",
											"      \"userVisaStatus\",\r",
											"      \"userLoginEmail\"\r",
											"    ]\r",
											"  }\r",
											"}\r",
											"pm.test(\"Response body matches schema\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
											"});\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "10ecaf2c-1b67-42e2-9bee-5b23f211b3ea",
										"exec": [
											"// if(pm.info.iteration<pm.info.iterationCount-1){\r",
											"//     pm.execution.skipRequest();\r",
											"// }"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "03447724-3c98-47b9-a39f-efd5befab7cb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/users/programBatch/:{batchId}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"users",
										"programBatch",
										":{batchId}"
									],
									"variable": [
										{
											"key": "{batchId}",
											"value": "#@&^(*&^"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "count of active/inactive users-numeric roleId",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "ace286a0-405b-403d-8acf-b4a2edb2c632",
										"exec": [
											"// if(pm.info.iteration<pm.info.iterationCount-1){\r",
											"//     pm.execution.skipRequest();\r",
											"// }"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b4e33226-ad19-41b4-bb8a-548e9da0f55f",
										"exec": [
											"var statusCode = pm.response.code;\r",
											"// Check the status code and perform actions accordingly\r",
											"if (statusCode === 201) {\r",
											"    pm.test(\"Status code is 201 (Created)\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"} else if (statusCode === 404) {\r",
											"    pm.test(\"Status code is 400 (Bad Request)\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"} else {\r",
											"    pm.test(\"Unexpected status code\", function () {\r",
											"        pm.expect.fail(\"Unexpected status code: \" + statusCode);\r",
											"    });\r",
											"}\r",
											"pm.test(\"Content-Type header is present\", ()=> {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"pm.test(\"Content-Type header is application/json\", ()=> {\r",
											" pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains('application/json');\r",
											"});\r",
											"if(pm.response.code==200){\r",
											"//schema validation\r",
											"var schema = {\r",
											"    \"$schema\": \"http://json-schema.org/draft-06/schema#\",\r",
											"    \"type\": \"array\",\r",
											"    \"items\": {\r",
											"        \"$ref\": \"#/definitions/Welcome5Element\"\r",
											"    },\r",
											"    \"definitions\": {\r",
											"        \"Welcome5Element\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"status\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"count\": {\r",
											"                    \"type\": \"integer\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"count\",\r",
											"                \"status\"\r",
											"            ],\r",
											"            \"title\": \"Welcome5Element\"\r",
											"        }\r",
											"    }\r",
											"}\r",
											"pm.test(\"Response body matches schema\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
											"}); }\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "33b79184-bb25-4000-bcce-f1b373dbfa40",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/users/byStatus?id=325436",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"users",
										"byStatus"
									],
									"query": [
										{
											"key": "id",
											"value": "325436"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "count of active/inactive users-invalid roleId",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "ace286a0-405b-403d-8acf-b4a2edb2c632",
										"exec": [
											"// if(pm.info.iteration<pm.info.iterationCount-1){\r",
											"//     pm.execution.skipRequest();\r",
											"// }"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b4e33226-ad19-41b4-bb8a-548e9da0f55f",
										"exec": [
											"var statusCode = pm.response.code;\r",
											"// Check the status code and perform actions accordingly\r",
											"if (statusCode === 201) {\r",
											"    pm.test(\"Status code is 201 (Created)\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"} else if (statusCode === 404) {\r",
											"    pm.test(\"Status code is 400 (Bad Request)\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"    } else if (statusCode === 404) {\r",
											"    pm.test(\"Status code is 400 (Not Found)\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"    });\r",
											"} else {\r",
											"    pm.test(\"Unexpected status code\", function () {\r",
											"        pm.expect.fail(\"Unexpected status code: \" + statusCode);\r",
											"    });\r",
											"}\r",
											"pm.test(\"Content-Type header is present\", ()=> {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"pm.test(\"Content-Type header is application/json\", ()=> {\r",
											" pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains('application/json');\r",
											"});\r",
											"if(pm.response.code==200){\r",
											"//schema validation\r",
											"var schema = {\r",
											"    \"$schema\": \"http://json-schema.org/draft-06/schema#\",\r",
											"    \"type\": \"array\",\r",
											"    \"items\": {\r",
											"        \"$ref\": \"#/definitions/Welcome5Element\"\r",
											"    },\r",
											"    \"definitions\": {\r",
											"        \"Welcome5Element\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"status\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"count\": {\r",
											"                    \"type\": \"integer\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"count\",\r",
											"                \"status\"\r",
											"            ],\r",
											"            \"title\": \"Welcome5Element\"\r",
											"        }\r",
											"    }\r",
											"}\r",
											"pm.test(\"Response body matches schema\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
											"}); }\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0fa8d46f-4445-49a7-9466-ac11e87d1854",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/users/byStatus?id=R04",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"users",
										"byStatus"
									],
									"query": [
										{
											"key": "id",
											"value": "R04"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "count of active/inactive users-special chars roleId",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "ace286a0-405b-403d-8acf-b4a2edb2c632",
										"exec": [
											"// if(pm.info.iteration<pm.info.iterationCount-1){\r",
											"//     pm.execution.skipRequest();\r",
											"// }"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b4e33226-ad19-41b4-bb8a-548e9da0f55f",
										"exec": [
											"var statusCode = pm.response.code;\r",
											"// Check the status code and perform actions accordingly\r",
											"if (statusCode === 201) {\r",
											"    pm.test(\"Status code is 201 (Created)\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"} else if (statusCode === 400) {\r",
											"    pm.test(\"Status code is 400 (Bad Request)\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"    });\r",
											"} else {\r",
											"    pm.test(\"Unexpected status code\", function () {\r",
											"        pm.expect.fail(\"Unexpected status code: \" + statusCode);\r",
											"    });\r",
											"}\r",
											"pm.test(\"Content-Type header is present\", ()=> {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"\r",
											"//schema validation\r",
											"if(pm.response.code==200){\r",
											"var schema = {\r",
											"    \"$schema\": \"http://json-schema.org/draft-06/schema#\",\r",
											"    \"type\": \"array\",\r",
											"    \"items\": {\r",
											"        \"$ref\": \"#/definitions/Welcome5Element\"\r",
											"    },\r",
											"    \"definitions\": {\r",
											"        \"Welcome5Element\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"status\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"count\": {\r",
											"                    \"type\": \"integer\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"count\",\r",
											"                \"status\"\r",
											"            ],\r",
											"            \"title\": \"Welcome5Element\"\r",
											"        }\r",
											"    }\r",
											"}\r",
											"pm.test(\"Response body matches schema\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
											"}); }\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "99417d78-e071-49f8-9854-bfdf070488ee",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/users/byStatus?id=ABG$%23@^!%23",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"users",
										"byStatus"
									],
									"query": [
										{
											"key": "id",
											"value": "ABG$%23@^!%23"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "user information by id-invalid userId format",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "d2ab43a2-cfd9-41d5-8cb2-cf67c7667cd6",
										"exec": [
											"// if(pm.info.iteration<pm.info.iterationCount-1){\r",
											"//     pm.execution.skipRequest();\r",
											"// }"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b07ea58c-ce3e-4936-9c9c-24834141f796",
										"exec": [
											"// Get the response status code\r",
											"var statusCode = pm.response.code;\r",
											"// Check the status code and perform actions accordingly\r",
											"if (statusCode === 201) {\r",
											"    pm.test(\"Status code is 201 (Created)\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"} else if (statusCode === 409) {\r",
											"    pm.test(\"Status code is 409 (Conflict)\", function () {\r",
											"        pm.response.to.have.status(409);\r",
											"    });\r",
											"} else if (statusCode === 404) {\r",
											"    pm.test(\"Status code is 404 (Not Found)\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"} else if (statusCode === 400) {\r",
											"    pm.test(\"Status code is 400 (Bad Request)\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"    });\r",
											"} else {\r",
											"    pm.test(\"Unexpected status code\", function () {\r",
											"        pm.expect.fail(\"Unexpected status code: \" + statusCode);\r",
											"    });\r",
											"}\r",
											"pm.test(\"Content-Type header is present\", ()=> {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"pm.test(\"Content-Type header is application/json\", ()=> {\r",
											" pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains('application/json');\r",
											"});\r",
											"if(pm.response.code==200){\r",
											"var schema = {\r",
											"    \"$schema\": \"http://json-schema.org/draft-06/schema#\",\r",
											"    \"$ref\": \"#/definitions/Welcome6\",\r",
											"    \"definitions\": {\r",
											"        \"Welcome6\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"user\": {\r",
											"                    \"$ref\": \"#/definitions/User\"\r",
											"                },\r",
											"                \"roles\": {\r",
											"                    \"type\": \"array\",\r",
											"                    \"items\": {\r",
											"                        \"$ref\": \"#/definitions/Role\"\r",
											"                    }\r",
											"                },\r",
											"                \"programBatches\": {\r",
											"                    \"type\": \"array\",\r",
											"                    \"items\": {\r",
											"                        \"$ref\": \"#/definitions/ProgramBatch\"\r",
											"                    }\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"programBatches\",\r",
											"                \"roles\",\r",
											"                \"user\"\r",
											"            ],\r",
											"            \"title\": \"Welcome6\"\r",
											"        },\r",
											"        \"ProgramBatch\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"programId\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"programName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"batches\": {\r",
											"                    \"type\": \"array\",\r",
											"                    \"items\": {\r",
											"                        \"$ref\": \"#/definitions/Batch\"\r",
											"                    }\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"batches\",\r",
											"                \"programId\",\r",
											"                \"programName\"\r",
											"            ],\r",
											"            \"title\": \"ProgramBatch\"\r",
											"        },\r",
											"        \"Batch\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"batchId\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"batchName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userBatchStatus\": {\r",
											"                    \"type\": \"string\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"batchId\",\r",
											"                \"batchName\",\r",
											"                \"userBatchStatus\"\r",
											"            ],\r",
											"            \"title\": \"Batch\"\r",
											"        },\r",
											"        \"Role\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"roleId\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userRoleStatus\": {\r",
											"                    \"type\": \"string\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"roleId\",\r",
											"                \"userRoleStatus\"\r",
											"            ],\r",
											"            \"title\": \"Role\"\r",
											"        },\r",
											"        \"User\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"userId\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userFirstName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLastName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userMiddleName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userPhoneNumber\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"userLocation\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userTimeZone\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLinkedinUrl\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                },\r",
											"                \"userEduUg\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userEduPg\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userComments\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userVisaStatus\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLoginEmail\": {\r",
											"                    \"type\": \"string\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"userComments\",\r",
											"                \"userEduPg\",\r",
											"                \"userEduUg\",\r",
											"                \"userFirstName\",\r",
											"                \"userId\",\r",
											"                \"userLastName\",\r",
											"                \"userLinkedinUrl\",\r",
											"                \"userLocation\",\r",
											"                \"userLoginEmail\",\r",
											"                \"userMiddleName\",\r",
											"                \"userPhoneNumber\",\r",
											"                \"userTimeZone\",\r",
											"                \"userVisaStatus\"\r",
											"            ],\r",
											"            \"title\": \"User\"\r",
											"        }\r",
											"    }\r",
											"}\r",
											"\r",
											"pm.test(\"Response body matches schema\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
											"}); }\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "13ffe65e-fc87-4de3-9cda-10510123d77c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/users/:{id}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"users",
										":{id}"
									],
									"variable": [
										{
											"key": "{id}",
											"value": "51"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "user information by id-special chars",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "d2ab43a2-cfd9-41d5-8cb2-cf67c7667cd6",
										"exec": [
											"// if(pm.info.iteration<pm.info.iterationCount-1){\r",
											"//     pm.execution.skipRequest();\r",
											"// }"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b07ea58c-ce3e-4936-9c9c-24834141f796",
										"exec": [
											"// Get the response status code\r",
											"var statusCode = pm.response.code;\r",
											"// Check the status code and perform actions accordingly\r",
											"if (statusCode === 201) {\r",
											"    pm.test(\"Status code is 201 (Created)\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"} else if (statusCode === 409) {\r",
											"    pm.test(\"Status code is 409 (Conflict)\", function () {\r",
											"        pm.response.to.have.status(409);\r",
											"    });\r",
											"} else if (statusCode === 404) {\r",
											"    pm.test(\"Status code is 404 (Not Found)\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"} else if (statusCode === 400) {\r",
											"    pm.test(\"Status code is 400 (Bad Request)\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"    });\r",
											"} else {\r",
											"    pm.test(\"Unexpected status code\", function () {\r",
											"        pm.expect.fail(\"Unexpected status code: \" + statusCode);\r",
											"    });\r",
											"}\r",
											"var contType = pm.response.headers.get(\"Content-Type\");\r",
											"\r",
											"if (contType === \"text/html;charset=utf-8\" || contType === \"application/json\") {\r",
											"    pm.test(\"Content-Type header is present\", () => {\r",
											"        pm.response.to.have.header(\"Content-Type\");\r",
											"    });\r",
											"} else {\r",
											"    console.error(\"Unexpected Content-Type:\", contType);\r",
											"}\r",
											"if(pm.response.code==200){\r",
											"var schema = {\r",
											"    \"$schema\": \"http://json-schema.org/draft-06/schema#\",\r",
											"    \"$ref\": \"#/definitions/Welcome6\",\r",
											"    \"definitions\": {\r",
											"        \"Welcome6\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"user\": {\r",
											"                    \"$ref\": \"#/definitions/User\"\r",
											"                },\r",
											"                \"roles\": {\r",
											"                    \"type\": \"array\",\r",
											"                    \"items\": {\r",
											"                        \"$ref\": \"#/definitions/Role\"\r",
											"                    }\r",
											"                },\r",
											"                \"programBatches\": {\r",
											"                    \"type\": \"array\",\r",
											"                    \"items\": {\r",
											"                        \"$ref\": \"#/definitions/ProgramBatch\"\r",
											"                    }\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"programBatches\",\r",
											"                \"roles\",\r",
											"                \"user\"\r",
											"            ],\r",
											"            \"title\": \"Welcome6\"\r",
											"        },\r",
											"        \"ProgramBatch\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"programId\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"programName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"batches\": {\r",
											"                    \"type\": \"array\",\r",
											"                    \"items\": {\r",
											"                        \"$ref\": \"#/definitions/Batch\"\r",
											"                    }\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"batches\",\r",
											"                \"programId\",\r",
											"                \"programName\"\r",
											"            ],\r",
											"            \"title\": \"ProgramBatch\"\r",
											"        },\r",
											"        \"Batch\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"batchId\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"batchName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userBatchStatus\": {\r",
											"                    \"type\": \"string\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"batchId\",\r",
											"                \"batchName\",\r",
											"                \"userBatchStatus\"\r",
											"            ],\r",
											"            \"title\": \"Batch\"\r",
											"        },\r",
											"        \"Role\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"roleId\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userRoleStatus\": {\r",
											"                    \"type\": \"string\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"roleId\",\r",
											"                \"userRoleStatus\"\r",
											"            ],\r",
											"            \"title\": \"Role\"\r",
											"        },\r",
											"        \"User\": {\r",
											"            \"type\": \"object\",\r",
											"            \"additionalProperties\": false,\r",
											"            \"properties\": {\r",
											"                \"userId\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userFirstName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLastName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userMiddleName\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userPhoneNumber\": {\r",
											"                    \"type\": \"integer\"\r",
											"                },\r",
											"                \"userLocation\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userTimeZone\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLinkedinUrl\": {\r",
											"                    \"type\": \"string\",\r",
											"                    \"format\": \"uri\",\r",
											"                    \"qt-uri-protocols\": [\r",
											"                        \"https\"\r",
											"                    ]\r",
											"                },\r",
											"                \"userEduUg\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userEduPg\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userComments\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userVisaStatus\": {\r",
											"                    \"type\": \"string\"\r",
											"                },\r",
											"                \"userLoginEmail\": {\r",
											"                    \"type\": \"string\"\r",
											"                }\r",
											"            },\r",
											"            \"required\": [\r",
											"                \"userComments\",\r",
											"                \"userEduPg\",\r",
											"                \"userEduUg\",\r",
											"                \"userFirstName\",\r",
											"                \"userId\",\r",
											"                \"userLastName\",\r",
											"                \"userLinkedinUrl\",\r",
											"                \"userLocation\",\r",
											"                \"userLoginEmail\",\r",
											"                \"userMiddleName\",\r",
											"                \"userPhoneNumber\",\r",
											"                \"userTimeZone\",\r",
											"                \"userVisaStatus\"\r",
											"            ],\r",
											"            \"title\": \"User\"\r",
											"        }\r",
											"    }\r",
											"}\r",
											"\r",
											"pm.test(\"Response body matches schema\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
											"}); }\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "475a6033-0d54-4981-8b36-6b5c79164bcd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/users/:{id}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"users",
										":{id}"
									],
									"variable": [
										{
											"key": "{id}",
											"value": "&^*(#@"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete User by invalid userId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7ed29e72-fe2e-4b66-8bd2-0f486aefcd80",
										"exec": [
											"var statusCode = pm.response.code;\r",
											"// Check the status code and perform actions accordingly\r",
											"if (statusCode === 201) {\r",
											"    pm.test(\"Status code is 201 (Created)\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"\r",
											"} else if (statusCode === 404) {\r",
											"    pm.test(\"Status code is 404 (Not Found)\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"} else if (statusCode === 400) {\r",
											"    pm.test(\"Status code is 400 (Bad Request)\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"    });\r",
											"} else {\r",
											"    pm.test(\"Unexpected status code\", function () {\r",
											"        pm.expect.fail(\"Unexpected status code: \" + statusCode);\r",
											"    });\r",
											"}\r",
											"pm.test(\"Content-Type header is present\", ()=> {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"pm.test(\"Content-Type header is application/json\", ()=> {\r",
											" pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains('application/json');\r",
											" });\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "889b43ee-a786-4ca7-956c-87c34a13eacd",
										"exec": [
											"// if(pm.info.iteration<pm.info.iterationCount-1){\r",
											"//     pm.execution.skipRequest();\r",
											"// }"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "5405de92-1005-428e-a377-f6faadfd91d1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/users/:userId",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"users",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "51"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete by userId with special character",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7ed29e72-fe2e-4b66-8bd2-0f486aefcd80",
										"exec": [
											"var statusCode = pm.response.code;\r",
											"// Check the status code and perform actions accordingly\r",
											"if (statusCode === 201) {\r",
											"    pm.test(\"Status code is 201 (Created)\", function () {\r",
											"        pm.response.to.have.status(201);\r",
											"    });\r",
											"\r",
											"} else if (statusCode === 404) {\r",
											"    pm.test(\"Status code is 404 (Not Found)\", function () {\r",
											"        pm.response.to.have.status(404);\r",
											"    });\r",
											"} else if (statusCode === 400) {\r",
											"    pm.test(\"Status code is 400 (Bad Request)\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"    });\r",
											"} else {\r",
											"    pm.test(\"Unexpected status code\", function () {\r",
											"        pm.expect.fail(\"Unexpected status code: \" + statusCode);\r",
											"    });\r",
											"}\r",
											"pm.test(\"Content-Type header is present\", ()=> {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"pm.test(\"Content-Type header is application/json\", ()=> {\r",
											" pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains('application/json');\r",
											" });\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "889b43ee-a786-4ca7-956c-87c34a13eacd",
										"exec": [
											"// if(pm.info.iteration<pm.info.iterationCount-1){\r",
											"//     pm.execution.skipRequest();\r",
											"// }"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "8ac6b182-b397-4d46-99a1-6c0b319874d6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/users/:userId",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"users",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "U51!"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "d4b555cd-9bde-4b90-8de9-b5fbaafa6b93"
				},
				{
					"name": "User Role program batch map controller",
					"item": [
						{
							"name": "Invalid-Get Assigned Program/Batch of a User By User Id",
							"item": [
								{
									"name": "Get Assigned Program/Batch of a User By User Id -String",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "aa1d86ce-2459-4169-8678-334e74ac1b73",
												"exec": [
													"// Get the response status code\r",
													"var statusCode = pm.response.code;\r",
													"// Check the status code and perform actions accordingly\r",
													"if (statusCode === 200) {\r",
													"    pm.test(\"Status code is 200 (Created)\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else if (statusCode === 404) {\r",
													"    pm.test(\"Status code is 404 (Not Found)\", function () {\r",
													"        pm.response.to.have.status(404);\r",
													"    });\r",
													"} else if (statusCode === 400) {\r",
													"    pm.test(\"Status code is 400 (Bad Request)\", function () {\r",
													"        pm.response.to.have.status(400);\r",
													"    });\r",
													"} else {\r",
													"    pm.test(\"Unexpected status code\", function () {\r",
													"        pm.expect.fail(\"Unexpected status code: \" + statusCode);\r",
													"    });\r",
													"}\r",
													"pm.test(\"Content-Type header is present\", ()=> {\r",
													"    pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													"pm.test(\"Content-Type header is application/json\", ()=> {\r",
													" pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains('application/json');\r",
													" });\r",
													"if(pm.response.code==200){\r",
													" var schema={\r",
													"    \"$schema\": \"https://json-schema.org/draft/2019-09/schema\",\r",
													"    \"$id\": \"http://example.com/example.json\",\r",
													"    \"type\": \"array\",\r",
													"    \"default\": [],\r",
													"    \"title\": \"Root Schema\",\r",
													"    \"items\": {\r",
													"        \"type\": \"object\",\r",
													"        \"title\": \"A Schema\",\r",
													"        \"required\": [\r",
													"            \"userId\",\r",
													"            \"roleId\",\r",
													"            \"programId\",\r",
													"            \"batchId\",\r",
													"            \"userRoleProgramBatchStatus\"\r",
													"        ],\r",
													"        \"properties\": {\r",
													"            \"userId\": {\r",
													"                \"type\": \"string\",\r",
													"                \"title\": \"The userId Schema\",\r",
													"                \"examples\": [\r",
													"                    \"U01\",\r",
													"                    \"U1067\",\r",
													"                    \"U1097\",\r",
													"                    \"U1136\",\r",
													"                    \"U1158\",\r",
													"                    \"U1162\",\r",
													"                    \"U07\",\r",
													"                    \"U1138\",\r",
													"                    \"U295\",\r",
													"                    \"U1160\",\r",
													"                    \"U1190\",\r",
													"                    \"U34\",\r",
													"                    \"U1209\",\r",
													"                    \"U19\",\r",
													"                    \"U1214\",\r",
													"                    \"U24\",\r",
													"                    \"U1185\",\r",
													"                    \"U727\",\r",
													"                    \"U765\",\r",
													"                    \"U782\",\r",
													"                    \"U693\",\r",
													"                    \"U1231\",\r",
													"                    \"U38\",\r",
													"                    \"U2203\",\r",
													"                    \"U958\",\r",
													"                    \"U1235\",\r",
													"                    \"U1247\",\r",
													"                    \"U983\",\r",
													"                    \"U1279\",\r",
													"                    \"U1325\",\r",
													"                    \"U1337\",\r",
													"                    \"U270\",\r",
													"                    \"U2241\",\r",
													"                    \"U1835\"\r",
													"                ]\r",
													"            },\r",
													"            \"roleId\": {\r",
													"                \"type\": \"string\",\r",
													"                \"title\": \"The roleId Schema\",\r",
													"                \"examples\": [\r",
													"                    \"R01\",\r",
													"                    \"R03\",\r",
													"                    \"R02\"\r",
													"                ]\r",
													"            },\r",
													"            \"programId\": {\r",
													"                \"type\": \"integer\",\r",
													"                \"title\": \"The programId Schema\",\r",
													"                \"examples\": [\r",
													"                    16208,\r",
													"                    16213,\r",
													"                    16794,\r",
													"                    16872,\r",
													"                    16816,\r",
													"                    16907,\r",
													"                    16911,\r",
													"                    16884,\r",
													"                    16586,\r",
													"                    16854,\r",
													"                    16930,\r",
													"                    16937,\r",
													"                    16938,\r",
													"                    16839,\r",
													"                    16505,\r",
													"                    16527,\r",
													"                    16551,\r",
													"                    16945,\r",
													"                    17236,\r",
													"                    16677,\r",
													"                    16949,\r",
													"                    16955,\r",
													"                    16785,\r",
													"                    16957,\r",
													"                    16960,\r",
													"                    16243,\r",
													"                    17252,\r",
													"                    17170\r",
													"                ]\r",
													"            },\r",
													"            \"batchId\": {\r",
													"                \"type\": \"integer\",\r",
													"                \"title\": \"The batchId Schema\",\r",
													"                \"examples\": [\r",
													"                    8432,\r",
													"                    8448,\r",
													"                    8719,\r",
													"                    8749,\r",
													"                    8756,\r",
													"                    8776,\r",
													"                    8777,\r",
													"                    8784,\r",
													"                    8621,\r",
													"                    8759,\r",
													"                    8796,\r",
													"                    8804,\r",
													"                    8808,\r",
													"                    8757,\r",
													"                    8586,\r",
													"                    8605,\r",
													"                    8615,\r",
													"                    8570,\r",
													"                    8835,\r",
													"                    9025,\r",
													"                    8657,\r",
													"                    8838,\r",
													"                    8846,\r",
													"                    8717,\r",
													"                    8857,\r",
													"                    8858,\r",
													"                    8472,\r",
													"                    9034,\r",
													"                    8971\r",
													"                ]\r",
													"            },\r",
													"            \"userRoleProgramBatchStatus\": {\r",
													"                \"type\": \"string\",\r",
													"                \"title\": \"The userRoleProgramBatchStatus Schema\",\r",
													"                \"examples\": [\r",
													"                    \"Active\",\r",
													"                    \"active\"\r",
													"                ]\r",
													"            }\r",
													"        },\r",
													"        \"examples\": [{\r",
													"            \"userId\": \"U01\",\r",
													"            \"roleId\": \"R01\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U01\",\r",
													"            \"roleId\": \"R01\",\r",
													"            \"programId\": 16213,\r",
													"            \"batchId\": 8448,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1067\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16794,\r",
													"            \"batchId\": 8719,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1097\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16872,\r",
													"            \"batchId\": 8749,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1136\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16816,\r",
													"            \"batchId\": 8756,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1158\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16907,\r",
													"            \"batchId\": 8776,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1162\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16911,\r",
													"            \"batchId\": 8777,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U07\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1138\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16884,\r",
													"            \"batchId\": 8784,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U295\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16586,\r",
													"            \"batchId\": 8621,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1160\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16854,\r",
													"            \"batchId\": 8759,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1190\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16930,\r",
													"            \"batchId\": 8796,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U34\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1209\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16937,\r",
													"            \"batchId\": 8804,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U19\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1214\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16938,\r",
													"            \"batchId\": 8808,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U24\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1185\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16839,\r",
													"            \"batchId\": 8757,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U727\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16505,\r",
													"            \"batchId\": 8586,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U765\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16527,\r",
													"            \"batchId\": 8605,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U782\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16551,\r",
													"            \"batchId\": 8615,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U693\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16213,\r",
													"            \"batchId\": 8570,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1231\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16945,\r",
													"            \"batchId\": 8835,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U38\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U2203\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 17236,\r",
													"            \"batchId\": 9025,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U958\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16677,\r",
													"            \"batchId\": 8657,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1235\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16949,\r",
													"            \"batchId\": 8838,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1247\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16955,\r",
													"            \"batchId\": 8846,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U983\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16785,\r",
													"            \"batchId\": 8717,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1279\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16957,\r",
													"            \"batchId\": 8857,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1325\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16960,\r",
													"            \"batchId\": 8858,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1337\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16839,\r",
													"            \"batchId\": 8757,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U270\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16243,\r",
													"            \"batchId\": 8472,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U2241\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 17252,\r",
													"            \"batchId\": 9034,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1835\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 17170,\r",
													"            \"batchId\": 8971,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        }]\r",
													"    },\r",
													"    \"examples\": [\r",
													"        [{\r",
													"            \"userId\": \"U01\",\r",
													"            \"roleId\": \"R01\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U01\",\r",
													"            \"roleId\": \"R01\",\r",
													"            \"programId\": 16213,\r",
													"            \"batchId\": 8448,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1067\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16794,\r",
													"            \"batchId\": 8719,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1097\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16872,\r",
													"            \"batchId\": 8749,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1136\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16816,\r",
													"            \"batchId\": 8756,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1158\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16907,\r",
													"            \"batchId\": 8776,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1162\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16911,\r",
													"            \"batchId\": 8777,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U07\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1138\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16884,\r",
													"            \"batchId\": 8784,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U295\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16586,\r",
													"            \"batchId\": 8621,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1160\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16854,\r",
													"            \"batchId\": 8759,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1190\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16930,\r",
													"            \"batchId\": 8796,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U34\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1209\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16937,\r",
													"            \"batchId\": 8804,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U19\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1214\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16938,\r",
													"            \"batchId\": 8808,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U24\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1185\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16839,\r",
													"            \"batchId\": 8757,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U727\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16505,\r",
													"            \"batchId\": 8586,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U765\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16527,\r",
													"            \"batchId\": 8605,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U782\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16551,\r",
													"            \"batchId\": 8615,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U693\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16213,\r",
													"            \"batchId\": 8570,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1231\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16945,\r",
													"            \"batchId\": 8835,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U38\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U2203\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 17236,\r",
													"            \"batchId\": 9025,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U958\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16677,\r",
													"            \"batchId\": 8657,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1235\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16949,\r",
													"            \"batchId\": 8838,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1247\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16955,\r",
													"            \"batchId\": 8846,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U983\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16785,\r",
													"            \"batchId\": 8717,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1279\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16957,\r",
													"            \"batchId\": 8857,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1325\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16960,\r",
													"            \"batchId\": 8858,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1337\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16839,\r",
													"            \"batchId\": 8757,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U270\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16243,\r",
													"            \"batchId\": 8472,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U2241\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 17252,\r",
													"            \"batchId\": 9034,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1835\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 17170,\r",
													"            \"batchId\": 8971,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        }]\r",
													"    ]\r",
													"}\r",
													"pm.test(\"Response body matches schema\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
													"}); }\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "f31b0b6f-2b68-4e5b-b5a8-e7da0829a863",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"password\": \"Numpyninja@1\",\r\n  \"userLoginEmailId\": \"sdetorganizers@gmail.com\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BaseUrl}}/userRoleProgramBatchMap/:{userId}",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"userRoleProgramBatchMap",
												":{userId}"
											],
											"variable": [
												{
													"id": "dd6a9b4a-3951-45ed-810c-269e0e1d802f",
													"key": "{userId}",
													"value": "ranjitha"
												}
											]
										}
									},
									"response": [
										{
											"id": "346e54fd-9778-439e-8a2e-5313971ca6e0",
											"name": "Get Assigned Program/Batch of a User By User Id",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"password\": \"Numpyninja@1\",\r\n  \"userLoginEmailId\": \"sdetorganizers@gmail.com\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{BaseUrl}}/userRoleProgramBatchMap/U38"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "Cowboy"
												},
												{
													"key": "Report-To",
													"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1709844020&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=lwsSOT8CKxyf7VA%2F2La0TBZCIRV7YVtVxEi3wssWzZQ%3D\"}]}"
												},
												{
													"key": "Reporting-Endpoints",
													"value": "heroku-nel=https://nel.heroku.com/reports?ts=1709844020&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=lwsSOT8CKxyf7VA%2F2La0TBZCIRV7YVtVxEi3wssWzZQ%3D"
												},
												{
													"key": "Nel",
													"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Origin"
												},
												{
													"key": "Vary",
													"value": "Access-Control-Request-Method"
												},
												{
													"key": "Vary",
													"value": "Access-Control-Request-Headers"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "X-Xss-Protection",
													"value": "1; mode=block"
												},
												{
													"key": "Cache-Control",
													"value": "no-cache, no-store, max-age=0, must-revalidate"
												},
												{
													"key": "Pragma",
													"value": "no-cache"
												},
												{
													"key": "Expires",
													"value": "0"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=31536000 ; includeSubDomains"
												},
												{
													"key": "X-Frame-Options",
													"value": "DENY"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Thu, 07 Mar 2024 20:40:20 GMT"
												},
												{
													"key": "Via",
													"value": "1.1 vegur"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "[\n    {\n        \"userId\": \"U38\",\n        \"roleId\": \"R03\",\n        \"programId\": 16208,\n        \"batchId\": 8432,\n        \"userRoleProgramBatchStatus\": \"Active\"\n    }\n]"
										},
										{
											"id": "d34eb4ba-78ce-400f-9a1d-0bdea62dbf2d",
											"name": "Get Assigned Program/Batch of a User By User Id",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"password\": \"Numpyninja@1\",\r\n  \"userLoginEmailId\": \"sdetorganizers@gmail.com\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{BaseUrl}}/userRoleProgramBatchMap/U3888"
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "Cowboy"
												},
												{
													"key": "Report-To",
													"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1709844030&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=m2Hv5hddxHTPnY1%2FnaESD%2Be3CuU3HHjyDaNLsPS9cAk%3D\"}]}"
												},
												{
													"key": "Reporting-Endpoints",
													"value": "heroku-nel=https://nel.heroku.com/reports?ts=1709844030&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=m2Hv5hddxHTPnY1%2FnaESD%2Be3CuU3HHjyDaNLsPS9cAk%3D"
												},
												{
													"key": "Nel",
													"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Origin"
												},
												{
													"key": "Vary",
													"value": "Access-Control-Request-Method"
												},
												{
													"key": "Vary",
													"value": "Access-Control-Request-Headers"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "X-Xss-Protection",
													"value": "1; mode=block"
												},
												{
													"key": "Cache-Control",
													"value": "no-cache, no-store, max-age=0, must-revalidate"
												},
												{
													"key": "Pragma",
													"value": "no-cache"
												},
												{
													"key": "Expires",
													"value": "0"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=31536000 ; includeSubDomains"
												},
												{
													"key": "X-Frame-Options",
													"value": "DENY"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Thu, 07 Mar 2024 20:40:30 GMT"
												},
												{
													"key": "Via",
													"value": "1.1 vegur"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"message\": \"UserRoleProgramBatchMap not found with Id : U3888 \",\n    \"success\": false\n}"
										}
									]
								},
								{
									"name": "Get Assigned Program/Batch of a User By User Id -Alphanumeric",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "aa1d86ce-2459-4169-8678-334e74ac1b73",
												"exec": [
													"// Get the response status code\r",
													"var statusCode = pm.response.code;\r",
													"// Check the status code and perform actions accordingly\r",
													"if (statusCode === 200) {\r",
													"    pm.test(\"Status code is 200 (Created)\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else if (statusCode === 404) {\r",
													"    pm.test(\"Status code is 404 (Not Found)\", function () {\r",
													"        pm.response.to.have.status(404);\r",
													"    });\r",
													"} else if (statusCode === 400) {\r",
													"    pm.test(\"Status code is 400 (Bad Request)\", function () {\r",
													"        pm.response.to.have.status(400);\r",
													"    });\r",
													"} else {\r",
													"    pm.test(\"Unexpected status code\", function () {\r",
													"        pm.expect.fail(\"Unexpected status code: \" + statusCode);\r",
													"    });\r",
													"}\r",
													"pm.test(\"Content-Type header is present\", ()=> {\r",
													"    pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													"pm.test(\"Content-Type header is application/json\", ()=> {\r",
													" pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains('application/json');\r",
													" });\r",
													"if(pm.response.code==200){\r",
													" var schema={\r",
													"    \"$schema\": \"https://json-schema.org/draft/2019-09/schema\",\r",
													"    \"$id\": \"http://example.com/example.json\",\r",
													"    \"type\": \"array\",\r",
													"    \"default\": [],\r",
													"    \"title\": \"Root Schema\",\r",
													"    \"items\": {\r",
													"        \"type\": \"object\",\r",
													"        \"title\": \"A Schema\",\r",
													"        \"required\": [\r",
													"            \"userId\",\r",
													"            \"roleId\",\r",
													"            \"programId\",\r",
													"            \"batchId\",\r",
													"            \"userRoleProgramBatchStatus\"\r",
													"        ],\r",
													"        \"properties\": {\r",
													"            \"userId\": {\r",
													"                \"type\": \"string\",\r",
													"                \"title\": \"The userId Schema\",\r",
													"                \"examples\": [\r",
													"                    \"U01\",\r",
													"                    \"U1067\",\r",
													"                    \"U1097\",\r",
													"                    \"U1136\",\r",
													"                    \"U1158\",\r",
													"                    \"U1162\",\r",
													"                    \"U07\",\r",
													"                    \"U1138\",\r",
													"                    \"U295\",\r",
													"                    \"U1160\",\r",
													"                    \"U1190\",\r",
													"                    \"U34\",\r",
													"                    \"U1209\",\r",
													"                    \"U19\",\r",
													"                    \"U1214\",\r",
													"                    \"U24\",\r",
													"                    \"U1185\",\r",
													"                    \"U727\",\r",
													"                    \"U765\",\r",
													"                    \"U782\",\r",
													"                    \"U693\",\r",
													"                    \"U1231\",\r",
													"                    \"U38\",\r",
													"                    \"U2203\",\r",
													"                    \"U958\",\r",
													"                    \"U1235\",\r",
													"                    \"U1247\",\r",
													"                    \"U983\",\r",
													"                    \"U1279\",\r",
													"                    \"U1325\",\r",
													"                    \"U1337\",\r",
													"                    \"U270\",\r",
													"                    \"U2241\",\r",
													"                    \"U1835\"\r",
													"                ]\r",
													"            },\r",
													"            \"roleId\": {\r",
													"                \"type\": \"string\",\r",
													"                \"title\": \"The roleId Schema\",\r",
													"                \"examples\": [\r",
													"                    \"R01\",\r",
													"                    \"R03\",\r",
													"                    \"R02\"\r",
													"                ]\r",
													"            },\r",
													"            \"programId\": {\r",
													"                \"type\": \"integer\",\r",
													"                \"title\": \"The programId Schema\",\r",
													"                \"examples\": [\r",
													"                    16208,\r",
													"                    16213,\r",
													"                    16794,\r",
													"                    16872,\r",
													"                    16816,\r",
													"                    16907,\r",
													"                    16911,\r",
													"                    16884,\r",
													"                    16586,\r",
													"                    16854,\r",
													"                    16930,\r",
													"                    16937,\r",
													"                    16938,\r",
													"                    16839,\r",
													"                    16505,\r",
													"                    16527,\r",
													"                    16551,\r",
													"                    16945,\r",
													"                    17236,\r",
													"                    16677,\r",
													"                    16949,\r",
													"                    16955,\r",
													"                    16785,\r",
													"                    16957,\r",
													"                    16960,\r",
													"                    16243,\r",
													"                    17252,\r",
													"                    17170\r",
													"                ]\r",
													"            },\r",
													"            \"batchId\": {\r",
													"                \"type\": \"integer\",\r",
													"                \"title\": \"The batchId Schema\",\r",
													"                \"examples\": [\r",
													"                    8432,\r",
													"                    8448,\r",
													"                    8719,\r",
													"                    8749,\r",
													"                    8756,\r",
													"                    8776,\r",
													"                    8777,\r",
													"                    8784,\r",
													"                    8621,\r",
													"                    8759,\r",
													"                    8796,\r",
													"                    8804,\r",
													"                    8808,\r",
													"                    8757,\r",
													"                    8586,\r",
													"                    8605,\r",
													"                    8615,\r",
													"                    8570,\r",
													"                    8835,\r",
													"                    9025,\r",
													"                    8657,\r",
													"                    8838,\r",
													"                    8846,\r",
													"                    8717,\r",
													"                    8857,\r",
													"                    8858,\r",
													"                    8472,\r",
													"                    9034,\r",
													"                    8971\r",
													"                ]\r",
													"            },\r",
													"            \"userRoleProgramBatchStatus\": {\r",
													"                \"type\": \"string\",\r",
													"                \"title\": \"The userRoleProgramBatchStatus Schema\",\r",
													"                \"examples\": [\r",
													"                    \"Active\",\r",
													"                    \"active\"\r",
													"                ]\r",
													"            }\r",
													"        },\r",
													"        \"examples\": [{\r",
													"            \"userId\": \"U01\",\r",
													"            \"roleId\": \"R01\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U01\",\r",
													"            \"roleId\": \"R01\",\r",
													"            \"programId\": 16213,\r",
													"            \"batchId\": 8448,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1067\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16794,\r",
													"            \"batchId\": 8719,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1097\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16872,\r",
													"            \"batchId\": 8749,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1136\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16816,\r",
													"            \"batchId\": 8756,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1158\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16907,\r",
													"            \"batchId\": 8776,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1162\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16911,\r",
													"            \"batchId\": 8777,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U07\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1138\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16884,\r",
													"            \"batchId\": 8784,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U295\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16586,\r",
													"            \"batchId\": 8621,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1160\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16854,\r",
													"            \"batchId\": 8759,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1190\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16930,\r",
													"            \"batchId\": 8796,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U34\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1209\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16937,\r",
													"            \"batchId\": 8804,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U19\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1214\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16938,\r",
													"            \"batchId\": 8808,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U24\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1185\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16839,\r",
													"            \"batchId\": 8757,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U727\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16505,\r",
													"            \"batchId\": 8586,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U765\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16527,\r",
													"            \"batchId\": 8605,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U782\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16551,\r",
													"            \"batchId\": 8615,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U693\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16213,\r",
													"            \"batchId\": 8570,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1231\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16945,\r",
													"            \"batchId\": 8835,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U38\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U2203\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 17236,\r",
													"            \"batchId\": 9025,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U958\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16677,\r",
													"            \"batchId\": 8657,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1235\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16949,\r",
													"            \"batchId\": 8838,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1247\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16955,\r",
													"            \"batchId\": 8846,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U983\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16785,\r",
													"            \"batchId\": 8717,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1279\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16957,\r",
													"            \"batchId\": 8857,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1325\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16960,\r",
													"            \"batchId\": 8858,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1337\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16839,\r",
													"            \"batchId\": 8757,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U270\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16243,\r",
													"            \"batchId\": 8472,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U2241\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 17252,\r",
													"            \"batchId\": 9034,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1835\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 17170,\r",
													"            \"batchId\": 8971,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        }]\r",
													"    },\r",
													"    \"examples\": [\r",
													"        [{\r",
													"            \"userId\": \"U01\",\r",
													"            \"roleId\": \"R01\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U01\",\r",
													"            \"roleId\": \"R01\",\r",
													"            \"programId\": 16213,\r",
													"            \"batchId\": 8448,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1067\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16794,\r",
													"            \"batchId\": 8719,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1097\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16872,\r",
													"            \"batchId\": 8749,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1136\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16816,\r",
													"            \"batchId\": 8756,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1158\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16907,\r",
													"            \"batchId\": 8776,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1162\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16911,\r",
													"            \"batchId\": 8777,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U07\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1138\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16884,\r",
													"            \"batchId\": 8784,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U295\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16586,\r",
													"            \"batchId\": 8621,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1160\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16854,\r",
													"            \"batchId\": 8759,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1190\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16930,\r",
													"            \"batchId\": 8796,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U34\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1209\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16937,\r",
													"            \"batchId\": 8804,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U19\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1214\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16938,\r",
													"            \"batchId\": 8808,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U24\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1185\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16839,\r",
													"            \"batchId\": 8757,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U727\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16505,\r",
													"            \"batchId\": 8586,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U765\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16527,\r",
													"            \"batchId\": 8605,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U782\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16551,\r",
													"            \"batchId\": 8615,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U693\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16213,\r",
													"            \"batchId\": 8570,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1231\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16945,\r",
													"            \"batchId\": 8835,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U38\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U2203\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 17236,\r",
													"            \"batchId\": 9025,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U958\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16677,\r",
													"            \"batchId\": 8657,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1235\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16949,\r",
													"            \"batchId\": 8838,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1247\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16955,\r",
													"            \"batchId\": 8846,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U983\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16785,\r",
													"            \"batchId\": 8717,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1279\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16957,\r",
													"            \"batchId\": 8857,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1325\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16960,\r",
													"            \"batchId\": 8858,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1337\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16839,\r",
													"            \"batchId\": 8757,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U270\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16243,\r",
													"            \"batchId\": 8472,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U2241\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 17252,\r",
													"            \"batchId\": 9034,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1835\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 17170,\r",
													"            \"batchId\": 8971,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        }]\r",
													"    ]\r",
													"}\r",
													"pm.test(\"Response body matches schema\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
													"}); }\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "e725e0d5-0c98-4dd5-b4ed-1fa1ae071270",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"password\": \"Numpyninja@1\",\r\n  \"userLoginEmailId\": \"sdetorganizers@gmail.com\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BaseUrl}}/userRoleProgramBatchMap/:{userId}",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"userRoleProgramBatchMap",
												":{userId}"
											],
											"variable": [
												{
													"id": "ce94b1cf-b302-4807-a906-486c161cf64f",
													"key": "{userId}",
													"value": "ranjitha1243"
												}
											]
										}
									},
									"response": [
										{
											"id": "033a3efe-d52b-41bf-aad1-645c640debe5",
											"name": "Get Assigned Program/Batch of a User By User Id",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"password\": \"Numpyninja@1\",\r\n  \"userLoginEmailId\": \"sdetorganizers@gmail.com\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{BaseUrl}}/userRoleProgramBatchMap/U38"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "Cowboy"
												},
												{
													"key": "Report-To",
													"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1709844020&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=lwsSOT8CKxyf7VA%2F2La0TBZCIRV7YVtVxEi3wssWzZQ%3D\"}]}"
												},
												{
													"key": "Reporting-Endpoints",
													"value": "heroku-nel=https://nel.heroku.com/reports?ts=1709844020&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=lwsSOT8CKxyf7VA%2F2La0TBZCIRV7YVtVxEi3wssWzZQ%3D"
												},
												{
													"key": "Nel",
													"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Origin"
												},
												{
													"key": "Vary",
													"value": "Access-Control-Request-Method"
												},
												{
													"key": "Vary",
													"value": "Access-Control-Request-Headers"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "X-Xss-Protection",
													"value": "1; mode=block"
												},
												{
													"key": "Cache-Control",
													"value": "no-cache, no-store, max-age=0, must-revalidate"
												},
												{
													"key": "Pragma",
													"value": "no-cache"
												},
												{
													"key": "Expires",
													"value": "0"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=31536000 ; includeSubDomains"
												},
												{
													"key": "X-Frame-Options",
													"value": "DENY"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Thu, 07 Mar 2024 20:40:20 GMT"
												},
												{
													"key": "Via",
													"value": "1.1 vegur"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "[\n    {\n        \"userId\": \"U38\",\n        \"roleId\": \"R03\",\n        \"programId\": 16208,\n        \"batchId\": 8432,\n        \"userRoleProgramBatchStatus\": \"Active\"\n    }\n]"
										},
										{
											"id": "63f801fe-b290-45a2-82fa-6031e1131fb2",
											"name": "Get Assigned Program/Batch of a User By User Id",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"password\": \"Numpyninja@1\",\r\n  \"userLoginEmailId\": \"sdetorganizers@gmail.com\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{BaseUrl}}/userRoleProgramBatchMap/U3888"
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "Cowboy"
												},
												{
													"key": "Report-To",
													"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1709844030&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=m2Hv5hddxHTPnY1%2FnaESD%2Be3CuU3HHjyDaNLsPS9cAk%3D\"}]}"
												},
												{
													"key": "Reporting-Endpoints",
													"value": "heroku-nel=https://nel.heroku.com/reports?ts=1709844030&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=m2Hv5hddxHTPnY1%2FnaESD%2Be3CuU3HHjyDaNLsPS9cAk%3D"
												},
												{
													"key": "Nel",
													"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Origin"
												},
												{
													"key": "Vary",
													"value": "Access-Control-Request-Method"
												},
												{
													"key": "Vary",
													"value": "Access-Control-Request-Headers"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "X-Xss-Protection",
													"value": "1; mode=block"
												},
												{
													"key": "Cache-Control",
													"value": "no-cache, no-store, max-age=0, must-revalidate"
												},
												{
													"key": "Pragma",
													"value": "no-cache"
												},
												{
													"key": "Expires",
													"value": "0"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=31536000 ; includeSubDomains"
												},
												{
													"key": "X-Frame-Options",
													"value": "DENY"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Thu, 07 Mar 2024 20:40:30 GMT"
												},
												{
													"key": "Via",
													"value": "1.1 vegur"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"message\": \"UserRoleProgramBatchMap not found with Id : U3888 \",\n    \"success\": false\n}"
										}
									]
								},
								{
									"name": "Get Assigned Program/Batch of a User By User Id -Blank",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "aa1d86ce-2459-4169-8678-334e74ac1b73",
												"exec": [
													"// Get the response status code\r",
													"var statusCode = pm.response.code;\r",
													"// Check the status code and perform actions accordingly\r",
													"if (statusCode === 200) {\r",
													"    pm.test(\"Status code is 200 (Created)\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else if (statusCode === 404) {\r",
													"    pm.test(\"Status code is 404 (Not Found)\", function () {\r",
													"        pm.response.to.have.status(404);\r",
													"    });\r",
													"} else if (statusCode === 400) {\r",
													"    pm.test(\"Status code is 400 (Bad Request)\", function () {\r",
													"        pm.response.to.have.status(400);\r",
													"    });\r",
													"} else {\r",
													"    pm.test(\"Unexpected status code\", function () {\r",
													"        pm.expect.fail(\"Unexpected status code: \" + statusCode);\r",
													"    });\r",
													"}\r",
													"pm.test(\"Content-Type header is present\", ()=> {\r",
													"    pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													"pm.test(\"Content-Type header is application/json\", ()=> {\r",
													" pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains('application/json');\r",
													" });\r",
													"if(pm.response.code==200){\r",
													" var schema={\r",
													"    \"$schema\": \"https://json-schema.org/draft/2019-09/schema\",\r",
													"    \"$id\": \"http://example.com/example.json\",\r",
													"    \"type\": \"array\",\r",
													"    \"default\": [],\r",
													"    \"title\": \"Root Schema\",\r",
													"    \"items\": {\r",
													"        \"type\": \"object\",\r",
													"        \"title\": \"A Schema\",\r",
													"        \"required\": [\r",
													"            \"userId\",\r",
													"            \"roleId\",\r",
													"            \"programId\",\r",
													"            \"batchId\",\r",
													"            \"userRoleProgramBatchStatus\"\r",
													"        ],\r",
													"        \"properties\": {\r",
													"            \"userId\": {\r",
													"                \"type\": \"string\",\r",
													"                \"title\": \"The userId Schema\",\r",
													"                \"examples\": [\r",
													"                    \"U01\",\r",
													"                    \"U1067\",\r",
													"                    \"U1097\",\r",
													"                    \"U1136\",\r",
													"                    \"U1158\",\r",
													"                    \"U1162\",\r",
													"                    \"U07\",\r",
													"                    \"U1138\",\r",
													"                    \"U295\",\r",
													"                    \"U1160\",\r",
													"                    \"U1190\",\r",
													"                    \"U34\",\r",
													"                    \"U1209\",\r",
													"                    \"U19\",\r",
													"                    \"U1214\",\r",
													"                    \"U24\",\r",
													"                    \"U1185\",\r",
													"                    \"U727\",\r",
													"                    \"U765\",\r",
													"                    \"U782\",\r",
													"                    \"U693\",\r",
													"                    \"U1231\",\r",
													"                    \"U38\",\r",
													"                    \"U2203\",\r",
													"                    \"U958\",\r",
													"                    \"U1235\",\r",
													"                    \"U1247\",\r",
													"                    \"U983\",\r",
													"                    \"U1279\",\r",
													"                    \"U1325\",\r",
													"                    \"U1337\",\r",
													"                    \"U270\",\r",
													"                    \"U2241\",\r",
													"                    \"U1835\"\r",
													"                ]\r",
													"            },\r",
													"            \"roleId\": {\r",
													"                \"type\": \"string\",\r",
													"                \"title\": \"The roleId Schema\",\r",
													"                \"examples\": [\r",
													"                    \"R01\",\r",
													"                    \"R03\",\r",
													"                    \"R02\"\r",
													"                ]\r",
													"            },\r",
													"            \"programId\": {\r",
													"                \"type\": \"integer\",\r",
													"                \"title\": \"The programId Schema\",\r",
													"                \"examples\": [\r",
													"                    16208,\r",
													"                    16213,\r",
													"                    16794,\r",
													"                    16872,\r",
													"                    16816,\r",
													"                    16907,\r",
													"                    16911,\r",
													"                    16884,\r",
													"                    16586,\r",
													"                    16854,\r",
													"                    16930,\r",
													"                    16937,\r",
													"                    16938,\r",
													"                    16839,\r",
													"                    16505,\r",
													"                    16527,\r",
													"                    16551,\r",
													"                    16945,\r",
													"                    17236,\r",
													"                    16677,\r",
													"                    16949,\r",
													"                    16955,\r",
													"                    16785,\r",
													"                    16957,\r",
													"                    16960,\r",
													"                    16243,\r",
													"                    17252,\r",
													"                    17170\r",
													"                ]\r",
													"            },\r",
													"            \"batchId\": {\r",
													"                \"type\": \"integer\",\r",
													"                \"title\": \"The batchId Schema\",\r",
													"                \"examples\": [\r",
													"                    8432,\r",
													"                    8448,\r",
													"                    8719,\r",
													"                    8749,\r",
													"                    8756,\r",
													"                    8776,\r",
													"                    8777,\r",
													"                    8784,\r",
													"                    8621,\r",
													"                    8759,\r",
													"                    8796,\r",
													"                    8804,\r",
													"                    8808,\r",
													"                    8757,\r",
													"                    8586,\r",
													"                    8605,\r",
													"                    8615,\r",
													"                    8570,\r",
													"                    8835,\r",
													"                    9025,\r",
													"                    8657,\r",
													"                    8838,\r",
													"                    8846,\r",
													"                    8717,\r",
													"                    8857,\r",
													"                    8858,\r",
													"                    8472,\r",
													"                    9034,\r",
													"                    8971\r",
													"                ]\r",
													"            },\r",
													"            \"userRoleProgramBatchStatus\": {\r",
													"                \"type\": \"string\",\r",
													"                \"title\": \"The userRoleProgramBatchStatus Schema\",\r",
													"                \"examples\": [\r",
													"                    \"Active\",\r",
													"                    \"active\"\r",
													"                ]\r",
													"            }\r",
													"        },\r",
													"        \"examples\": [{\r",
													"            \"userId\": \"U01\",\r",
													"            \"roleId\": \"R01\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U01\",\r",
													"            \"roleId\": \"R01\",\r",
													"            \"programId\": 16213,\r",
													"            \"batchId\": 8448,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1067\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16794,\r",
													"            \"batchId\": 8719,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1097\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16872,\r",
													"            \"batchId\": 8749,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1136\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16816,\r",
													"            \"batchId\": 8756,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1158\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16907,\r",
													"            \"batchId\": 8776,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1162\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16911,\r",
													"            \"batchId\": 8777,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U07\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1138\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16884,\r",
													"            \"batchId\": 8784,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U295\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16586,\r",
													"            \"batchId\": 8621,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1160\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16854,\r",
													"            \"batchId\": 8759,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1190\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16930,\r",
													"            \"batchId\": 8796,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U34\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1209\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16937,\r",
													"            \"batchId\": 8804,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U19\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1214\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16938,\r",
													"            \"batchId\": 8808,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U24\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1185\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16839,\r",
													"            \"batchId\": 8757,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U727\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16505,\r",
													"            \"batchId\": 8586,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U765\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16527,\r",
													"            \"batchId\": 8605,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U782\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16551,\r",
													"            \"batchId\": 8615,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U693\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16213,\r",
													"            \"batchId\": 8570,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1231\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16945,\r",
													"            \"batchId\": 8835,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U38\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U2203\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 17236,\r",
													"            \"batchId\": 9025,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U958\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16677,\r",
													"            \"batchId\": 8657,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1235\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16949,\r",
													"            \"batchId\": 8838,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1247\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16955,\r",
													"            \"batchId\": 8846,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U983\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16785,\r",
													"            \"batchId\": 8717,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1279\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16957,\r",
													"            \"batchId\": 8857,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1325\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16960,\r",
													"            \"batchId\": 8858,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1337\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16839,\r",
													"            \"batchId\": 8757,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U270\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16243,\r",
													"            \"batchId\": 8472,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U2241\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 17252,\r",
													"            \"batchId\": 9034,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1835\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 17170,\r",
													"            \"batchId\": 8971,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        }]\r",
													"    },\r",
													"    \"examples\": [\r",
													"        [{\r",
													"            \"userId\": \"U01\",\r",
													"            \"roleId\": \"R01\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U01\",\r",
													"            \"roleId\": \"R01\",\r",
													"            \"programId\": 16213,\r",
													"            \"batchId\": 8448,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1067\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16794,\r",
													"            \"batchId\": 8719,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1097\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16872,\r",
													"            \"batchId\": 8749,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1136\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16816,\r",
													"            \"batchId\": 8756,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1158\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16907,\r",
													"            \"batchId\": 8776,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1162\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16911,\r",
													"            \"batchId\": 8777,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U07\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1138\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16884,\r",
													"            \"batchId\": 8784,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U295\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16586,\r",
													"            \"batchId\": 8621,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1160\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16854,\r",
													"            \"batchId\": 8759,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1190\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16930,\r",
													"            \"batchId\": 8796,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U34\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1209\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16937,\r",
													"            \"batchId\": 8804,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U19\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1214\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16938,\r",
													"            \"batchId\": 8808,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U24\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1185\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16839,\r",
													"            \"batchId\": 8757,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U727\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16505,\r",
													"            \"batchId\": 8586,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U765\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16527,\r",
													"            \"batchId\": 8605,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U782\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16551,\r",
													"            \"batchId\": 8615,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U693\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16213,\r",
													"            \"batchId\": 8570,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1231\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16945,\r",
													"            \"batchId\": 8835,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U38\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U2203\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 17236,\r",
													"            \"batchId\": 9025,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U958\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16677,\r",
													"            \"batchId\": 8657,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1235\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16949,\r",
													"            \"batchId\": 8838,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1247\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16955,\r",
													"            \"batchId\": 8846,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U983\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16785,\r",
													"            \"batchId\": 8717,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1279\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16957,\r",
													"            \"batchId\": 8857,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1325\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16960,\r",
													"            \"batchId\": 8858,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1337\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16839,\r",
													"            \"batchId\": 8757,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U270\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16243,\r",
													"            \"batchId\": 8472,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U2241\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 17252,\r",
													"            \"batchId\": 9034,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1835\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 17170,\r",
													"            \"batchId\": 8971,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        }]\r",
													"    ]\r",
													"}\r",
													"pm.test(\"Response body matches schema\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
													"}); }\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "ff9aca2c-1bb5-454c-94e3-f37b557c297a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"password\": \"Numpyninja@1\",\r\n  \"userLoginEmailId\": \"sdetorganizers@gmail.com\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BaseUrl}}/userRoleProgramBatchMap/:{userId}",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"userRoleProgramBatchMap",
												":{userId}"
											],
											"variable": [
												{
													"id": "c83a9458-9a67-4ee1-bac0-406ac0c320d9",
													"key": "{userId}",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"id": "77e856fd-e29f-4e39-8867-9bce50954028",
											"name": "Get Assigned Program/Batch of a User By User Id",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"password\": \"Numpyninja@1\",\r\n  \"userLoginEmailId\": \"sdetorganizers@gmail.com\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{BaseUrl}}/userRoleProgramBatchMap/U38"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "Cowboy"
												},
												{
													"key": "Report-To",
													"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1709844020&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=lwsSOT8CKxyf7VA%2F2La0TBZCIRV7YVtVxEi3wssWzZQ%3D\"}]}"
												},
												{
													"key": "Reporting-Endpoints",
													"value": "heroku-nel=https://nel.heroku.com/reports?ts=1709844020&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=lwsSOT8CKxyf7VA%2F2La0TBZCIRV7YVtVxEi3wssWzZQ%3D"
												},
												{
													"key": "Nel",
													"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Origin"
												},
												{
													"key": "Vary",
													"value": "Access-Control-Request-Method"
												},
												{
													"key": "Vary",
													"value": "Access-Control-Request-Headers"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "X-Xss-Protection",
													"value": "1; mode=block"
												},
												{
													"key": "Cache-Control",
													"value": "no-cache, no-store, max-age=0, must-revalidate"
												},
												{
													"key": "Pragma",
													"value": "no-cache"
												},
												{
													"key": "Expires",
													"value": "0"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=31536000 ; includeSubDomains"
												},
												{
													"key": "X-Frame-Options",
													"value": "DENY"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Thu, 07 Mar 2024 20:40:20 GMT"
												},
												{
													"key": "Via",
													"value": "1.1 vegur"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "[\n    {\n        \"userId\": \"U38\",\n        \"roleId\": \"R03\",\n        \"programId\": 16208,\n        \"batchId\": 8432,\n        \"userRoleProgramBatchStatus\": \"Active\"\n    }\n]"
										},
										{
											"id": "8a2b2b73-1e7b-4170-82ca-94966fbf2da8",
											"name": "Get Assigned Program/Batch of a User By User Id",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"password\": \"Numpyninja@1\",\r\n  \"userLoginEmailId\": \"sdetorganizers@gmail.com\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{BaseUrl}}/userRoleProgramBatchMap/U3888"
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "Cowboy"
												},
												{
													"key": "Report-To",
													"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1709844030&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=m2Hv5hddxHTPnY1%2FnaESD%2Be3CuU3HHjyDaNLsPS9cAk%3D\"}]}"
												},
												{
													"key": "Reporting-Endpoints",
													"value": "heroku-nel=https://nel.heroku.com/reports?ts=1709844030&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=m2Hv5hddxHTPnY1%2FnaESD%2Be3CuU3HHjyDaNLsPS9cAk%3D"
												},
												{
													"key": "Nel",
													"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Origin"
												},
												{
													"key": "Vary",
													"value": "Access-Control-Request-Method"
												},
												{
													"key": "Vary",
													"value": "Access-Control-Request-Headers"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "X-Xss-Protection",
													"value": "1; mode=block"
												},
												{
													"key": "Cache-Control",
													"value": "no-cache, no-store, max-age=0, must-revalidate"
												},
												{
													"key": "Pragma",
													"value": "no-cache"
												},
												{
													"key": "Expires",
													"value": "0"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=31536000 ; includeSubDomains"
												},
												{
													"key": "X-Frame-Options",
													"value": "DENY"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Thu, 07 Mar 2024 20:40:30 GMT"
												},
												{
													"key": "Via",
													"value": "1.1 vegur"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"message\": \"UserRoleProgramBatchMap not found with Id : U3888 \",\n    \"success\": false\n}"
										}
									]
								},
								{
									"name": "Get Assigned Program/Batch of a User By User Id -Special characters",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "aa1d86ce-2459-4169-8678-334e74ac1b73",
												"exec": [
													"// Get the response status code\r",
													"var statusCode = pm.response.code;\r",
													"// Check the status code and perform actions accordingly\r",
													"if (statusCode === 200) {\r",
													"    pm.test(\"Status code is 200 (Created)\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else if (statusCode === 404) {\r",
													"    pm.test(\"Status code is 404 (Not Found)\", function () {\r",
													"        pm.response.to.have.status(404);\r",
													"    });\r",
													"} else if (statusCode === 400) {\r",
													"    pm.test(\"Status code is 400 (Bad Request)\", function () {\r",
													"        pm.response.to.have.status(400);\r",
													"    });\r",
													"} else {\r",
													"    pm.test(\"Unexpected status code\", function () {\r",
													"        pm.expect.fail(\"Unexpected status code: \" + statusCode);\r",
													"    });\r",
													"}\r",
													"pm.test(\"Content-Type header is present\", ()=> {\r",
													"    pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													"pm.test(\"Content-Type header is application/json\", ()=> {\r",
													" pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains('application/json');\r",
													" });\r",
													"if(pm.response.code==200){\r",
													" var schema={\r",
													"    \"$schema\": \"https://json-schema.org/draft/2019-09/schema\",\r",
													"    \"$id\": \"http://example.com/example.json\",\r",
													"    \"type\": \"array\",\r",
													"    \"default\": [],\r",
													"    \"title\": \"Root Schema\",\r",
													"    \"items\": {\r",
													"        \"type\": \"object\",\r",
													"        \"title\": \"A Schema\",\r",
													"        \"required\": [\r",
													"            \"userId\",\r",
													"            \"roleId\",\r",
													"            \"programId\",\r",
													"            \"batchId\",\r",
													"            \"userRoleProgramBatchStatus\"\r",
													"        ],\r",
													"        \"properties\": {\r",
													"            \"userId\": {\r",
													"                \"type\": \"string\",\r",
													"                \"title\": \"The userId Schema\",\r",
													"                \"examples\": [\r",
													"                    \"U01\",\r",
													"                    \"U1067\",\r",
													"                    \"U1097\",\r",
													"                    \"U1136\",\r",
													"                    \"U1158\",\r",
													"                    \"U1162\",\r",
													"                    \"U07\",\r",
													"                    \"U1138\",\r",
													"                    \"U295\",\r",
													"                    \"U1160\",\r",
													"                    \"U1190\",\r",
													"                    \"U34\",\r",
													"                    \"U1209\",\r",
													"                    \"U19\",\r",
													"                    \"U1214\",\r",
													"                    \"U24\",\r",
													"                    \"U1185\",\r",
													"                    \"U727\",\r",
													"                    \"U765\",\r",
													"                    \"U782\",\r",
													"                    \"U693\",\r",
													"                    \"U1231\",\r",
													"                    \"U38\",\r",
													"                    \"U2203\",\r",
													"                    \"U958\",\r",
													"                    \"U1235\",\r",
													"                    \"U1247\",\r",
													"                    \"U983\",\r",
													"                    \"U1279\",\r",
													"                    \"U1325\",\r",
													"                    \"U1337\",\r",
													"                    \"U270\",\r",
													"                    \"U2241\",\r",
													"                    \"U1835\"\r",
													"                ]\r",
													"            },\r",
													"            \"roleId\": {\r",
													"                \"type\": \"string\",\r",
													"                \"title\": \"The roleId Schema\",\r",
													"                \"examples\": [\r",
													"                    \"R01\",\r",
													"                    \"R03\",\r",
													"                    \"R02\"\r",
													"                ]\r",
													"            },\r",
													"            \"programId\": {\r",
													"                \"type\": \"integer\",\r",
													"                \"title\": \"The programId Schema\",\r",
													"                \"examples\": [\r",
													"                    16208,\r",
													"                    16213,\r",
													"                    16794,\r",
													"                    16872,\r",
													"                    16816,\r",
													"                    16907,\r",
													"                    16911,\r",
													"                    16884,\r",
													"                    16586,\r",
													"                    16854,\r",
													"                    16930,\r",
													"                    16937,\r",
													"                    16938,\r",
													"                    16839,\r",
													"                    16505,\r",
													"                    16527,\r",
													"                    16551,\r",
													"                    16945,\r",
													"                    17236,\r",
													"                    16677,\r",
													"                    16949,\r",
													"                    16955,\r",
													"                    16785,\r",
													"                    16957,\r",
													"                    16960,\r",
													"                    16243,\r",
													"                    17252,\r",
													"                    17170\r",
													"                ]\r",
													"            },\r",
													"            \"batchId\": {\r",
													"                \"type\": \"integer\",\r",
													"                \"title\": \"The batchId Schema\",\r",
													"                \"examples\": [\r",
													"                    8432,\r",
													"                    8448,\r",
													"                    8719,\r",
													"                    8749,\r",
													"                    8756,\r",
													"                    8776,\r",
													"                    8777,\r",
													"                    8784,\r",
													"                    8621,\r",
													"                    8759,\r",
													"                    8796,\r",
													"                    8804,\r",
													"                    8808,\r",
													"                    8757,\r",
													"                    8586,\r",
													"                    8605,\r",
													"                    8615,\r",
													"                    8570,\r",
													"                    8835,\r",
													"                    9025,\r",
													"                    8657,\r",
													"                    8838,\r",
													"                    8846,\r",
													"                    8717,\r",
													"                    8857,\r",
													"                    8858,\r",
													"                    8472,\r",
													"                    9034,\r",
													"                    8971\r",
													"                ]\r",
													"            },\r",
													"            \"userRoleProgramBatchStatus\": {\r",
													"                \"type\": \"string\",\r",
													"                \"title\": \"The userRoleProgramBatchStatus Schema\",\r",
													"                \"examples\": [\r",
													"                    \"Active\",\r",
													"                    \"active\"\r",
													"                ]\r",
													"            }\r",
													"        },\r",
													"        \"examples\": [{\r",
													"            \"userId\": \"U01\",\r",
													"            \"roleId\": \"R01\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U01\",\r",
													"            \"roleId\": \"R01\",\r",
													"            \"programId\": 16213,\r",
													"            \"batchId\": 8448,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1067\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16794,\r",
													"            \"batchId\": 8719,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1097\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16872,\r",
													"            \"batchId\": 8749,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1136\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16816,\r",
													"            \"batchId\": 8756,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1158\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16907,\r",
													"            \"batchId\": 8776,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1162\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16911,\r",
													"            \"batchId\": 8777,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U07\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1138\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16884,\r",
													"            \"batchId\": 8784,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U295\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16586,\r",
													"            \"batchId\": 8621,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1160\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16854,\r",
													"            \"batchId\": 8759,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1190\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16930,\r",
													"            \"batchId\": 8796,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U34\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1209\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16937,\r",
													"            \"batchId\": 8804,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U19\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1214\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16938,\r",
													"            \"batchId\": 8808,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U24\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1185\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16839,\r",
													"            \"batchId\": 8757,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U727\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16505,\r",
													"            \"batchId\": 8586,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U765\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16527,\r",
													"            \"batchId\": 8605,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U782\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16551,\r",
													"            \"batchId\": 8615,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U693\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16213,\r",
													"            \"batchId\": 8570,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1231\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16945,\r",
													"            \"batchId\": 8835,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U38\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U2203\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 17236,\r",
													"            \"batchId\": 9025,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U958\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16677,\r",
													"            \"batchId\": 8657,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1235\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16949,\r",
													"            \"batchId\": 8838,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1247\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16955,\r",
													"            \"batchId\": 8846,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U983\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16785,\r",
													"            \"batchId\": 8717,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1279\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16957,\r",
													"            \"batchId\": 8857,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1325\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16960,\r",
													"            \"batchId\": 8858,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1337\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16839,\r",
													"            \"batchId\": 8757,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U270\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16243,\r",
													"            \"batchId\": 8472,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U2241\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 17252,\r",
													"            \"batchId\": 9034,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1835\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 17170,\r",
													"            \"batchId\": 8971,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        }]\r",
													"    },\r",
													"    \"examples\": [\r",
													"        [{\r",
													"            \"userId\": \"U01\",\r",
													"            \"roleId\": \"R01\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U01\",\r",
													"            \"roleId\": \"R01\",\r",
													"            \"programId\": 16213,\r",
													"            \"batchId\": 8448,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1067\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16794,\r",
													"            \"batchId\": 8719,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1097\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16872,\r",
													"            \"batchId\": 8749,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1136\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16816,\r",
													"            \"batchId\": 8756,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1158\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16907,\r",
													"            \"batchId\": 8776,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1162\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16911,\r",
													"            \"batchId\": 8777,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U07\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1138\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16884,\r",
													"            \"batchId\": 8784,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U295\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16586,\r",
													"            \"batchId\": 8621,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1160\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16854,\r",
													"            \"batchId\": 8759,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1190\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16930,\r",
													"            \"batchId\": 8796,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U34\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1209\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16937,\r",
													"            \"batchId\": 8804,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U19\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1214\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16938,\r",
													"            \"batchId\": 8808,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U24\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1185\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16839,\r",
													"            \"batchId\": 8757,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U727\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16505,\r",
													"            \"batchId\": 8586,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U765\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16527,\r",
													"            \"batchId\": 8605,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U782\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16551,\r",
													"            \"batchId\": 8615,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U693\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16213,\r",
													"            \"batchId\": 8570,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1231\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16945,\r",
													"            \"batchId\": 8835,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U38\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U2203\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 17236,\r",
													"            \"batchId\": 9025,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U958\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16677,\r",
													"            \"batchId\": 8657,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1235\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16949,\r",
													"            \"batchId\": 8838,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1247\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16955,\r",
													"            \"batchId\": 8846,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U983\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16785,\r",
													"            \"batchId\": 8717,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1279\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16957,\r",
													"            \"batchId\": 8857,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1325\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16960,\r",
													"            \"batchId\": 8858,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1337\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16839,\r",
													"            \"batchId\": 8757,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U270\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16243,\r",
													"            \"batchId\": 8472,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U2241\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 17252,\r",
													"            \"batchId\": 9034,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1835\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 17170,\r",
													"            \"batchId\": 8971,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        }]\r",
													"    ]\r",
													"}\r",
													"pm.test(\"Response body matches schema\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
													"}); }\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "4b4f3ed9-5751-445f-9b7b-9c3be8fb344d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"password\": \"Numpyninja@1\",\r\n  \"userLoginEmailId\": \"sdetorganizers@gmail.com\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BaseUrl}}/userRoleProgramBatchMap/:{userId}",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"userRoleProgramBatchMap",
												":{userId}"
											],
											"variable": [
												{
													"id": "533ac390-e7c0-4202-a6db-24dc084913dc",
													"key": "{userId}",
													"value": "%3237@"
												}
											]
										}
									},
									"response": [
										{
											"id": "55885e5e-0749-43d8-aba8-fe41c5f81331",
											"name": "Get Assigned Program/Batch of a User By User Id",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"password\": \"Numpyninja@1\",\r\n  \"userLoginEmailId\": \"sdetorganizers@gmail.com\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{BaseUrl}}/userRoleProgramBatchMap/U38"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "Cowboy"
												},
												{
													"key": "Report-To",
													"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1709844020&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=lwsSOT8CKxyf7VA%2F2La0TBZCIRV7YVtVxEi3wssWzZQ%3D\"}]}"
												},
												{
													"key": "Reporting-Endpoints",
													"value": "heroku-nel=https://nel.heroku.com/reports?ts=1709844020&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=lwsSOT8CKxyf7VA%2F2La0TBZCIRV7YVtVxEi3wssWzZQ%3D"
												},
												{
													"key": "Nel",
													"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Origin"
												},
												{
													"key": "Vary",
													"value": "Access-Control-Request-Method"
												},
												{
													"key": "Vary",
													"value": "Access-Control-Request-Headers"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "X-Xss-Protection",
													"value": "1; mode=block"
												},
												{
													"key": "Cache-Control",
													"value": "no-cache, no-store, max-age=0, must-revalidate"
												},
												{
													"key": "Pragma",
													"value": "no-cache"
												},
												{
													"key": "Expires",
													"value": "0"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=31536000 ; includeSubDomains"
												},
												{
													"key": "X-Frame-Options",
													"value": "DENY"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Thu, 07 Mar 2024 20:40:20 GMT"
												},
												{
													"key": "Via",
													"value": "1.1 vegur"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "[\n    {\n        \"userId\": \"U38\",\n        \"roleId\": \"R03\",\n        \"programId\": 16208,\n        \"batchId\": 8432,\n        \"userRoleProgramBatchStatus\": \"Active\"\n    }\n]"
										},
										{
											"id": "c06bed75-e4b3-44a5-99ea-e4fca3d59579",
											"name": "Get Assigned Program/Batch of a User By User Id",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"password\": \"Numpyninja@1\",\r\n  \"userLoginEmailId\": \"sdetorganizers@gmail.com\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{BaseUrl}}/userRoleProgramBatchMap/U3888"
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "Cowboy"
												},
												{
													"key": "Report-To",
													"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1709844030&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=m2Hv5hddxHTPnY1%2FnaESD%2Be3CuU3HHjyDaNLsPS9cAk%3D\"}]}"
												},
												{
													"key": "Reporting-Endpoints",
													"value": "heroku-nel=https://nel.heroku.com/reports?ts=1709844030&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=m2Hv5hddxHTPnY1%2FnaESD%2Be3CuU3HHjyDaNLsPS9cAk%3D"
												},
												{
													"key": "Nel",
													"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Origin"
												},
												{
													"key": "Vary",
													"value": "Access-Control-Request-Method"
												},
												{
													"key": "Vary",
													"value": "Access-Control-Request-Headers"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "X-Xss-Protection",
													"value": "1; mode=block"
												},
												{
													"key": "Cache-Control",
													"value": "no-cache, no-store, max-age=0, must-revalidate"
												},
												{
													"key": "Pragma",
													"value": "no-cache"
												},
												{
													"key": "Expires",
													"value": "0"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=31536000 ; includeSubDomains"
												},
												{
													"key": "X-Frame-Options",
													"value": "DENY"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Thu, 07 Mar 2024 20:40:30 GMT"
												},
												{
													"key": "Via",
													"value": "1.1 vegur"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"message\": \"UserRoleProgramBatchMap not found with Id : U3888 \",\n    \"success\": false\n}"
										}
									]
								},
								{
									"name": "Get Assigned Program/Batch of a User By User Id -non existing",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "aa1d86ce-2459-4169-8678-334e74ac1b73",
												"exec": [
													"// Get the response status code\r",
													"var statusCode = pm.response.code;\r",
													"// Check the status code and perform actions accordingly\r",
													"if (statusCode === 200) {\r",
													"    pm.test(\"Status code is 200 (Created)\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else if (statusCode === 404) {\r",
													"    pm.test(\"Status code is 404 (Not Found)\", function () {\r",
													"        pm.response.to.have.status(404);\r",
													"    });\r",
													"} else if (statusCode === 400) {\r",
													"    pm.test(\"Status code is 400 (Bad Request)\", function () {\r",
													"        pm.response.to.have.status(400);\r",
													"    });\r",
													"} else {\r",
													"    pm.test(\"Unexpected status code\", function () {\r",
													"        pm.expect.fail(\"Unexpected status code: \" + statusCode);\r",
													"    });\r",
													"}\r",
													"pm.test(\"Content-Type header is present\", ()=> {\r",
													"    pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													"pm.test(\"Content-Type header is application/json\", ()=> {\r",
													" pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains('application/json');\r",
													" });\r",
													"if(pm.response.code==200){\r",
													" var schema={\r",
													"    \"$schema\": \"https://json-schema.org/draft/2019-09/schema\",\r",
													"    \"$id\": \"http://example.com/example.json\",\r",
													"    \"type\": \"array\",\r",
													"    \"default\": [],\r",
													"    \"title\": \"Root Schema\",\r",
													"    \"items\": {\r",
													"        \"type\": \"object\",\r",
													"        \"title\": \"A Schema\",\r",
													"        \"required\": [\r",
													"            \"userId\",\r",
													"            \"roleId\",\r",
													"            \"programId\",\r",
													"            \"batchId\",\r",
													"            \"userRoleProgramBatchStatus\"\r",
													"        ],\r",
													"        \"properties\": {\r",
													"            \"userId\": {\r",
													"                \"type\": \"string\",\r",
													"                \"title\": \"The userId Schema\",\r",
													"                \"examples\": [\r",
													"                    \"U01\",\r",
													"                    \"U1067\",\r",
													"                    \"U1097\",\r",
													"                    \"U1136\",\r",
													"                    \"U1158\",\r",
													"                    \"U1162\",\r",
													"                    \"U07\",\r",
													"                    \"U1138\",\r",
													"                    \"U295\",\r",
													"                    \"U1160\",\r",
													"                    \"U1190\",\r",
													"                    \"U34\",\r",
													"                    \"U1209\",\r",
													"                    \"U19\",\r",
													"                    \"U1214\",\r",
													"                    \"U24\",\r",
													"                    \"U1185\",\r",
													"                    \"U727\",\r",
													"                    \"U765\",\r",
													"                    \"U782\",\r",
													"                    \"U693\",\r",
													"                    \"U1231\",\r",
													"                    \"U38\",\r",
													"                    \"U2203\",\r",
													"                    \"U958\",\r",
													"                    \"U1235\",\r",
													"                    \"U1247\",\r",
													"                    \"U983\",\r",
													"                    \"U1279\",\r",
													"                    \"U1325\",\r",
													"                    \"U1337\",\r",
													"                    \"U270\",\r",
													"                    \"U2241\",\r",
													"                    \"U1835\"\r",
													"                ]\r",
													"            },\r",
													"            \"roleId\": {\r",
													"                \"type\": \"string\",\r",
													"                \"title\": \"The roleId Schema\",\r",
													"                \"examples\": [\r",
													"                    \"R01\",\r",
													"                    \"R03\",\r",
													"                    \"R02\"\r",
													"                ]\r",
													"            },\r",
													"            \"programId\": {\r",
													"                \"type\": \"integer\",\r",
													"                \"title\": \"The programId Schema\",\r",
													"                \"examples\": [\r",
													"                    16208,\r",
													"                    16213,\r",
													"                    16794,\r",
													"                    16872,\r",
													"                    16816,\r",
													"                    16907,\r",
													"                    16911,\r",
													"                    16884,\r",
													"                    16586,\r",
													"                    16854,\r",
													"                    16930,\r",
													"                    16937,\r",
													"                    16938,\r",
													"                    16839,\r",
													"                    16505,\r",
													"                    16527,\r",
													"                    16551,\r",
													"                    16945,\r",
													"                    17236,\r",
													"                    16677,\r",
													"                    16949,\r",
													"                    16955,\r",
													"                    16785,\r",
													"                    16957,\r",
													"                    16960,\r",
													"                    16243,\r",
													"                    17252,\r",
													"                    17170\r",
													"                ]\r",
													"            },\r",
													"            \"batchId\": {\r",
													"                \"type\": \"integer\",\r",
													"                \"title\": \"The batchId Schema\",\r",
													"                \"examples\": [\r",
													"                    8432,\r",
													"                    8448,\r",
													"                    8719,\r",
													"                    8749,\r",
													"                    8756,\r",
													"                    8776,\r",
													"                    8777,\r",
													"                    8784,\r",
													"                    8621,\r",
													"                    8759,\r",
													"                    8796,\r",
													"                    8804,\r",
													"                    8808,\r",
													"                    8757,\r",
													"                    8586,\r",
													"                    8605,\r",
													"                    8615,\r",
													"                    8570,\r",
													"                    8835,\r",
													"                    9025,\r",
													"                    8657,\r",
													"                    8838,\r",
													"                    8846,\r",
													"                    8717,\r",
													"                    8857,\r",
													"                    8858,\r",
													"                    8472,\r",
													"                    9034,\r",
													"                    8971\r",
													"                ]\r",
													"            },\r",
													"            \"userRoleProgramBatchStatus\": {\r",
													"                \"type\": \"string\",\r",
													"                \"title\": \"The userRoleProgramBatchStatus Schema\",\r",
													"                \"examples\": [\r",
													"                    \"Active\",\r",
													"                    \"active\"\r",
													"                ]\r",
													"            }\r",
													"        },\r",
													"        \"examples\": [{\r",
													"            \"userId\": \"U01\",\r",
													"            \"roleId\": \"R01\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U01\",\r",
													"            \"roleId\": \"R01\",\r",
													"            \"programId\": 16213,\r",
													"            \"batchId\": 8448,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1067\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16794,\r",
													"            \"batchId\": 8719,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1097\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16872,\r",
													"            \"batchId\": 8749,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1136\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16816,\r",
													"            \"batchId\": 8756,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1158\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16907,\r",
													"            \"batchId\": 8776,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1162\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16911,\r",
													"            \"batchId\": 8777,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U07\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1138\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16884,\r",
													"            \"batchId\": 8784,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U295\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16586,\r",
													"            \"batchId\": 8621,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1160\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16854,\r",
													"            \"batchId\": 8759,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1190\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16930,\r",
													"            \"batchId\": 8796,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U34\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1209\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16937,\r",
													"            \"batchId\": 8804,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U19\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1214\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16938,\r",
													"            \"batchId\": 8808,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U24\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1185\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16839,\r",
													"            \"batchId\": 8757,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U727\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16505,\r",
													"            \"batchId\": 8586,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U765\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16527,\r",
													"            \"batchId\": 8605,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U782\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16551,\r",
													"            \"batchId\": 8615,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U693\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16213,\r",
													"            \"batchId\": 8570,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1231\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16945,\r",
													"            \"batchId\": 8835,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U38\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U2203\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 17236,\r",
													"            \"batchId\": 9025,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U958\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16677,\r",
													"            \"batchId\": 8657,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1235\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16949,\r",
													"            \"batchId\": 8838,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1247\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16955,\r",
													"            \"batchId\": 8846,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U983\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16785,\r",
													"            \"batchId\": 8717,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1279\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16957,\r",
													"            \"batchId\": 8857,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1325\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16960,\r",
													"            \"batchId\": 8858,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1337\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16839,\r",
													"            \"batchId\": 8757,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U270\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16243,\r",
													"            \"batchId\": 8472,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U2241\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 17252,\r",
													"            \"batchId\": 9034,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1835\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 17170,\r",
													"            \"batchId\": 8971,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        }]\r",
													"    },\r",
													"    \"examples\": [\r",
													"        [{\r",
													"            \"userId\": \"U01\",\r",
													"            \"roleId\": \"R01\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U01\",\r",
													"            \"roleId\": \"R01\",\r",
													"            \"programId\": 16213,\r",
													"            \"batchId\": 8448,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1067\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16794,\r",
													"            \"batchId\": 8719,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1097\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16872,\r",
													"            \"batchId\": 8749,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1136\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16816,\r",
													"            \"batchId\": 8756,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1158\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16907,\r",
													"            \"batchId\": 8776,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1162\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16911,\r",
													"            \"batchId\": 8777,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U07\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1138\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16884,\r",
													"            \"batchId\": 8784,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U295\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16586,\r",
													"            \"batchId\": 8621,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1160\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16854,\r",
													"            \"batchId\": 8759,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1190\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16930,\r",
													"            \"batchId\": 8796,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U34\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1209\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16937,\r",
													"            \"batchId\": 8804,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U19\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1214\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16938,\r",
													"            \"batchId\": 8808,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U24\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1185\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16839,\r",
													"            \"batchId\": 8757,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U727\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16505,\r",
													"            \"batchId\": 8586,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U765\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16527,\r",
													"            \"batchId\": 8605,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U782\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16551,\r",
													"            \"batchId\": 8615,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U693\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16213,\r",
													"            \"batchId\": 8570,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1231\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16945,\r",
													"            \"batchId\": 8835,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U38\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16208,\r",
													"            \"batchId\": 8432,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U2203\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 17236,\r",
													"            \"batchId\": 9025,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U958\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16677,\r",
													"            \"batchId\": 8657,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1235\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16949,\r",
													"            \"batchId\": 8838,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1247\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16955,\r",
													"            \"batchId\": 8846,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U983\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 16785,\r",
													"            \"batchId\": 8717,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1279\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16957,\r",
													"            \"batchId\": 8857,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1325\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16960,\r",
													"            \"batchId\": 8858,\r",
													"            \"userRoleProgramBatchStatus\": \"active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1337\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16839,\r",
													"            \"batchId\": 8757,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U270\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 16243,\r",
													"            \"batchId\": 8472,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U2241\",\r",
													"            \"roleId\": \"R02\",\r",
													"            \"programId\": 17252,\r",
													"            \"batchId\": 9034,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        },\r",
													"        {\r",
													"            \"userId\": \"U1835\",\r",
													"            \"roleId\": \"R03\",\r",
													"            \"programId\": 17170,\r",
													"            \"batchId\": 8971,\r",
													"            \"userRoleProgramBatchStatus\": \"Active\"\r",
													"        }]\r",
													"    ]\r",
													"}\r",
													"pm.test(\"Response body matches schema\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
													"}); }\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "111dc06f-1ffc-43a9-89eb-c3116bbfa1f9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"password\": \"Numpyninja@1\",\r\n  \"userLoginEmailId\": \"sdetorganizers@gmail.com\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BaseUrl}}/userRoleProgramBatchMap/:{userId}",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"userRoleProgramBatchMap",
												":{userId}"
											],
											"variable": [
												{
													"id": "be9fb1b8-5274-4709-b8de-0eef68ef4b6c",
													"key": "{userId}",
													"value": "U979"
												}
											]
										}
									},
									"response": [
										{
											"id": "bcb682be-4874-4844-818f-db81ec65fef8",
											"name": "Get Assigned Program/Batch of a User By User Id",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"password\": \"Numpyninja@1\",\r\n  \"userLoginEmailId\": \"sdetorganizers@gmail.com\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{BaseUrl}}/userRoleProgramBatchMap/U38"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "Cowboy"
												},
												{
													"key": "Report-To",
													"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1709844020&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=lwsSOT8CKxyf7VA%2F2La0TBZCIRV7YVtVxEi3wssWzZQ%3D\"}]}"
												},
												{
													"key": "Reporting-Endpoints",
													"value": "heroku-nel=https://nel.heroku.com/reports?ts=1709844020&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=lwsSOT8CKxyf7VA%2F2La0TBZCIRV7YVtVxEi3wssWzZQ%3D"
												},
												{
													"key": "Nel",
													"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Origin"
												},
												{
													"key": "Vary",
													"value": "Access-Control-Request-Method"
												},
												{
													"key": "Vary",
													"value": "Access-Control-Request-Headers"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "X-Xss-Protection",
													"value": "1; mode=block"
												},
												{
													"key": "Cache-Control",
													"value": "no-cache, no-store, max-age=0, must-revalidate"
												},
												{
													"key": "Pragma",
													"value": "no-cache"
												},
												{
													"key": "Expires",
													"value": "0"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=31536000 ; includeSubDomains"
												},
												{
													"key": "X-Frame-Options",
													"value": "DENY"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Thu, 07 Mar 2024 20:40:20 GMT"
												},
												{
													"key": "Via",
													"value": "1.1 vegur"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "[\n    {\n        \"userId\": \"U38\",\n        \"roleId\": \"R03\",\n        \"programId\": 16208,\n        \"batchId\": 8432,\n        \"userRoleProgramBatchStatus\": \"Active\"\n    }\n]"
										},
										{
											"id": "d60e2cf8-51bf-4469-9c5a-64c92f1fd620",
											"name": "Get Assigned Program/Batch of a User By User Id",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"password\": \"Numpyninja@1\",\r\n  \"userLoginEmailId\": \"sdetorganizers@gmail.com\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{BaseUrl}}/userRoleProgramBatchMap/U3888"
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "Cowboy"
												},
												{
													"key": "Report-To",
													"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1709844030&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=m2Hv5hddxHTPnY1%2FnaESD%2Be3CuU3HHjyDaNLsPS9cAk%3D\"}]}"
												},
												{
													"key": "Reporting-Endpoints",
													"value": "heroku-nel=https://nel.heroku.com/reports?ts=1709844030&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=m2Hv5hddxHTPnY1%2FnaESD%2Be3CuU3HHjyDaNLsPS9cAk%3D"
												},
												{
													"key": "Nel",
													"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Origin"
												},
												{
													"key": "Vary",
													"value": "Access-Control-Request-Method"
												},
												{
													"key": "Vary",
													"value": "Access-Control-Request-Headers"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "X-Xss-Protection",
													"value": "1; mode=block"
												},
												{
													"key": "Cache-Control",
													"value": "no-cache, no-store, max-age=0, must-revalidate"
												},
												{
													"key": "Pragma",
													"value": "no-cache"
												},
												{
													"key": "Expires",
													"value": "0"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=31536000 ; includeSubDomains"
												},
												{
													"key": "X-Frame-Options",
													"value": "DENY"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Thu, 07 Mar 2024 20:40:30 GMT"
												},
												{
													"key": "Via",
													"value": "1.1 vegur"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"message\": \"UserRoleProgramBatchMap not found with Id : U3888 \",\n    \"success\": false\n}"
										}
									]
								}
							],
							"id": "58c18876-9735-47c5-9436-daf1d337cbf5"
						},
						{
							"name": "Invalid-Delete All Programs/Batches assigned to the User By UserId",
							"item": [
								{
									"name": "Delete All Programs/Batches assigned to the User By User Id -String",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ed282a42-06e8-4665-8b93-9f7c310798b8",
												"exec": [
													"// Get the response status code\r",
													"var statusCode = pm.response.code;\r",
													"// Check the status code and perform actions accordingly\r",
													"if (statusCode === 200) {\r",
													"    pm.test(\"Status code is 200 (Created)\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else if (statusCode === 404) {\r",
													"    pm.test(\"Status code is 404 (Not Found)\", function () {\r",
													"        pm.response.to.have.status(404);\r",
													"    });\r",
													"}\r",
													"\r",
													"pm.test(\"Content-Type  header is appliaction/json\", ()=> {\r",
													"     pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"    });\r",
													"\r",
													"var response = pm.response.json();\r",
													"pm.test(\"Content-Type header is present\", () => {\r",
													" pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "63a99e15-22d3-417f-886b-0070e592ad95",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"password\": \"Numpyninja@1\",\r\n  \"userLoginEmailId\": \"sdetorganizers@gmail.com\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BaseUrl}}/userRoleProgramBatchMap/deleteAll/:{{userId}}",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"userRoleProgramBatchMap",
												"deleteAll",
												":{{userId}}"
											],
											"variable": [
												{
													"id": "7ab16b0e-a859-4dd2-a314-aa211e544188",
													"key": "{{userId}}",
													"value": "ranjitha"
												}
											]
										}
									},
									"response": [
										{
											"id": "1977d2f7-f0f7-4590-9dbc-c31c935724fb",
											"name": "Delete All Programs/Batches assigned to the User By UserId",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"password\": \"Numpyninja@1\",\r\n  \"userLoginEmailId\": \"sdetorganizers@gmail.com\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{BaseUrl}}/userRoleProgramBatchMap/deleteAll/U3411"
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "Cowboy"
												},
												{
													"key": "Report-To",
													"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1709844044&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=WpxPauwesOoYE%2F3u%2FYsaR%2BlCAmhfGi6J%2BfuakLddFnY%3D\"}]}"
												},
												{
													"key": "Reporting-Endpoints",
													"value": "heroku-nel=https://nel.heroku.com/reports?ts=1709844044&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=WpxPauwesOoYE%2F3u%2FYsaR%2BlCAmhfGi6J%2BfuakLddFnY%3D"
												},
												{
													"key": "Nel",
													"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Origin"
												},
												{
													"key": "Vary",
													"value": "Access-Control-Request-Method"
												},
												{
													"key": "Vary",
													"value": "Access-Control-Request-Headers"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "X-Xss-Protection",
													"value": "1; mode=block"
												},
												{
													"key": "Cache-Control",
													"value": "no-cache, no-store, max-age=0, must-revalidate"
												},
												{
													"key": "Pragma",
													"value": "no-cache"
												},
												{
													"key": "Expires",
													"value": "0"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=31536000 ; includeSubDomains"
												},
												{
													"key": "X-Frame-Options",
													"value": "DENY"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Thu, 07 Mar 2024 20:40:44 GMT"
												},
												{
													"key": "Via",
													"value": "1.1 vegur"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"message\": \"UserRoleProgramBatchMap not found with id : U3411 \",\n    \"success\": false\n}"
										}
									]
								},
								{
									"name": "Delete All Programs/Batches assigned to the User By User Id -Blank",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e01764b2-ee66-4b5a-b4ae-ae0be0a40372",
												"exec": [
													"// Get the response status code\r",
													"var statusCode = pm.response.code;\r",
													"// Check the status code and perform actions accordingly\r",
													"if (statusCode === 200) {\r",
													"    pm.test(\"Status code is 200 (Created)\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else if (statusCode === 404) {\r",
													"    pm.test(\"Status code is 404 (Not Found)\", function () {\r",
													"        pm.response.to.have.status(404);\r",
													"    });\r",
													"}\r",
													"\r",
													"pm.test(\"Content-Type  header is appliaction/json\", ()=> {\r",
													"     pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"    });\r",
													"\r",
													"var response = pm.response.json();\r",
													"pm.test(\"Content-Type header is present\", () => {\r",
													" pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "90f45458-b76e-4e95-a4b3-85196d8f3ad6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"password\": \"Numpyninja@1\",\r\n  \"userLoginEmailId\": \"sdetorganizers@gmail.com\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BaseUrl}}/userRoleProgramBatchMap/deleteAll/:{{userId}}",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"userRoleProgramBatchMap",
												"deleteAll",
												":{{userId}}"
											],
											"variable": [
												{
													"id": "78215bc1-71ce-404e-8e29-64518df73640",
													"key": "{{userId}}",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"id": "c28f4038-3ded-417e-a3a8-7288f824c3ab",
											"name": "Delete All Programs/Batches assigned to the User By UserId",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"password\": \"Numpyninja@1\",\r\n  \"userLoginEmailId\": \"sdetorganizers@gmail.com\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{BaseUrl}}/userRoleProgramBatchMap/deleteAll/U3411"
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "Cowboy"
												},
												{
													"key": "Report-To",
													"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1709844044&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=WpxPauwesOoYE%2F3u%2FYsaR%2BlCAmhfGi6J%2BfuakLddFnY%3D\"}]}"
												},
												{
													"key": "Reporting-Endpoints",
													"value": "heroku-nel=https://nel.heroku.com/reports?ts=1709844044&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=WpxPauwesOoYE%2F3u%2FYsaR%2BlCAmhfGi6J%2BfuakLddFnY%3D"
												},
												{
													"key": "Nel",
													"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Origin"
												},
												{
													"key": "Vary",
													"value": "Access-Control-Request-Method"
												},
												{
													"key": "Vary",
													"value": "Access-Control-Request-Headers"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "X-Xss-Protection",
													"value": "1; mode=block"
												},
												{
													"key": "Cache-Control",
													"value": "no-cache, no-store, max-age=0, must-revalidate"
												},
												{
													"key": "Pragma",
													"value": "no-cache"
												},
												{
													"key": "Expires",
													"value": "0"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=31536000 ; includeSubDomains"
												},
												{
													"key": "X-Frame-Options",
													"value": "DENY"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Thu, 07 Mar 2024 20:40:44 GMT"
												},
												{
													"key": "Via",
													"value": "1.1 vegur"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"message\": \"UserRoleProgramBatchMap not found with id : U3411 \",\n    \"success\": false\n}"
										}
									]
								},
								{
									"name": "Delete All Programs/Batches assigned to the User By User Id -non existing",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "019d9a14-37a5-493b-9363-9efe5e52c4e8",
												"exec": [
													"// Get the response status code\r",
													"var statusCode = pm.response.code;\r",
													"// Check the status code and perform actions accordingly\r",
													"if (statusCode === 200) {\r",
													"    pm.test(\"Status code is 200 (Created)\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else if (statusCode === 404) {\r",
													"    pm.test(\"Status code is 404 (Not Found)\", function () {\r",
													"        pm.response.to.have.status(404);\r",
													"    });\r",
													"}\r",
													"\r",
													"pm.test(\"Content-Type  header is appliaction/json\", ()=> {\r",
													"     pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"    });\r",
													"\r",
													"var response = pm.response.json();\r",
													"pm.test(\"Content-Type header is present\", () => {\r",
													" pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "60fada28-00d6-4af4-b9c1-23846b691fad",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"password\": \"Numpyninja@1\",\r\n  \"userLoginEmailId\": \"sdetorganizers@gmail.com\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BaseUrl}}/userRoleProgramBatchMap/deleteAll/:{{userId}}",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"userRoleProgramBatchMap",
												"deleteAll",
												":{{userId}}"
											],
											"variable": [
												{
													"key": "{{userId}}",
													"value": "U976"
												}
											]
										}
									},
									"response": [
										{
											"id": "050d20db-b88f-47d7-8e67-98fa50f69c41",
											"name": "Delete All Programs/Batches assigned to the User By UserId",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"password\": \"Numpyninja@1\",\r\n  \"userLoginEmailId\": \"sdetorganizers@gmail.com\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{BaseUrl}}/userRoleProgramBatchMap/deleteAll/U3411"
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "Cowboy"
												},
												{
													"key": "Report-To",
													"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1709844044&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=WpxPauwesOoYE%2F3u%2FYsaR%2BlCAmhfGi6J%2BfuakLddFnY%3D\"}]}"
												},
												{
													"key": "Reporting-Endpoints",
													"value": "heroku-nel=https://nel.heroku.com/reports?ts=1709844044&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=WpxPauwesOoYE%2F3u%2FYsaR%2BlCAmhfGi6J%2BfuakLddFnY%3D"
												},
												{
													"key": "Nel",
													"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Origin"
												},
												{
													"key": "Vary",
													"value": "Access-Control-Request-Method"
												},
												{
													"key": "Vary",
													"value": "Access-Control-Request-Headers"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "X-Xss-Protection",
													"value": "1; mode=block"
												},
												{
													"key": "Cache-Control",
													"value": "no-cache, no-store, max-age=0, must-revalidate"
												},
												{
													"key": "Pragma",
													"value": "no-cache"
												},
												{
													"key": "Expires",
													"value": "0"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=31536000 ; includeSubDomains"
												},
												{
													"key": "X-Frame-Options",
													"value": "DENY"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Thu, 07 Mar 2024 20:40:44 GMT"
												},
												{
													"key": "Via",
													"value": "1.1 vegur"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"message\": \"UserRoleProgramBatchMap not found with id : U3411 \",\n    \"success\": false\n}"
										}
									]
								},
								{
									"name": "Delete All Programs/Batches assigned to the User By User Id -special char",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bb487d11-aebc-4f20-b692-55c7824f059c",
												"exec": [
													"// Get the response status code\r",
													"var statusCode = pm.response.code;\r",
													"// Check the status code and perform actions accordingly\r",
													"if (statusCode === 200) {\r",
													"    pm.test(\"Status code is 200 (Created)\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else if (statusCode === 404) {\r",
													"    pm.test(\"Status code is 404 (Not Found)\", function () {\r",
													"        pm.response.to.have.status(404);\r",
													"    });\r",
													"}\r",
													"\r",
													"pm.test(\"Content-Type  header is appliaction/json\", ()=> {\r",
													"     pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"    });\r",
													"\r",
													"var response = pm.response.json();\r",
													"pm.test(\"Content-Type header is present\", () => {\r",
													" pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "a8c186f8-5bed-41df-876f-cf49bc1cf018",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"password\": \"Numpyninja@1\",\r\n  \"userLoginEmailId\": \"sdetorganizers@gmail.com\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BaseUrl}}/userRoleProgramBatchMap/deleteAll/:{{userId}}",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"userRoleProgramBatchMap",
												"deleteAll",
												":{{userId}}"
											],
											"variable": [
												{
													"id": "adf770da-f404-4fdb-96ed-2f8c46afb743",
													"key": "{{userId}}",
													"value": "%365$$"
												}
											]
										}
									},
									"response": [
										{
											"id": "c74ea274-f1e9-4453-9618-36ebaf1e64db",
											"name": "Delete All Programs/Batches assigned to the User By UserId",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"password\": \"Numpyninja@1\",\r\n  \"userLoginEmailId\": \"sdetorganizers@gmail.com\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{BaseUrl}}/userRoleProgramBatchMap/deleteAll/U3411"
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "Cowboy"
												},
												{
													"key": "Report-To",
													"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1709844044&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=WpxPauwesOoYE%2F3u%2FYsaR%2BlCAmhfGi6J%2BfuakLddFnY%3D\"}]}"
												},
												{
													"key": "Reporting-Endpoints",
													"value": "heroku-nel=https://nel.heroku.com/reports?ts=1709844044&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=WpxPauwesOoYE%2F3u%2FYsaR%2BlCAmhfGi6J%2BfuakLddFnY%3D"
												},
												{
													"key": "Nel",
													"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Origin"
												},
												{
													"key": "Vary",
													"value": "Access-Control-Request-Method"
												},
												{
													"key": "Vary",
													"value": "Access-Control-Request-Headers"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "X-Xss-Protection",
													"value": "1; mode=block"
												},
												{
													"key": "Cache-Control",
													"value": "no-cache, no-store, max-age=0, must-revalidate"
												},
												{
													"key": "Pragma",
													"value": "no-cache"
												},
												{
													"key": "Expires",
													"value": "0"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=31536000 ; includeSubDomains"
												},
												{
													"key": "X-Frame-Options",
													"value": "DENY"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Thu, 07 Mar 2024 20:40:44 GMT"
												},
												{
													"key": "Via",
													"value": "1.1 vegur"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"message\": \"UserRoleProgramBatchMap not found with id : U3411 \",\n    \"success\": false\n}"
										}
									]
								},
								{
									"name": "Delete All Programs/Batches assigned to the User By User Id -Alphanumeric",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "16a4de57-53bc-4605-bd1f-744cee061c45",
												"exec": [
													"// Get the response status code\r",
													"var statusCode = pm.response.code;\r",
													"// Check the status code and perform actions accordingly\r",
													"if (statusCode === 200) {\r",
													"    pm.test(\"Status code is 200 (Created)\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"} else if (statusCode === 404) {\r",
													"    pm.test(\"Status code is 404 (Not Found)\", function () {\r",
													"        pm.response.to.have.status(404);\r",
													"    });\r",
													"}\r",
													"\r",
													"pm.test(\"Content-Type  header is appliaction/json\", ()=> {\r",
													"     pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"    });\r",
													"\r",
													"var response = pm.response.json();\r",
													"pm.test(\"Content-Type header is present\", () => {\r",
													" pm.response.to.have.header(\"Content-Type\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "1961cab3-247d-481e-b8cd-3af397b2e075",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"password\": \"Numpyninja@1\",\r\n  \"userLoginEmailId\": \"sdetorganizers@gmail.com\"\r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BaseUrl}}/userRoleProgramBatchMap/deleteAll/:{{userId}}",
											"host": [
												"{{BaseUrl}}"
											],
											"path": [
												"userRoleProgramBatchMap",
												"deleteAll",
												":{{userId}}"
											],
											"variable": [
												{
													"id": "e6c93bf7-1f62-4052-8e35-be79bde04e68",
													"key": "{{userId}}",
													"value": "Abcd23"
												}
											]
										}
									},
									"response": [
										{
											"id": "805b77fb-8e32-4405-b4ad-0b9087a5854f",
											"name": "Delete All Programs/Batches assigned to the User By UserId",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"password\": \"Numpyninja@1\",\r\n  \"userLoginEmailId\": \"sdetorganizers@gmail.com\"\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{BaseUrl}}/userRoleProgramBatchMap/deleteAll/U3411"
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "Cowboy"
												},
												{
													"key": "Report-To",
													"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1709844044&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=WpxPauwesOoYE%2F3u%2FYsaR%2BlCAmhfGi6J%2BfuakLddFnY%3D\"}]}"
												},
												{
													"key": "Reporting-Endpoints",
													"value": "heroku-nel=https://nel.heroku.com/reports?ts=1709844044&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=WpxPauwesOoYE%2F3u%2FYsaR%2BlCAmhfGi6J%2BfuakLddFnY%3D"
												},
												{
													"key": "Nel",
													"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Origin"
												},
												{
													"key": "Vary",
													"value": "Access-Control-Request-Method"
												},
												{
													"key": "Vary",
													"value": "Access-Control-Request-Headers"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "X-Xss-Protection",
													"value": "1; mode=block"
												},
												{
													"key": "Cache-Control",
													"value": "no-cache, no-store, max-age=0, must-revalidate"
												},
												{
													"key": "Pragma",
													"value": "no-cache"
												},
												{
													"key": "Expires",
													"value": "0"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=31536000 ; includeSubDomains"
												},
												{
													"key": "X-Frame-Options",
													"value": "DENY"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Date",
													"value": "Thu, 07 Mar 2024 20:40:44 GMT"
												},
												{
													"key": "Via",
													"value": "1.1 vegur"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"message\": \"UserRoleProgramBatchMap not found with id : U3411 \",\n    \"success\": false\n}"
										}
									]
								}
							],
							"id": "c9faa747-255e-4ba6-ad0f-b1f0757160f3"
						}
					],
					"id": "f27d760b-3fb1-45a1-bf36-139c7a4d88c9",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a1524ea5-dbed-418c-bccb-d639ca47d502",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "48a436f7-66da-478a-bbc6-bf68e79a376c",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"id": "a168713a-edd2-4c9a-b595-17cc5ca608bc",
			"auth": {
				"type": "bearer",
				"bearer": {
					"token": "{{token}}"
				}
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "54678dcb-6d2e-41dd-b8fa-ccbd31e804ca",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "8dc31904-3989-4f74-b1a5-3b49abe78c57",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": {
			"token": "{{token}}"
		}
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "ca82a013-7551-41ed-ae49-0248e19501ca",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "b5d8f81e-b9fb-49fd-b659-b7ee5b96de6b",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "BaseUrl",
			"value": "https://lms-marchapi-hackathon-a258d2bbd43b.herokuapp.com/lms"
		},
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "password",
			"value": "Numpyninja@1",
			"type": "string"
		},
		{
			"key": "loginEmailId",
			"value": "sdetorganizers@gmail.com",
			"type": "string"
		},
		{
			"key": "userId",
			"value": ""
		},
		{
			"key": "programID1",
			"value": ""
		},
		{
			"key": "batchID",
			"value": ""
		},
		{
			"key": "batchName",
			"value": ""
		},
		{
			"key": "roleId",
			"value": ""
		},
		{
			"key": "programID2",
			"value": ""
		},
		{
			"key": "batchID1",
			"value": ""
		},
		{
			"key": "programName1",
			"value": ""
		},
		{
			"key": "roleId2",
			"value": ""
		},
		{
			"key": "programName2",
			"value": ""
		}
	]
}